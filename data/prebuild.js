$p.wsql.alasql('USE md; CREATE TABLE IF NOT EXISTS `ireg_margin_coefficients` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, `price_group` CHAR, `key` CHAR, `condition_formula` CHAR, `marginality` FLOAT, `marginality_min` FLOAT, `marginality_internal` FLOAT, `price_type_first_cost` CHAR, `price_type_sale` CHAR, `price_type_internal` CHAR, `formula` CHAR, `sale_formula` CHAR, `internal_formula` CHAR, `external_formula` CHAR, `extra_charge_external` FLOAT, `discount_external` FLOAT, `discount` FLOAT, `note` CHAR); CREATE TABLE IF NOT EXISTS `ireg_currency_courses` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, `currency` CHAR, `period` Date, `course` FLOAT, `multiplicity` INT); CREATE TABLE IF NOT EXISTS `ireg_buyers_order_states` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, `invoice` CHAR, `state` CHAR, `event_date` Date, `СуммаОплаты` FLOAT, `ПроцентОплаты` INT, `СуммаОтгрузки` FLOAT, `ПроцентОтгрузки` INT, `СуммаДолга` FLOAT, `ПроцентДолга` INT, `ЕстьРасхожденияОрдерНакладная` BOOLEAN); CREATE TABLE IF NOT EXISTS `ireg_log` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, `date` INT, `sequence` INT, `class` CHAR, `note` CHAR, `obj` CHAR); CREATE TABLE IF NOT EXISTS `doc_planning_event` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `phase` CHAR, `key` CHAR, `recipient` CHAR, `calc_order` CHAR, `partner` CHAR, `project` CHAR, `Основание` CHAR, `note` CHAR, `ts_executors` JSON, `ts_planning` JSON); CREATE TABLE IF NOT EXISTS `doc_nom_prices_setup` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `price_type` CHAR, `currency` CHAR, `responsible` CHAR, `note` CHAR, `ts_goods` JSON); CREATE TABLE IF NOT EXISTS `doc_selling` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `organization` CHAR, `partner` CHAR, `department` CHAR, `warehouse` CHAR, `doc_amount` FLOAT, `responsible` CHAR, `note` CHAR, `ts_goods` JSON, `ts_services` JSON, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `doc_credit_cash_order` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `organization` CHAR, `partner` CHAR, `partner_T` CHAR, `department` CHAR, `cashbox` CHAR, `doc_amount` FLOAT, `responsible` CHAR, `note` CHAR, `ts_payment_details` JSON, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `doc_debit_cash_order` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `organization` CHAR, `partner` CHAR, `partner_T` CHAR, `department` CHAR, `cashbox` CHAR, `doc_amount` FLOAT, `responsible` CHAR, `note` CHAR, `ts_payment_details` JSON, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `doc_credit_bank_order` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `organization` CHAR, `partner` CHAR, `department` CHAR, `doc_amount` FLOAT, `responsible` CHAR, `note` CHAR, `ts_payment_details` JSON, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `doc_debit_bank_order` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `organization` CHAR, `partner` CHAR, `department` CHAR, `doc_amount` FLOAT, `responsible` CHAR, `note` CHAR, `ts_payment_details` JSON, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `doc_work_centers_performance` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `start_date` Date, `expiration_date` Date, `responsible` CHAR, `note` CHAR, `ts_planning` JSON); CREATE TABLE IF NOT EXISTS `doc_credit_card_order` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `organization` CHAR, `partner` CHAR, `department` CHAR, `doc_amount` FLOAT, `responsible` CHAR, `note` CHAR, `ts_payment_details` JSON, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `doc_calc_order` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `number_internal` CHAR, `project` CHAR, `organization` CHAR, `partner` CHAR, `client_of_dealer` CHAR, `contract` CHAR, `bank_account` CHAR, `note` CHAR, `manager` CHAR, `leading_manager` CHAR, `department` CHAR, `warehouse` CHAR, `doc_amount` FLOAT, `amount_operation` FLOAT, `amount_internal` FLOAT, `accessory_characteristic` CHAR, `sys_profile` CHAR, `sys_furn` CHAR, `phone` CHAR, `delivery_area` CHAR, `shipping_address` CHAR, `coordinates` CHAR, `address_fields` CHAR, `difficult` BOOLEAN, `vat_consider` BOOLEAN, `vat_included` BOOLEAN, `settlements_course` FLOAT, `settlements_multiplicity` INT, `extra_charge_external` FLOAT, `obj_delivery_state` CHAR, `category` CHAR, `ts_production` JSON, `ts_extra_fields` JSON, `ts_contact_information` JSON, `ts_planning` JSON); CREATE TABLE IF NOT EXISTS `doc_work_centers_task` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `responsible` CHAR, `key` CHAR, `note` CHAR, `recipient` CHAR, `ДеловаяОбрезь` INT, `ts_planning` JSON, `ts_Потребность` JSON, `ts_Обрезь` JSON, `ts_Раскрой` JSON); CREATE TABLE IF NOT EXISTS `doc_purchase` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `organization` CHAR, `partner` CHAR, `department` CHAR, `warehouse` CHAR, `doc_amount` FLOAT, `responsible` CHAR, `note` CHAR, `ts_goods` JSON, `ts_services` JSON, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `doc_registers_correction` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `original_doc_type` CHAR, `responsible` CHAR, `note` CHAR, `partner` CHAR, `ts_registers_table` JSON); CREATE TABLE IF NOT EXISTS `cat_delivery_directions` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `predefined_name` CHAR, `ts_composition` JSON); CREATE TABLE IF NOT EXISTS `cat_nonstandard_attributes` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `crooked` BOOLEAN, `colored` BOOLEAN, `lay` BOOLEAN, `made_to_order` BOOLEAN, `packing` BOOLEAN, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_insert_bind` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `key` CHAR, `zone` INT, `predefined_name` CHAR, `ts_production` JSON, `ts_inserts` JSON); CREATE TABLE IF NOT EXISTS `cat_nom_groups` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `vat_rate` CHAR, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_price_groups` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `definition` CHAR, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_characteristics` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `x` FLOAT, `y` FLOAT, `z` FLOAT, `s` FLOAT, `clr` CHAR, `weight` FLOAT, `calc_order` CHAR, `product` INT, `leading_product` CHAR, `leading_elm` INT, `origin` CHAR, `note` CHAR, `partner` CHAR, `sys` CHAR, `predefined_name` CHAR, `owner` CHAR, `ts_constructions` JSON, `ts_coordinates` JSON, `ts_inserts` JSON, `ts_params` JSON, `ts_cnn_elmnts` JSON, `ts_glass_specification` JSON, `ts_extra_fields` JSON, `ts_glasses` JSON, `ts_specification` JSON); CREATE TABLE IF NOT EXISTS `cat_individuals` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `birth_date` Date, `inn` CHAR, `imns_code` CHAR, `note` CHAR, `pfr_number` CHAR, `sex` CHAR, `birth_place` CHAR, `ОсновноеИзображение` CHAR, `Фамилия` CHAR, `Имя` CHAR, `Отчество` CHAR, `ФамилияРП` CHAR, `ИмяРП` CHAR, `ОтчествоРП` CHAR, `ОснованиеРП` CHAR, `ДолжностьРП` CHAR, `Должность` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_contact_information` JSON); CREATE TABLE IF NOT EXISTS `cat_nom_prices_types` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `price_currency` CHAR, `discount_percent` FLOAT, `vat_price_included` BOOLEAN, `rounding_order` CHAR, `rounding_in_a_big_way` BOOLEAN, `note` CHAR, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_cash_flow_articles` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `definition` CHAR, `sorting_field` INT, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_work_shifts` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `predefined_name` CHAR, `ts_work_shift_periodes` JSON); CREATE TABLE IF NOT EXISTS `cat_stores` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `note` CHAR, `department` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `cat_projects` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `start` Date, `finish` Date, `launch` Date, `readiness` Date, `finished` BOOLEAN, `responsible` CHAR, `note` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `cat_users` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `user_ib_uid` CHAR, `department` CHAR, `individual_person` CHAR, `note` CHAR, `user_fresh_uid` CHAR, `invalid` BOOLEAN, `ancillary` BOOLEAN, `id` CHAR, `prefix` CHAR, `suffix` CHAR, `direct` BOOLEAN, `predefined_name` CHAR, `ts_extra_fields` JSON, `ts_contact_information` JSON, `ts_acl_objs` JSON); CREATE TABLE IF NOT EXISTS `cat_divisions` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `main_project` CHAR, `sorting` INT, `predefined_name` CHAR, `parent` CHAR, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `cat_color_price_groups` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `color_price_group_destination` CHAR, `predefined_name` CHAR, `ts_price_groups` JSON, `ts_clr_conformity` JSON); CREATE TABLE IF NOT EXISTS `cat_clrs` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `ral` CHAR, `machine_tools_clr` CHAR, `clr_str` CHAR, `clr_out` CHAR, `clr_in` CHAR, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_furns` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `flap_weight_max` INT, `left_right` BOOLEAN, `is_set` BOOLEAN, `is_sliding` BOOLEAN, `furn_set` CHAR, `side_count` INT, `handle_side` INT, `open_type` CHAR, `name_short` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_open_tunes` JSON, `ts_specification` JSON, `ts_selection_params` JSON, `ts_specification_restrictions` JSON, `ts_colors` JSON); CREATE TABLE IF NOT EXISTS `cat_cnns` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `priority` INT, `amin` INT, `amax` INT, `sd1` CHAR, `sz` FLOAT, `cnn_type` CHAR, `ahmin` INT, `ahmax` INT, `lmin` INT, `lmax` INT, `tmin` INT, `tmax` INT, `var_layers` BOOLEAN, `for_direct_profile_only` INT, `art1vert` BOOLEAN, `art1glass` BOOLEAN, `art2glass` BOOLEAN, `note` CHAR, `predefined_name` CHAR, `ts_specification` JSON, `ts_cnn_elmnts` JSON, `ts_selection_params` JSON); CREATE TABLE IF NOT EXISTS `cat_delivery_areas` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `country` CHAR, `region` CHAR, `city` CHAR, `latitude` FLOAT, `longitude` FLOAT, `ind` CHAR, `delivery_area` CHAR, `specify_area_by_geocoder` BOOLEAN, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_production_params` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `default_clr` CHAR, `clr_group` CHAR, `tmin` INT, `tmax` INT, `allow_open_cnn` BOOLEAN, `flap_pos_by_impost` BOOLEAN, `predefined_name` CHAR, `parent` CHAR, `ts_elmnts` JSON, `ts_production` JSON, `ts_product_params` JSON, `ts_furn_params` JSON, `ts_base_blocks` JSON); CREATE TABLE IF NOT EXISTS `cat_parameters_keys` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `priority` INT, `note` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_params` JSON); CREATE TABLE IF NOT EXISTS `cat_inserts` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `insert_type` CHAR, `clr` CHAR, `lmin` INT, `lmax` INT, `hmin` INT, `hmax` INT, `smin` FLOAT, `smax` FLOAT, `for_direct_profile_only` INT, `ahmin` INT, `ahmax` INT, `priority` INT, `mmin` INT, `mmax` INT, `impost_fixation` CHAR, `shtulp_fixation` BOOLEAN, `can_rotate` BOOLEAN, `sizeb` FLOAT, `clr_group` CHAR, `is_order_row` CHAR, `note` CHAR, `insert_glass_type` CHAR, `available` BOOLEAN, `predefined_name` CHAR, `ts_specification` JSON, `ts_selection_params` JSON); CREATE TABLE IF NOT EXISTS `cat_organizations` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `prefix` CHAR, `individual_legal` CHAR, `individual_entrepreneur` CHAR, `inn` CHAR, `kpp` CHAR, `main_bank_account` CHAR, `main_cashbox` CHAR, `certificate_series_number` CHAR, `certificate_date_issue` Date, `certificate_authority_name` CHAR, `certificate_authority_code` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_contact_information` JSON, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `cat_nom` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `article` CHAR, `name_full` CHAR, `base_unit` CHAR, `storage_unit` CHAR, `nom_kind` CHAR, `nom_group` CHAR, `vat_rate` CHAR, `note` CHAR, `price_group` CHAR, `elm_type` CHAR, `len` FLOAT, `width` FLOAT, `thickness` FLOAT, `sizefurn` FLOAT, `sizefaltz` FLOAT, `density` FLOAT, `volume` FLOAT, `arc_elongation` FLOAT, `loss_factor` FLOAT, `rounding_quantity` INT, `clr` CHAR, `cutting_optimization_type` CHAR, `crooked` BOOLEAN, `colored` BOOLEAN, `lay` BOOLEAN, `made_to_order` BOOLEAN, `days_to_execution` INT, `days_from_execution` INT, `pricing` CHAR, `visualization` CHAR, `complete_list_sorting` INT, `is_accessory` BOOLEAN, `is_procedure` BOOLEAN, `is_service` BOOLEAN, `is_pieces` BOOLEAN, `predefined_name` CHAR, `parent` CHAR, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `cat_partners` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `name_full` CHAR, `main_bank_account` CHAR, `note` CHAR, `kpp` CHAR, `okpo` CHAR, `inn` CHAR, `individual_legal` CHAR, `main_contract` CHAR, `identification_document` CHAR, `buyer_main_manager` CHAR, `is_buyer` BOOLEAN, `is_supplier` BOOLEAN, `primary_contact` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_contact_information` JSON, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `cat_units` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `name_full` CHAR, `international_short` CHAR, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_cashboxes` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `funds_currency` CHAR, `department` CHAR, `current_account` CHAR, `predefined_name` CHAR, `owner` CHAR); CREATE TABLE IF NOT EXISTS `cat_meta_ids` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `full_moniker` CHAR, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_property_values` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `heft` FLOAT, `ПолноеНаименование` CHAR, `predefined_name` CHAR, `owner` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_nom_units` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `qualifier_unit` CHAR, `heft` FLOAT, `volume` FLOAT, `coefficient` FLOAT, `rounding_threshold` INT, `ПредупреждатьОНецелыхМестах` BOOLEAN, `predefined_name` CHAR, `owner` CHAR, `owner_T` CHAR); CREATE TABLE IF NOT EXISTS `cat_contracts` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `settlements_currency` CHAR, `mutual_settlements` CHAR, `contract_kind` CHAR, `date` Date, `check_days_without_pay` BOOLEAN, `allowable_debts_amount` FLOAT, `allowable_debts_days` INT, `note` CHAR, `check_debts_amount` BOOLEAN, `check_debts_days` BOOLEAN, `number_doc` CHAR, `organization` CHAR, `main_cash_flow_article` CHAR, `main_project` CHAR, `accounting_reflect` BOOLEAN, `tax_accounting_reflect` BOOLEAN, `prepayment_percent` FLOAT, `validity` Date, `vat_included` BOOLEAN, `price_type` CHAR, `vat_consider` BOOLEAN, `days_without_pay` INT, `predefined_name` CHAR, `owner` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_nom_kinds` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `nom_type` CHAR, `НаборСвойствНоменклатура` CHAR, `НаборСвойствХарактеристика` CHAR, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_contact_information_kinds` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `type` CHAR, `ВидПоляДругое` CHAR, `Используется` BOOLEAN, `mandatory_fields` BOOLEAN, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_currencies` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `name_full` CHAR, `extra_charge` FLOAT, `main_currency` CHAR, `parameters_russian_recipe` CHAR, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_elm_visualization` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `svg_path` CHAR, `note` CHAR, `attributes` CHAR, `rotate` INT, `offset` INT, `side` CHAR, `elm_side` INT, `cx` INT, `cy` INT, `angle_hor` INT, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_formulas` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `formula` CHAR, `leading_formula` CHAR, `condition_formula` BOOLEAN, `definition` CHAR, `template` CHAR, `async` BOOLEAN, `zone` INT, `predefined_name` CHAR, `parent` CHAR, `ts_params` JSON); CREATE TABLE IF NOT EXISTS `cat_countries` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `name_full` CHAR, `alpha2` CHAR, `alpha3` CHAR, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_destinations` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `КоличествоРеквизитов` CHAR, `КоличествоСведений` CHAR, `Используется` BOOLEAN, `predefined_name` CHAR, `parent` CHAR, `ts_extra_fields` JSON, `ts_extra_properties` JSON); CREATE TABLE IF NOT EXISTS `cat_banks_qualifier` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `correspondent_account` CHAR, `city` CHAR, `address` CHAR, `phone_numbers` CHAR, `activity_ceased` BOOLEAN, `swift` CHAR, `inn` CHAR, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_property_values_hierarchy` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `heft` FLOAT, `ПолноеНаименование` CHAR, `predefined_name` CHAR, `owner` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_organization_bank_accounts` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `bank` CHAR, `bank_bic` CHAR, `funds_currency` CHAR, `account_number` CHAR, `settlements_bank` CHAR, `settlements_bank_bic` CHAR, `department` CHAR, `predefined_name` CHAR, `owner` CHAR); CREATE TABLE IF NOT EXISTS `cat_partner_bank_accounts` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `account_number` CHAR, `bank` CHAR, `settlements_bank` CHAR, `correspondent_text` CHAR, `appointments_text` CHAR, `funds_currency` CHAR, `bank_bic` CHAR, `bank_name` CHAR, `bank_correspondent_account` CHAR, `bank_city` CHAR, `bank_address` CHAR, `bank_phone_numbers` CHAR, `settlements_bank_bic` CHAR, `settlements_bank_correspondent_account` CHAR, `settlements_bank_city` CHAR, `predefined_name` CHAR, `owner` CHAR, `owner_T` CHAR); CREATE TABLE IF NOT EXISTS `cat_params_links` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `master` CHAR, `slave` CHAR, `hide` BOOLEAN, `note` CHAR, `zone` INT, `predefined_name` CHAR, `parent` CHAR, `ts_values` JSON); CREATE TABLE IF NOT EXISTS `cat_scheme_settings` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `obj` CHAR, `user` CHAR, `order` INT, `query` CHAR, `date_from` Date, `date_till` Date, `formula` CHAR, `tag` CHAR, `ts_fields` JSON, `ts_sorting` JSON, `ts_dimensions` JSON, `ts_resources` JSON, `ts_selection` JSON, `ts_params` JSON, `ts_composition` JSON); CREATE TABLE IF NOT EXISTS `cat_meta_fields` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN); CREATE TABLE IF NOT EXISTS `cat_meta_objs` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN); CREATE TABLE IF NOT EXISTS `cch_properties` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `extra_values_owner` CHAR, `available` BOOLEAN, `shown` BOOLEAN, `note` CHAR, `destination` CHAR, `tooltip` CHAR, `is_extra_property` BOOLEAN, `caption` CHAR, `mandatory` BOOLEAN, `list` INT, `sorting_field` INT, `include_to_name` BOOLEAN, `include_to_description` BOOLEAN, `predefined_name` CHAR, `type` JSON, `ts_extra_fields_dependencies` JSON); CREATE TABLE IF NOT EXISTS `cch_predefined_elmnts` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `value` CHAR, `value_T` CHAR, `definition` CHAR, `synonym` CHAR, `list` INT, `zone` INT, `predefined_name` CHAR, `parent` CHAR, `type` CHAR, `ts_elmnts` JSON); CREATE TABLE IF NOT EXISTS `enm_individual_legal` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_planning_phases` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_elm_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_specification_order_row_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_cnn_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_sz_line_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_open_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_cutting_optimization_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_nom_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_contact_information_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_lay_split_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_inserts_glass_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_inserts_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_vat_rates` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_specification_installation_methods` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_angle_calculating_ways` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_count_calculating_ways` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_buyers_order_states` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_gender` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_positions` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_cnn_sides` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_open_directions` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_text_aligns` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_orientations` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_color_price_group_destinations` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_order_categories` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_caching_type` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_obj_delivery_states` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_planning_detailing` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_contract_kinds` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_mutual_contract_settlements` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_align_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_contraction_options` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_offset_options` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_transfer_operations_options` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_impost_mount_options` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_inset_attrs_options` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_comparison_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_sort_directions` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_accumulation_record_type` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); ', []);

$p.md.create_managers=function(){
// создаём системные менеджеры (журнал регистрации, метаданные и настройки компоновки)
$p.ireg.log = new $p.LogManager();
$p.cat.meta_objs = new $p.MetaObjManager();
$p.cat.meta_fields = new $p.MetaFieldManager();

/**
 * ### Менеджер настроек отчетов и динсписков
 *
 * @module scheme_settings
 *
 * Created 19.12.2016
 */

function scheme_settings() {

	const {wsql, utils, cat, dp, md} = this;
	const classes = this.classes || this;

	/**
	 * ### Менеджер настроек отчетов и динсписков
	 */
	class SchemeSettingsManager extends classes.CatManager {


		/**
		 * ### Возвращает объект текущих настроек
		 * - если не существует ни одной настройки для _class_name_, создаёт элемент справочника _SchemeSettings_
		 * - если в localstorage есть настройка для текущего пользователя, возвращает её
		 *
		 * @param class_name
		 */
		get_scheme(class_name) {

			return new Promise((resolve, reject) => {

				// получаем сохраненную настройку
				const scheme_name = this.scheme_name(class_name);

				const find_scheme = () => {

					const opt = {
						_view: 'doc/scheme_settings',
						_top: 100,
						_skip: 0,
						_key: {
							startkey: [class_name, 0],
							endkey: [class_name, 9999]
						}
					}

					const query = this.find_rows_remote ? this.find_rows_remote(opt) : this.pouch_find_rows(opt);

					query.then((data) => {
						// если существует с текущим пользователем, берём его, иначе - первый попавшийся
						if(data.length == 1){
							set_default_and_resolve(data[0])
						}
						else if(data.length){
							if(!$p.current_user || !$p.current_user.name){
								set_default_and_resolve(data[0])
							}
							else {
								const {name} = $p.current_user;
								if(!data.some((scheme) => {
										if(scheme.user == name){
											set_default_and_resolve(scheme);
											return true;
										}
									})) {
									set_default_and_resolve(data[0])
								}
							}
						}
						else{
							create_scheme()
						}
					})
						.catch((err) => {
							create_scheme()
						})
				}

				let ref = wsql.get_user_param(scheme_name, "string");

				function set_default_and_resolve(obj){
					resolve(obj.set_default());
				}

				function create_scheme() {
					if(!utils.is_guid(ref)){
						ref = utils.generate_guid()
					}
					cat.scheme_settings.create({ref})
						.then((obj) => obj.fill_default(class_name).save())
						.then((obj) => set_default_and_resolve(obj))
				}

				if(ref){
					// получаем по гвиду
					cat.scheme_settings.get(ref, "promise")
						.then((scheme) => {
							if(scheme && !scheme.is_new()){
								resolve(scheme)
							}
							else{
								find_scheme()
							}
						})
						.catch((err) => {
							find_scheme()
						})

				}else{
					find_scheme()
				}
			})
		}

		/**
		 * ### Имя сохраненных настроек
		 * @param class_name
		 */
		scheme_name(class_name) {
			return "scheme_settings_" + class_name.replace(/\./g, "_");
		}

	}

	/**
	 * ### Менеджер настроек отчетов и динсписков
	 */
	class SchemeSelectManager extends classes.DataProcessorsManager {

		/**
		 * ### Экземпляр обработки для выбора варианта
		 * @param scheme
		 * @return {_obj, _meta}
		 */
		dp(scheme) {

			// экземпляр обработки для выбора варианта
			const _obj =  dp.scheme_settings.create();
			_obj.scheme = scheme;

			// корректируем метаданные поля выбора варианта
			const _meta = Object.assign({}, this.metadata("scheme"))
			_meta.choice_params = [{
				name: "obj",
				path: scheme.obj
			}]

			return {_obj, _meta};

		}
	}

	/**
	 * ### Обработка выбора варианта настроек scheme_settings
	 * @class CatScheme_settings
	 * @extends DataProcessorObj
	 * @constructor
	 */
	this.DpScheme_settings = class DpScheme_settings extends classes.DataProcessorObj{

		get scheme() {return this._getter('scheme')}
		set scheme(v) {this._setter('scheme', v)}
	}

	/**
	 * ### Справочник scheme_settings
	 * Настройки отчетов и списков
	 * @class CatScheme_settings
	 * @extends CatObj
	 * @constructor
	 */
	this.CatScheme_settings = class CatScheme_settings extends classes.CatObj {

		get obj() {return this._getter('obj')}
		set obj(v) {this._setter('obj', v)}

		get user() {return this._getter('user')}
		set user(v) {this._setter('user', v)}

		get order() {return this._getter('order')}
		set order(v) {this._setter('order', v)}

		get formula() {return this._getter('formula')}
		set formula(v) {this._setter('formula', v)}

		get query() {return this._getter('query')}
		set query(v) {this._setter('query', v)}

		get tag() {return this._getter('tag')}
		set tag(v) {this._setter('tag', v)}

		get date_from() {return this._getter('date_from')}
		set date_from(v) {this._setter('date_from', v)}

		get date_till() {return this._getter('date_till')}
		set date_till(v) {this._setter('date_till', v)}

		get fields() {return this._getter_ts('fields')}
		set fields(v) {this._setter_ts('fields', v)}

		get sorting() {return this._getter_ts('sorting')}
		set sorting(v) {this._setter_ts('sorting', v)}

		get dimensions() {return this._getter_ts('dimensions')}
		set dimensions(v) {this._setter_ts('dimensions', v)}

		get resources() {return this._getter_ts('resources')}
		set resources(v) {this._setter_ts('resources', v)}

		get selection() {return this._getter_ts('selection')}
		set selection(v) {this._setter_ts('selection', v)}

		get params() {return this._getter_ts('params')}
		set params(v) {this._setter_ts('params', v)}

		get composition() {return this._getter_ts('composition')}
		set composition(v) {this._setter_ts('composition', v)}

		/**
		 * ### Заполняет настройки по метаданным
		 *
		 * @param class_name
		 */
		fill_default(class_name) {

			const parts = class_name.split("."),
				_mgr = md.mgr_by_class_name(class_name),
				_meta = parts.length < 3 ? _mgr.metadata() : _mgr.metadata(parts[2]),
				columns = [];

			function add_column(fld, use) {
				const id = fld.id || fld,
					fld_meta = _meta.fields[id] || _mgr.metadata(id)
				columns.push({
					field: id,
					caption: fld.caption || fld_meta.synonym,
					tooltip: fld_meta.tooltip,
					width: fld.width || fld_meta.width,
					use: use
				});
			}

			// набираем поля
			if(parts.length < 3){   // поля динсписка

				if (_meta.form && _meta.form.selection) {

					_meta.form.selection.cols.forEach(fld => {
						add_column(fld, true)
					});

				} else {

					if (_mgr instanceof classes.CatManager) {
						if (_meta.code_length) {
							columns.push('id')
						}

						if (_meta.main_presentation_name) {
							columns.push('name')
						}

					} else if (_mgr instanceof classes.DocManager) {
						columns.push('number_doc')
						columns.push('date')
					}

					columns.forEach((id) => {
						// id, synonym, tooltip, type, width
						add_column(id, true)
					})
				}

			}else{ // поля табличной части

				for(var field in _meta.fields){
					add_column(field, true)
				}
			}

			for(var field in _meta.fields){
				if(!columns.some(function (column) { return column.field == field })){
					add_column(field, false)
				}
			}

			// заполняем табчасть доступных полей
			columns.forEach((column) => {
				this.fields.add(column)
			})

			// если для объекта определены измерения по умолчанию - используем
			const {resources} = _mgr.obj_constructor('', true)
			if(resources){
				resources.forEach(function (column) {
					this.resources.add({field: column})
				})
			}

			this.obj = class_name

			// наименование и период по умолчанию
			if(!this.name){
				this.name = "Основная"
				this.date_from = new Date((new Date()).getFullYear().toFixed() + "-01-01");
				this.date_till = utils.date_add_day(new Date(), 1);
			}

			return this
		}

		/**
		 * ### Устанавливает текущую настройку по умолчанию
		 */
		set_default() {
			wsql.set_user_param(this._manager.scheme_name(this.obj), this.ref);
			return this;
		}

		/**
		 * ### Устанавливает _view и _key в параметрах запроса
		 */
		fix_select(select, key0) {

			const keys = this.query.split("/")
			const {_key, _view} = select
			let res

			if(keys.length > 2){
				key0 = keys[2]
			}

			if (_key.startkey[0] != key0) {
				_key.startkey[0] = _key.endkey[0] = key0
				res = true
			}

			if(keys.length > 1){
				const select_view = keys[0] + "/" + keys[1]
				if(_view != select_view){
					select._view = select_view
					res = true
				}
			}

			// если есть параметр период, установим значения ключа
			if(this.query.match('date')){
				const {date_from, date_till} = this;

				_key.startkey[1] = date_from.getFullYear();
				_key.startkey[2] = date_from.getMonth()+1;
				_key.startkey[3] = date_from.getDate();

				_key.endkey[1] = date_till.getFullYear();
				_key.endkey[2] = date_till.getMonth()+1;
				_key.endkey[3] = date_till.getDate();
			}

			return res
		}

		/**
		 * ### Возвращает массив колонок для динсписка или табчасти
		 * @param mode {String} - режим формирования колонок
		 * @return {Array}
		 */
		columns(mode) {

			const parts = this.obj.split("."),
				_mgr = md.mgr_by_class_name(this.obj),
				_meta = parts.length < 3 ? _mgr.metadata() : _mgr.metadata(parts[2]),
				res = [];

			this.fields.find_rows({use: true}, (row) => {

				const fld_meta = _meta.fields[row.field] || _mgr.metadata(row.field)
				let column

				if(mode == "ts"){
					column = {
						key: row.field,
						name: row.caption,
						resizable : true,
						ctrl_type: row.ctrl_type,
						width: row.width == '*' ? 250 : (parseInt(row.width) || 140),
					}
				}else{
					column = {
						id: row.field,
						synonym: row.caption,
						tooltip: row.tooltip,
						type: fld_meta.type,
						ctrl_type: row.ctrl_type,
						width: row.width == '*' ? 250 : (parseInt(row.width) || 140),
					}
				}
				res.push(column)
			})
			return res;
		}

		/**
		 * ### Возвращает массив измерений группировки
		 * @param [parent] - родитель, для многоуровневой группировки
		 * @return {Array}
		 */
		dims(parent) {
			return this.dimensions._obj.map((row) => row.field)
		}

		/**
		 * ### Возвращает массив имён используемых колонок
		 * @param [parent] - родитель, для многоуровневой группировки
		 * @return {Array}
		 */
		used_fields(parent) {
			const res = []
			this.fields.find_rows({use: true}, (row) => {
				res.push(row.field)
			})
			return res
		}

		/**
		 * ### Возвращает массив элементов для поля выбора
		 * @return {Array}
		 */
		used_fields_list() {
			return this.fields._obj.map((row) => ({
				id: row.field,
				value: row.field,
				text: row.caption,
				title: row.caption
			}))
		}
	}

	this.CatScheme_settingsDimensionsRow = class CatScheme_settingsDimensionsRow extends classes.TabularSectionRow {

		get parent() {return this._getter('parent')}
		set parent(v) {this._setter('parent', v)}

		get use() {return this._getter('use')}
		set use(v) {this._setter('use', v)}

		get field() {return this._getter('field')}
		set field(v) {this._setter('field', v)}
	}

	this.CatScheme_settingsResourcesRow = class CatScheme_settingsResourcesRow extends this.CatScheme_settingsDimensionsRow {

		get formula() {return this._getter('formula')}
		set formula(v) {this._setter('formula', v)}
	}

	this.CatScheme_settingsFieldsRow = class CatScheme_settingsFieldsRow extends this.CatScheme_settingsDimensionsRow {

		get width() {return this._getter('width')}
		set width(v) {this._setter('width', v)}

		get caption() {return this._getter('caption')}
		set caption(v) {this._setter('caption', v)}

		get tooltip() {return this._getter('tooltip')}
		set tooltip(v) {this._setter('tooltip', v)}

		get ctrl_type() {return this._getter('ctrl_type')}
		set ctrl_type(v) {this._setter('ctrl_type', v)}

		get formatter() {return this._getter('formatter')}
		set formatter(v) {this._setter('formatter', v)}

		get editor() {return this._getter('editor')}
		set editor(v) {this._setter('editor', v)}

	}

	this.CatScheme_settingsSortingRow = class CatScheme_settingsSortingRow extends this.CatScheme_settingsDimensionsRow {

		get direction() {return this._getter('direction')}
		set direction(v) {this._setter('direction', v)}
	}

	this.CatScheme_settingsSelectionRow = class CatScheme_settingsSelectionRow extends classes.TabularSectionRow {

		get parent() {return this._getter('parent')}
		set parent(v) {this._setter('parent', v)}

		get use() {return this._getter('use')}
		set use(v) {this._setter('use', v)}

		get left_value() {return this._getter('left_value')}
		set left_value(v) {this._setter('left_value', v)}

		get comparison_type() {return this._getter('comparison_type')}
		set comparison_type(v) {this._setter('comparison_type', v)}

		get right_value() {return this._getter('right_value')}
		set right_value(v) {this._setter('right_value', v)}
	}

	this.CatScheme_settingsParamsRow = class CatScheme_settingsParamsRow extends classes.TabularSectionRow {

		get param() {return this._getter('param')}
		set param(v) {this._setter('param', v)}

		get value() {return this._getter('value')}
		set value(v) {this._setter('value', v)}
	}

	this.CatScheme_settingsCompositionRow = class CatScheme_settingsSchemeRow extends this.CatScheme_settingsDimensionsRow {

		get kind() {return this._getter('kind')}
		set kind(v) {this._setter('kind', v)}

		get definition() {return this._getter('definition')}
		set definition(v) {this._setter('definition', v)}

	}

	Object.defineProperties(cat, {
		scheme_settings: {
			value: new SchemeSettingsManager('cat.scheme_settings')
		}
	})

	Object.defineProperties(dp, {
		scheme_settings: {
			value: new SchemeSelectManager('dp.scheme_settings')
		}
	})

};
scheme_settings.call($p);
$p.enm.accumulation_record_type = new $p.EnumManager('enm.accumulation_record_type');
$p.enm.sort_directions = new $p.EnumManager('enm.sort_directions');
$p.enm.comparison_types = new $p.EnumManager('enm.comparison_types');
$p.enm.inset_attrs_options = new $p.EnumManager('enm.inset_attrs_options');
$p.enm.impost_mount_options = new $p.EnumManager('enm.impost_mount_options');
$p.enm.transfer_operations_options = new $p.EnumManager('enm.transfer_operations_options');
$p.enm.offset_options = new $p.EnumManager('enm.offset_options');
$p.enm.contraction_options = new $p.EnumManager('enm.contraction_options');
$p.enm.align_types = new $p.EnumManager('enm.align_types');
$p.enm.mutual_contract_settlements = new $p.EnumManager('enm.mutual_contract_settlements');
$p.enm.contract_kinds = new $p.EnumManager('enm.contract_kinds');
$p.enm.planning_detailing = new $p.EnumManager('enm.planning_detailing');
$p.enm.obj_delivery_states = new $p.EnumManager('enm.obj_delivery_states');
$p.enm.caching_type = new $p.EnumManager('enm.caching_type');
$p.enm.order_categories = new $p.EnumManager('enm.order_categories');
$p.enm.color_price_group_destinations = new $p.EnumManager('enm.color_price_group_destinations');
$p.enm.orientations = new $p.EnumManager('enm.orientations');
$p.enm.text_aligns = new $p.EnumManager('enm.text_aligns');
$p.enm.open_directions = new $p.EnumManager('enm.open_directions');
$p.enm.cnn_sides = new $p.EnumManager('enm.cnn_sides');
$p.enm.positions = new $p.EnumManager('enm.positions');
$p.enm.gender = new $p.EnumManager('enm.gender');
$p.enm.buyers_order_states = new $p.EnumManager('enm.buyers_order_states');
$p.enm.count_calculating_ways = new $p.EnumManager('enm.count_calculating_ways');
$p.enm.angle_calculating_ways = new $p.EnumManager('enm.angle_calculating_ways');
$p.enm.specification_installation_methods = new $p.EnumManager('enm.specification_installation_methods');
$p.enm.vat_rates = new $p.EnumManager('enm.vat_rates');
$p.enm.inserts_types = new $p.EnumManager('enm.inserts_types');
$p.enm.inserts_glass_types = new $p.EnumManager('enm.inserts_glass_types');
$p.enm.lay_split_types = new $p.EnumManager('enm.lay_split_types');
$p.enm.contact_information_types = new $p.EnumManager('enm.contact_information_types');
$p.enm.nom_types = new $p.EnumManager('enm.nom_types');
$p.enm.cutting_optimization_types = new $p.EnumManager('enm.cutting_optimization_types');
$p.enm.open_types = new $p.EnumManager('enm.open_types');
$p.enm.sz_line_types = new $p.EnumManager('enm.sz_line_types');
$p.enm.cnn_types = new $p.EnumManager('enm.cnn_types');
$p.enm.specification_order_row_types = new $p.EnumManager('enm.specification_order_row_types');
$p.enm.elm_types = new $p.EnumManager('enm.elm_types');
$p.enm.planning_phases = new $p.EnumManager('enm.planning_phases');
$p.enm.individual_legal = new $p.EnumManager('enm.individual_legal');

/**
* ### План видов характеристик ПредопределенныеЭлементы
* Хранит значения настроек и параметров подсистем
* @class CchPredefined_elmnts
* @extends CatObj
* @constructor 
*/
function CchPredefined_elmnts(attr, manager){CchPredefined_elmnts.superclass.constructor.call(this, attr, manager)}
CchPredefined_elmnts._extend($p.CatObj);
$p.CchPredefined_elmnts = CchPredefined_elmnts;
CchPredefined_elmnts.prototype.__define({value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
definition: {get: function(){return this._getter('definition')}, set: function(v){this._setter('definition',v)}, enumerable: true, configurable: true},
synonym: {get: function(){return this._getter('synonym')}, set: function(v){this._setter('synonym',v)}, enumerable: true, configurable: true},
list: {get: function(){return this._getter('list')}, set: function(v){this._setter('list',v)}, enumerable: true, configurable: true},
zone: {get: function(){return this._getter('zone')}, set: function(v){this._setter('zone',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true}});
function CchPredefined_elmntsElmntsRow(owner){CchPredefined_elmntsElmntsRow.superclass.constructor.call(this, owner)};
CchPredefined_elmntsElmntsRow._extend($p.TabularSectionRow);
$p.CchPredefined_elmntsElmntsRow = CchPredefined_elmntsElmntsRow;
CchPredefined_elmntsElmntsRow.prototype.__define({value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true}});
CchPredefined_elmnts.prototype.__define('elmnts', {get: function(){return this._getter_ts('elmnts')}, set: function(v){this._setter_ts('elmnts',v)}, enumerable: true, configurable: true});
$p.cch.predefined_elmnts = new $p.ChartOfCharacteristicManager('cch.predefined_elmnts');

/**
* ### План видов характеристик ДополнительныеРеквизитыИСведения
* Дополнительные реквизиты и сведения
* @class CchProperties
* @extends CatObj
* @constructor 
*/
function CchProperties(attr, manager){CchProperties.superclass.constructor.call(this, attr, manager)}
CchProperties._extend($p.CatObj);
$p.CchProperties = CchProperties;
CchProperties.prototype.__define({extra_values_owner: {get: function(){return this._getter('extra_values_owner')}, set: function(v){this._setter('extra_values_owner',v)}, enumerable: true, configurable: true},
available: {get: function(){return this._getter('available')}, set: function(v){this._setter('available',v)}, enumerable: true, configurable: true},
shown: {get: function(){return this._getter('shown')}, set: function(v){this._setter('shown',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
destination: {get: function(){return this._getter('destination')}, set: function(v){this._setter('destination',v)}, enumerable: true, configurable: true},
tooltip: {get: function(){return this._getter('tooltip')}, set: function(v){this._setter('tooltip',v)}, enumerable: true, configurable: true},
is_extra_property: {get: function(){return this._getter('is_extra_property')}, set: function(v){this._setter('is_extra_property',v)}, enumerable: true, configurable: true},
caption: {get: function(){return this._getter('caption')}, set: function(v){this._setter('caption',v)}, enumerable: true, configurable: true},
mandatory: {get: function(){return this._getter('mandatory')}, set: function(v){this._setter('mandatory',v)}, enumerable: true, configurable: true},
list: {get: function(){return this._getter('list')}, set: function(v){this._setter('list',v)}, enumerable: true, configurable: true},
sorting_field: {get: function(){return this._getter('sorting_field')}, set: function(v){this._setter('sorting_field',v)}, enumerable: true, configurable: true},
include_to_name: {get: function(){return this._getter('include_to_name')}, set: function(v){this._setter('include_to_name',v)}, enumerable: true, configurable: true},
include_to_description: {get: function(){return this._getter('include_to_description')}, set: function(v){this._setter('include_to_description',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true}});
function CchPropertiesExtra_fields_dependenciesRow(owner){CchPropertiesExtra_fields_dependenciesRow.superclass.constructor.call(this, owner)};
CchPropertiesExtra_fields_dependenciesRow._extend($p.TabularSectionRow);
$p.CchPropertiesExtra_fields_dependenciesRow = CchPropertiesExtra_fields_dependenciesRow;
CchPropertiesExtra_fields_dependenciesRow.prototype.__define({ЗависимоеСвойство: {get: function(){return this._getter('ЗависимоеСвойство')}, set: function(v){this._setter('ЗависимоеСвойство',v)}, enumerable: true, configurable: true},
field: {get: function(){return this._getter('field')}, set: function(v){this._setter('field',v)}, enumerable: true, configurable: true},
condition: {get: function(){return this._getter('condition')}, set: function(v){this._setter('condition',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true}});
CchProperties.prototype.__define('extra_fields_dependencies', {get: function(){return this._getter_ts('extra_fields_dependencies')}, set: function(v){this._setter_ts('extra_fields_dependencies',v)}, enumerable: true, configurable: true});
$p.cch.properties = new $p.ChartOfCharacteristicManager('cch.properties');

/**
* ### Справочник undefined
* undefined
* @class CatMeta_objs
* @extends CatObj
* @constructor 
*/
function CatMeta_objs(attr, manager){CatMeta_objs.superclass.constructor.call(this, attr, manager)}
CatMeta_objs._extend($p.CatObj);
$p.CatMeta_objs = CatMeta_objs;

/**
* ### Справочник undefined
* undefined
* @class CatMeta_fields
* @extends CatObj
* @constructor 
*/
function CatMeta_fields(attr, manager){CatMeta_fields.superclass.constructor.call(this, attr, manager)}
CatMeta_fields._extend($p.CatObj);
$p.CatMeta_fields = CatMeta_fields;

/**
* ### Справочник СвязиПараметров
* Подчиненные параметры
* @class CatParams_links
* @extends CatObj
* @constructor 
*/
function CatParams_links(attr, manager){CatParams_links.superclass.constructor.call(this, attr, manager)}
CatParams_links._extend($p.CatObj);
$p.CatParams_links = CatParams_links;
CatParams_links.prototype.__define({master: {get: function(){return this._getter('master')}, set: function(v){this._setter('master',v)}, enumerable: true, configurable: true},
slave: {get: function(){return this._getter('slave')}, set: function(v){this._setter('slave',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
zone: {get: function(){return this._getter('zone')}, set: function(v){this._setter('zone',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
function CatParams_linksValuesRow(owner){CatParams_linksValuesRow.superclass.constructor.call(this, owner)};
CatParams_linksValuesRow._extend($p.TabularSectionRow);
$p.CatParams_linksValuesRow = CatParams_linksValuesRow;
CatParams_linksValuesRow.prototype.__define({value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
by_default: {get: function(){return this._getter('by_default')}, set: function(v){this._setter('by_default',v)}, enumerable: true, configurable: true},
forcibly: {get: function(){return this._getter('forcibly')}, set: function(v){this._setter('forcibly',v)}, enumerable: true, configurable: true}});
CatParams_links.prototype.__define('values', {get: function(){return this._getter_ts('values')}, set: function(v){this._setter_ts('values',v)}, enumerable: true, configurable: true});
$p.cat.params_links = new $p.CatManager('cat.params_links');

/**
* ### Справочник БанковскиеСчетаКонтрагентов
* Банковские счета сторонних контрагентов и физических лиц.
* @class CatPartner_bank_accounts
* @extends CatObj
* @constructor 
*/
function CatPartner_bank_accounts(attr, manager){CatPartner_bank_accounts.superclass.constructor.call(this, attr, manager)}
CatPartner_bank_accounts._extend($p.CatObj);
$p.CatPartner_bank_accounts = CatPartner_bank_accounts;
CatPartner_bank_accounts.prototype.__define({account_number: {get: function(){return this._getter('account_number')}, set: function(v){this._setter('account_number',v)}, enumerable: true, configurable: true},
bank: {get: function(){return this._getter('bank')}, set: function(v){this._setter('bank',v)}, enumerable: true, configurable: true},
settlements_bank: {get: function(){return this._getter('settlements_bank')}, set: function(v){this._setter('settlements_bank',v)}, enumerable: true, configurable: true},
correspondent_text: {get: function(){return this._getter('correspondent_text')}, set: function(v){this._setter('correspondent_text',v)}, enumerable: true, configurable: true},
appointments_text: {get: function(){return this._getter('appointments_text')}, set: function(v){this._setter('appointments_text',v)}, enumerable: true, configurable: true},
funds_currency: {get: function(){return this._getter('funds_currency')}, set: function(v){this._setter('funds_currency',v)}, enumerable: true, configurable: true},
bank_bic: {get: function(){return this._getter('bank_bic')}, set: function(v){this._setter('bank_bic',v)}, enumerable: true, configurable: true},
bank_name: {get: function(){return this._getter('bank_name')}, set: function(v){this._setter('bank_name',v)}, enumerable: true, configurable: true},
bank_correspondent_account: {get: function(){return this._getter('bank_correspondent_account')}, set: function(v){this._setter('bank_correspondent_account',v)}, enumerable: true, configurable: true},
bank_city: {get: function(){return this._getter('bank_city')}, set: function(v){this._setter('bank_city',v)}, enumerable: true, configurable: true},
bank_address: {get: function(){return this._getter('bank_address')}, set: function(v){this._setter('bank_address',v)}, enumerable: true, configurable: true},
bank_phone_numbers: {get: function(){return this._getter('bank_phone_numbers')}, set: function(v){this._setter('bank_phone_numbers',v)}, enumerable: true, configurable: true},
settlements_bank_bic: {get: function(){return this._getter('settlements_bank_bic')}, set: function(v){this._setter('settlements_bank_bic',v)}, enumerable: true, configurable: true},
settlements_bank_correspondent_account: {get: function(){return this._getter('settlements_bank_correspondent_account')}, set: function(v){this._setter('settlements_bank_correspondent_account',v)}, enumerable: true, configurable: true},
settlements_bank_city: {get: function(){return this._getter('settlements_bank_city')}, set: function(v){this._setter('settlements_bank_city',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true}});
$p.cat.partner_bank_accounts = new $p.CatManager('cat.partner_bank_accounts');

/**
* ### Справочник БанковскиеСчетаОрганизаций
* Банковские счета собственных организаций. 
* @class CatOrganization_bank_accounts
* @extends CatObj
* @constructor 
*/
function CatOrganization_bank_accounts(attr, manager){CatOrganization_bank_accounts.superclass.constructor.call(this, attr, manager)}
CatOrganization_bank_accounts._extend($p.CatObj);
$p.CatOrganization_bank_accounts = CatOrganization_bank_accounts;
CatOrganization_bank_accounts.prototype.__define({bank: {get: function(){return this._getter('bank')}, set: function(v){this._setter('bank',v)}, enumerable: true, configurable: true},
bank_bic: {get: function(){return this._getter('bank_bic')}, set: function(v){this._setter('bank_bic',v)}, enumerable: true, configurable: true},
funds_currency: {get: function(){return this._getter('funds_currency')}, set: function(v){this._setter('funds_currency',v)}, enumerable: true, configurable: true},
account_number: {get: function(){return this._getter('account_number')}, set: function(v){this._setter('account_number',v)}, enumerable: true, configurable: true},
settlements_bank: {get: function(){return this._getter('settlements_bank')}, set: function(v){this._setter('settlements_bank',v)}, enumerable: true, configurable: true},
settlements_bank_bic: {get: function(){return this._getter('settlements_bank_bic')}, set: function(v){this._setter('settlements_bank_bic',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true}});
$p.cat.organization_bank_accounts = new $p.CatManager('cat.organization_bank_accounts');

/**
* ### Справочник ЗначенияСвойствОбъектовИерархия
* Дополнительные значения (иерархия)
* @class CatProperty_values_hierarchy
* @extends CatObj
* @constructor 
*/
function CatProperty_values_hierarchy(attr, manager){CatProperty_values_hierarchy.superclass.constructor.call(this, attr, manager)}
CatProperty_values_hierarchy._extend($p.CatObj);
$p.CatProperty_values_hierarchy = CatProperty_values_hierarchy;
CatProperty_values_hierarchy.prototype.__define({heft: {get: function(){return this._getter('heft')}, set: function(v){this._setter('heft',v)}, enumerable: true, configurable: true},
ПолноеНаименование: {get: function(){return this._getter('ПолноеНаименование')}, set: function(v){this._setter('ПолноеНаименование',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.property_values_hierarchy = new $p.CatManager('cat.property_values_hierarchy');

/**
* ### Справочник КлассификаторБанковРФ
* Классификатор банков РФ
* @class CatBanks_qualifier
* @extends CatObj
* @constructor 
*/
function CatBanks_qualifier(attr, manager){CatBanks_qualifier.superclass.constructor.call(this, attr, manager)}
CatBanks_qualifier._extend($p.CatObj);
$p.CatBanks_qualifier = CatBanks_qualifier;
CatBanks_qualifier.prototype.__define({correspondent_account: {get: function(){return this._getter('correspondent_account')}, set: function(v){this._setter('correspondent_account',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
address: {get: function(){return this._getter('address')}, set: function(v){this._setter('address',v)}, enumerable: true, configurable: true},
phone_numbers: {get: function(){return this._getter('phone_numbers')}, set: function(v){this._setter('phone_numbers',v)}, enumerable: true, configurable: true},
activity_ceased: {get: function(){return this._getter('activity_ceased')}, set: function(v){this._setter('activity_ceased',v)}, enumerable: true, configurable: true},
swift: {get: function(){return this._getter('swift')}, set: function(v){this._setter('swift',v)}, enumerable: true, configurable: true},
inn: {get: function(){return this._getter('inn')}, set: function(v){this._setter('inn',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.banks_qualifier = new $p.CatManager('cat.banks_qualifier');

/**
* ### Справочник НаборыДополнительныхРеквизитовИСведений
* Наборы дополнительных реквизитов и сведений
* @class CatDestinations
* @extends CatObj
* @constructor 
*/
function CatDestinations(attr, manager){CatDestinations.superclass.constructor.call(this, attr, manager)}
CatDestinations._extend($p.CatObj);
$p.CatDestinations = CatDestinations;
CatDestinations.prototype.__define({КоличествоРеквизитов: {get: function(){return this._getter('КоличествоРеквизитов')}, set: function(v){this._setter('КоличествоРеквизитов',v)}, enumerable: true, configurable: true},
КоличествоСведений: {get: function(){return this._getter('КоличествоСведений')}, set: function(v){this._setter('КоличествоСведений',v)}, enumerable: true, configurable: true},
Используется: {get: function(){return this._getter('Используется')}, set: function(v){this._setter('Используется',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
function CatDestinationsExtra_fieldsRow(owner){CatDestinationsExtra_fieldsRow.superclass.constructor.call(this, owner)};
CatDestinationsExtra_fieldsRow._extend($p.TabularSectionRow);
$p.CatDestinationsExtra_fieldsRow = CatDestinationsExtra_fieldsRow;
CatDestinationsExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
_deleted: {get: function(){return this._getter('_deleted')}, set: function(v){this._setter('_deleted',v)}, enumerable: true, configurable: true}});
CatDestinations.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
function CatDestinationsExtra_propertiesRow(owner){CatDestinationsExtra_propertiesRow.superclass.constructor.call(this, owner)};
CatDestinationsExtra_propertiesRow._extend($p.TabularSectionRow);
$p.CatDestinationsExtra_propertiesRow = CatDestinationsExtra_propertiesRow;
CatDestinationsExtra_propertiesRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
_deleted: {get: function(){return this._getter('_deleted')}, set: function(v){this._setter('_deleted',v)}, enumerable: true, configurable: true}});
CatDestinations.prototype.__define('extra_properties', {get: function(){return this._getter_ts('extra_properties')}, set: function(v){this._setter_ts('extra_properties',v)}, enumerable: true, configurable: true});
$p.cat.destinations = new $p.CatManager('cat.destinations');

/**
* ### Справочник СтраныМира
* Страны мира
* @class CatCountries
* @extends CatObj
* @constructor 
*/
function CatCountries(attr, manager){CatCountries.superclass.constructor.call(this, attr, manager)}
CatCountries._extend($p.CatObj);
$p.CatCountries = CatCountries;
CatCountries.prototype.__define({name_full: {get: function(){return this._getter('name_full')}, set: function(v){this._setter('name_full',v)}, enumerable: true, configurable: true},
alpha2: {get: function(){return this._getter('alpha2')}, set: function(v){this._setter('alpha2',v)}, enumerable: true, configurable: true},
alpha3: {get: function(){return this._getter('alpha3')}, set: function(v){this._setter('alpha3',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.countries = new $p.CatManager('cat.countries');

/**
* ### Справочник Формулы
* Формулы пользователя, для выполнения при расчете спецификаций в справочниках Вставки, Соединения, Фурнитура и регистре Корректировки спецификации
* @class CatFormulas
* @extends CatObj
* @constructor 
*/
function CatFormulas(attr, manager){CatFormulas.superclass.constructor.call(this, attr, manager)}
CatFormulas._extend($p.CatObj);
$p.CatFormulas = CatFormulas;
CatFormulas.prototype.__define({formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
leading_formula: {get: function(){return this._getter('leading_formula')}, set: function(v){this._setter('leading_formula',v)}, enumerable: true, configurable: true},
condition_formula: {get: function(){return this._getter('condition_formula')}, set: function(v){this._setter('condition_formula',v)}, enumerable: true, configurable: true},
definition: {get: function(){return this._getter('definition')}, set: function(v){this._setter('definition',v)}, enumerable: true, configurable: true},
template: {get: function(){return this._getter('template')}, set: function(v){this._setter('template',v)}, enumerable: true, configurable: true},
async: {get: function(){return this._getter('async')}, set: function(v){this._setter('async',v)}, enumerable: true, configurable: true},
zone: {get: function(){return this._getter('zone')}, set: function(v){this._setter('zone',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
function CatFormulasParamsRow(owner){CatFormulasParamsRow.superclass.constructor.call(this, owner)};
CatFormulasParamsRow._extend($p.TabularSectionRow);
$p.CatFormulasParamsRow = CatFormulasParamsRow;
CatFormulasParamsRow.prototype.__define({param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true}});
CatFormulas.prototype.__define('params', {get: function(){return this._getter_ts('params')}, set: function(v){this._setter_ts('params',v)}, enumerable: true, configurable: true});
$p.cat.formulas = new $p.CatManager('cat.formulas');

/**
* ### Справочник пзВизуализацияЭлементов
* Строки svg для рисования петель, ручек и графических примитивов
* @class CatElm_visualization
* @extends CatObj
* @constructor 
*/
function CatElm_visualization(attr, manager){CatElm_visualization.superclass.constructor.call(this, attr, manager)}
CatElm_visualization._extend($p.CatObj);
$p.CatElm_visualization = CatElm_visualization;
CatElm_visualization.prototype.__define({svg_path: {get: function(){return this._getter('svg_path')}, set: function(v){this._setter('svg_path',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
attributes: {get: function(){return this._getter('attributes')}, set: function(v){this._setter('attributes',v)}, enumerable: true, configurable: true},
rotate: {get: function(){return this._getter('rotate')}, set: function(v){this._setter('rotate',v)}, enumerable: true, configurable: true},
offset: {get: function(){return this._getter('offset')}, set: function(v){this._setter('offset',v)}, enumerable: true, configurable: true},
side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
elm_side: {get: function(){return this._getter('elm_side')}, set: function(v){this._setter('elm_side',v)}, enumerable: true, configurable: true},
cx: {get: function(){return this._getter('cx')}, set: function(v){this._setter('cx',v)}, enumerable: true, configurable: true},
cy: {get: function(){return this._getter('cy')}, set: function(v){this._setter('cy',v)}, enumerable: true, configurable: true},
angle_hor: {get: function(){return this._getter('angle_hor')}, set: function(v){this._setter('angle_hor',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.elm_visualization = new $p.CatManager('cat.elm_visualization');

/**
* ### Справочник Валюты
* Валюты, используемые при расчетах
* @class CatCurrencies
* @extends CatObj
* @constructor 
*/
function CatCurrencies(attr, manager){CatCurrencies.superclass.constructor.call(this, attr, manager)}
CatCurrencies._extend($p.CatObj);
$p.CatCurrencies = CatCurrencies;
CatCurrencies.prototype.__define({name_full: {get: function(){return this._getter('name_full')}, set: function(v){this._setter('name_full',v)}, enumerable: true, configurable: true},
extra_charge: {get: function(){return this._getter('extra_charge')}, set: function(v){this._setter('extra_charge',v)}, enumerable: true, configurable: true},
main_currency: {get: function(){return this._getter('main_currency')}, set: function(v){this._setter('main_currency',v)}, enumerable: true, configurable: true},
parameters_russian_recipe: {get: function(){return this._getter('parameters_russian_recipe')}, set: function(v){this._setter('parameters_russian_recipe',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.currencies = new $p.CatManager('cat.currencies');

/**
* ### Справочник ВидыКонтактнойИнформации
* Виды контактной информации
* @class CatContact_information_kinds
* @extends CatObj
* @constructor 
*/
function CatContact_information_kinds(attr, manager){CatContact_information_kinds.superclass.constructor.call(this, attr, manager)}
CatContact_information_kinds._extend($p.CatObj);
$p.CatContact_information_kinds = CatContact_information_kinds;
CatContact_information_kinds.prototype.__define({type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
ВидПоляДругое: {get: function(){return this._getter('ВидПоляДругое')}, set: function(v){this._setter('ВидПоляДругое',v)}, enumerable: true, configurable: true},
Используется: {get: function(){return this._getter('Используется')}, set: function(v){this._setter('Используется',v)}, enumerable: true, configurable: true},
mandatory_fields: {get: function(){return this._getter('mandatory_fields')}, set: function(v){this._setter('mandatory_fields',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.contact_information_kinds = new $p.CatManager('cat.contact_information_kinds');

/**
* ### Справочник ВидыНоменклатуры
* Виды номенклатуры
* @class CatNom_kinds
* @extends CatObj
* @constructor 
*/
function CatNom_kinds(attr, manager){CatNom_kinds.superclass.constructor.call(this, attr, manager)}
CatNom_kinds._extend($p.CatObj);
$p.CatNom_kinds = CatNom_kinds;
CatNom_kinds.prototype.__define({nom_type: {get: function(){return this._getter('nom_type')}, set: function(v){this._setter('nom_type',v)}, enumerable: true, configurable: true},
НаборСвойствНоменклатура: {get: function(){return this._getter('НаборСвойствНоменклатура')}, set: function(v){this._setter('НаборСвойствНоменклатура',v)}, enumerable: true, configurable: true},
НаборСвойствХарактеристика: {get: function(){return this._getter('НаборСвойствХарактеристика')}, set: function(v){this._setter('НаборСвойствХарактеристика',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.nom_kinds = new $p.CatManager('cat.nom_kinds');

/**
* ### Справочник ДоговорыКонтрагентов
* Перечень договоров, заключенных с контрагентами
* @class CatContracts
* @extends CatObj
* @constructor 
*/
function CatContracts(attr, manager){CatContracts.superclass.constructor.call(this, attr, manager)}
CatContracts._extend($p.CatObj);
$p.CatContracts = CatContracts;
CatContracts.prototype.__define({settlements_currency: {get: function(){return this._getter('settlements_currency')}, set: function(v){this._setter('settlements_currency',v)}, enumerable: true, configurable: true},
mutual_settlements: {get: function(){return this._getter('mutual_settlements')}, set: function(v){this._setter('mutual_settlements',v)}, enumerable: true, configurable: true},
contract_kind: {get: function(){return this._getter('contract_kind')}, set: function(v){this._setter('contract_kind',v)}, enumerable: true, configurable: true},
date: {get: function(){return this._getter('date')}, set: function(v){this._setter('date',v)}, enumerable: true, configurable: true},
check_days_without_pay: {get: function(){return this._getter('check_days_without_pay')}, set: function(v){this._setter('check_days_without_pay',v)}, enumerable: true, configurable: true},
allowable_debts_amount: {get: function(){return this._getter('allowable_debts_amount')}, set: function(v){this._setter('allowable_debts_amount',v)}, enumerable: true, configurable: true},
allowable_debts_days: {get: function(){return this._getter('allowable_debts_days')}, set: function(v){this._setter('allowable_debts_days',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
check_debts_amount: {get: function(){return this._getter('check_debts_amount')}, set: function(v){this._setter('check_debts_amount',v)}, enumerable: true, configurable: true},
check_debts_days: {get: function(){return this._getter('check_debts_days')}, set: function(v){this._setter('check_debts_days',v)}, enumerable: true, configurable: true},
number_doc: {get: function(){return this._getter('number_doc')}, set: function(v){this._setter('number_doc',v)}, enumerable: true, configurable: true},
organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
main_cash_flow_article: {get: function(){return this._getter('main_cash_flow_article')}, set: function(v){this._setter('main_cash_flow_article',v)}, enumerable: true, configurable: true},
main_project: {get: function(){return this._getter('main_project')}, set: function(v){this._setter('main_project',v)}, enumerable: true, configurable: true},
accounting_reflect: {get: function(){return this._getter('accounting_reflect')}, set: function(v){this._setter('accounting_reflect',v)}, enumerable: true, configurable: true},
tax_accounting_reflect: {get: function(){return this._getter('tax_accounting_reflect')}, set: function(v){this._setter('tax_accounting_reflect',v)}, enumerable: true, configurable: true},
prepayment_percent: {get: function(){return this._getter('prepayment_percent')}, set: function(v){this._setter('prepayment_percent',v)}, enumerable: true, configurable: true},
validity: {get: function(){return this._getter('validity')}, set: function(v){this._setter('validity',v)}, enumerable: true, configurable: true},
vat_included: {get: function(){return this._getter('vat_included')}, set: function(v){this._setter('vat_included',v)}, enumerable: true, configurable: true},
price_type: {get: function(){return this._getter('price_type')}, set: function(v){this._setter('price_type',v)}, enumerable: true, configurable: true},
vat_consider: {get: function(){return this._getter('vat_consider')}, set: function(v){this._setter('vat_consider',v)}, enumerable: true, configurable: true},
days_without_pay: {get: function(){return this._getter('days_without_pay')}, set: function(v){this._setter('days_without_pay',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.contracts = new $p.CatManager('cat.contracts');

/**
* ### Справочник ЕдиницыИзмерения
* Перечень единиц измерения номенклатуры и номенклатурных групп
* @class CatNom_units
* @extends CatObj
* @constructor 
*/
function CatNom_units(attr, manager){CatNom_units.superclass.constructor.call(this, attr, manager)}
CatNom_units._extend($p.CatObj);
$p.CatNom_units = CatNom_units;
CatNom_units.prototype.__define({qualifier_unit: {get: function(){return this._getter('qualifier_unit')}, set: function(v){this._setter('qualifier_unit',v)}, enumerable: true, configurable: true},
heft: {get: function(){return this._getter('heft')}, set: function(v){this._setter('heft',v)}, enumerable: true, configurable: true},
volume: {get: function(){return this._getter('volume')}, set: function(v){this._setter('volume',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
rounding_threshold: {get: function(){return this._getter('rounding_threshold')}, set: function(v){this._setter('rounding_threshold',v)}, enumerable: true, configurable: true},
ПредупреждатьОНецелыхМестах: {get: function(){return this._getter('ПредупреждатьОНецелыхМестах')}, set: function(v){this._setter('ПредупреждатьОНецелыхМестах',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true}});
$p.cat.nom_units = new $p.CatManager('cat.nom_units');

/**
* ### Справочник ЗначенияСвойствОбъектов
* Дополнительные значения
* @class CatProperty_values
* @extends CatObj
* @constructor 
*/
function CatProperty_values(attr, manager){CatProperty_values.superclass.constructor.call(this, attr, manager)}
CatProperty_values._extend($p.CatObj);
$p.CatProperty_values = CatProperty_values;
CatProperty_values.prototype.__define({heft: {get: function(){return this._getter('heft')}, set: function(v){this._setter('heft',v)}, enumerable: true, configurable: true},
ПолноеНаименование: {get: function(){return this._getter('ПолноеНаименование')}, set: function(v){this._setter('ПолноеНаименование',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.property_values = new $p.CatManager('cat.property_values');

/**
* ### Справочник ИдентификаторыОбъектовМетаданных
* Идентификаторы объектов метаданных для использования в базе данных.
* @class CatMeta_ids
* @extends CatObj
* @constructor 
*/
function CatMeta_ids(attr, manager){CatMeta_ids.superclass.constructor.call(this, attr, manager)}
CatMeta_ids._extend($p.CatObj);
$p.CatMeta_ids = CatMeta_ids;
CatMeta_ids.prototype.__define({full_moniker: {get: function(){return this._getter('full_moniker')}, set: function(v){this._setter('full_moniker',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.meta_ids = new $p.CatManager('cat.meta_ids');

/**
* ### Справочник Кассы
* Список мест фактического хранения и движения наличных денежных средств предприятия. Кассы разделены по организациям и валютам денежных средств. 
* @class CatCashboxes
* @extends CatObj
* @constructor 
*/
function CatCashboxes(attr, manager){CatCashboxes.superclass.constructor.call(this, attr, manager)}
CatCashboxes._extend($p.CatObj);
$p.CatCashboxes = CatCashboxes;
CatCashboxes.prototype.__define({funds_currency: {get: function(){return this._getter('funds_currency')}, set: function(v){this._setter('funds_currency',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
current_account: {get: function(){return this._getter('current_account')}, set: function(v){this._setter('current_account',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true}});
$p.cat.cashboxes = new $p.CatManager('cat.cashboxes');

/**
* ### Справочник КлассификаторЕдиницИзмерения
* Классификатор единиц измерения
* @class CatUnits
* @extends CatObj
* @constructor 
*/
function CatUnits(attr, manager){CatUnits.superclass.constructor.call(this, attr, manager)}
CatUnits._extend($p.CatObj);
$p.CatUnits = CatUnits;
CatUnits.prototype.__define({name_full: {get: function(){return this._getter('name_full')}, set: function(v){this._setter('name_full',v)}, enumerable: true, configurable: true},
international_short: {get: function(){return this._getter('international_short')}, set: function(v){this._setter('international_short',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.units = new $p.CatManager('cat.units');

/**
* ### Справочник Контрагенты
* Список юридических или физических лиц клиентов (поставщиков, покупателей).
* @class CatPartners
* @extends CatObj
* @constructor 
*/
function CatPartners(attr, manager){CatPartners.superclass.constructor.call(this, attr, manager)}
CatPartners._extend($p.CatObj);
$p.CatPartners = CatPartners;
CatPartners.prototype.__define({name_full: {get: function(){return this._getter('name_full')}, set: function(v){this._setter('name_full',v)}, enumerable: true, configurable: true},
main_bank_account: {get: function(){return this._getter('main_bank_account')}, set: function(v){this._setter('main_bank_account',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
kpp: {get: function(){return this._getter('kpp')}, set: function(v){this._setter('kpp',v)}, enumerable: true, configurable: true},
okpo: {get: function(){return this._getter('okpo')}, set: function(v){this._setter('okpo',v)}, enumerable: true, configurable: true},
inn: {get: function(){return this._getter('inn')}, set: function(v){this._setter('inn',v)}, enumerable: true, configurable: true},
individual_legal: {get: function(){return this._getter('individual_legal')}, set: function(v){this._setter('individual_legal',v)}, enumerable: true, configurable: true},
main_contract: {get: function(){return this._getter('main_contract')}, set: function(v){this._setter('main_contract',v)}, enumerable: true, configurable: true},
identification_document: {get: function(){return this._getter('identification_document')}, set: function(v){this._setter('identification_document',v)}, enumerable: true, configurable: true},
buyer_main_manager: {get: function(){return this._getter('buyer_main_manager')}, set: function(v){this._setter('buyer_main_manager',v)}, enumerable: true, configurable: true},
is_buyer: {get: function(){return this._getter('is_buyer')}, set: function(v){this._setter('is_buyer',v)}, enumerable: true, configurable: true},
is_supplier: {get: function(){return this._getter('is_supplier')}, set: function(v){this._setter('is_supplier',v)}, enumerable: true, configurable: true},
primary_contact: {get: function(){return this._getter('primary_contact')}, set: function(v){this._setter('primary_contact',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
function CatPartnersContact_informationRow(owner){CatPartnersContact_informationRow.superclass.constructor.call(this, owner)};
CatPartnersContact_informationRow._extend($p.TabularSectionRow);
$p.CatPartnersContact_informationRow = CatPartnersContact_informationRow;
CatPartnersContact_informationRow.prototype.__define({type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
kind: {get: function(){return this._getter('kind')}, set: function(v){this._setter('kind',v)}, enumerable: true, configurable: true},
presentation: {get: function(){return this._getter('presentation')}, set: function(v){this._setter('presentation',v)}, enumerable: true, configurable: true},
values_fields: {get: function(){return this._getter('values_fields')}, set: function(v){this._setter('values_fields',v)}, enumerable: true, configurable: true},
country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
email_address: {get: function(){return this._getter('email_address')}, set: function(v){this._setter('email_address',v)}, enumerable: true, configurable: true},
server_domain_name: {get: function(){return this._getter('server_domain_name')}, set: function(v){this._setter('server_domain_name',v)}, enumerable: true, configurable: true},
phone_number: {get: function(){return this._getter('phone_number')}, set: function(v){this._setter('phone_number',v)}, enumerable: true, configurable: true},
phone_without_codes: {get: function(){return this._getter('phone_without_codes')}, set: function(v){this._setter('phone_without_codes',v)}, enumerable: true, configurable: true}});
CatPartners.prototype.__define('contact_information', {get: function(){return this._getter_ts('contact_information')}, set: function(v){this._setter_ts('contact_information',v)}, enumerable: true, configurable: true});
function CatPartnersExtra_fieldsRow(owner){CatPartnersExtra_fieldsRow.superclass.constructor.call(this, owner)};
CatPartnersExtra_fieldsRow._extend($p.TabularSectionRow);
$p.CatPartnersExtra_fieldsRow = CatPartnersExtra_fieldsRow;
CatPartnersExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
CatPartners.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
$p.cat.partners = new $p.CatManager('cat.partners');

/**
* ### Справочник Номенклатура
* Перечень товаров, продукции, материалов, полуфабрикатов, тары, услуг
* @class CatNom
* @extends CatObj
* @constructor 
*/
function CatNom(attr, manager){CatNom.superclass.constructor.call(this, attr, manager)}
CatNom._extend($p.CatObj);
$p.CatNom = CatNom;
CatNom.prototype.__define({article: {get: function(){return this._getter('article')}, set: function(v){this._setter('article',v)}, enumerable: true, configurable: true},
name_full: {get: function(){return this._getter('name_full')}, set: function(v){this._setter('name_full',v)}, enumerable: true, configurable: true},
base_unit: {get: function(){return this._getter('base_unit')}, set: function(v){this._setter('base_unit',v)}, enumerable: true, configurable: true},
storage_unit: {get: function(){return this._getter('storage_unit')}, set: function(v){this._setter('storage_unit',v)}, enumerable: true, configurable: true},
nom_kind: {get: function(){return this._getter('nom_kind')}, set: function(v){this._setter('nom_kind',v)}, enumerable: true, configurable: true},
nom_group: {get: function(){return this._getter('nom_group')}, set: function(v){this._setter('nom_group',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
price_group: {get: function(){return this._getter('price_group')}, set: function(v){this._setter('price_group',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
thickness: {get: function(){return this._getter('thickness')}, set: function(v){this._setter('thickness',v)}, enumerable: true, configurable: true},
sizefurn: {get: function(){return this._getter('sizefurn')}, set: function(v){this._setter('sizefurn',v)}, enumerable: true, configurable: true},
sizefaltz: {get: function(){return this._getter('sizefaltz')}, set: function(v){this._setter('sizefaltz',v)}, enumerable: true, configurable: true},
density: {get: function(){return this._getter('density')}, set: function(v){this._setter('density',v)}, enumerable: true, configurable: true},
volume: {get: function(){return this._getter('volume')}, set: function(v){this._setter('volume',v)}, enumerable: true, configurable: true},
arc_elongation: {get: function(){return this._getter('arc_elongation')}, set: function(v){this._setter('arc_elongation',v)}, enumerable: true, configurable: true},
loss_factor: {get: function(){return this._getter('loss_factor')}, set: function(v){this._setter('loss_factor',v)}, enumerable: true, configurable: true},
rounding_quantity: {get: function(){return this._getter('rounding_quantity')}, set: function(v){this._setter('rounding_quantity',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
cutting_optimization_type: {get: function(){return this._getter('cutting_optimization_type')}, set: function(v){this._setter('cutting_optimization_type',v)}, enumerable: true, configurable: true},
crooked: {get: function(){return this._getter('crooked')}, set: function(v){this._setter('crooked',v)}, enumerable: true, configurable: true},
colored: {get: function(){return this._getter('colored')}, set: function(v){this._setter('colored',v)}, enumerable: true, configurable: true},
lay: {get: function(){return this._getter('lay')}, set: function(v){this._setter('lay',v)}, enumerable: true, configurable: true},
made_to_order: {get: function(){return this._getter('made_to_order')}, set: function(v){this._setter('made_to_order',v)}, enumerable: true, configurable: true},
days_to_execution: {get: function(){return this._getter('days_to_execution')}, set: function(v){this._setter('days_to_execution',v)}, enumerable: true, configurable: true},
days_from_execution: {get: function(){return this._getter('days_from_execution')}, set: function(v){this._setter('days_from_execution',v)}, enumerable: true, configurable: true},
pricing: {get: function(){return this._getter('pricing')}, set: function(v){this._setter('pricing',v)}, enumerable: true, configurable: true},
visualization: {get: function(){return this._getter('visualization')}, set: function(v){this._setter('visualization',v)}, enumerable: true, configurable: true},
complete_list_sorting: {get: function(){return this._getter('complete_list_sorting')}, set: function(v){this._setter('complete_list_sorting',v)}, enumerable: true, configurable: true},
is_accessory: {get: function(){return this._getter('is_accessory')}, set: function(v){this._setter('is_accessory',v)}, enumerable: true, configurable: true},
is_procedure: {get: function(){return this._getter('is_procedure')}, set: function(v){this._setter('is_procedure',v)}, enumerable: true, configurable: true},
is_service: {get: function(){return this._getter('is_service')}, set: function(v){this._setter('is_service',v)}, enumerable: true, configurable: true},
is_pieces: {get: function(){return this._getter('is_pieces')}, set: function(v){this._setter('is_pieces',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
function CatNomExtra_fieldsRow(owner){CatNomExtra_fieldsRow.superclass.constructor.call(this, owner)};
CatNomExtra_fieldsRow._extend($p.TabularSectionRow);
$p.CatNomExtra_fieldsRow = CatNomExtra_fieldsRow;
CatNomExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
CatNom.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
$p.cat.nom = new $p.CatManager('cat.nom');

/**
* ### Справочник Организации
* Организации
* @class CatOrganizations
* @extends CatObj
* @constructor 
*/
function CatOrganizations(attr, manager){CatOrganizations.superclass.constructor.call(this, attr, manager)}
CatOrganizations._extend($p.CatObj);
$p.CatOrganizations = CatOrganizations;
CatOrganizations.prototype.__define({prefix: {get: function(){return this._getter('prefix')}, set: function(v){this._setter('prefix',v)}, enumerable: true, configurable: true},
individual_legal: {get: function(){return this._getter('individual_legal')}, set: function(v){this._setter('individual_legal',v)}, enumerable: true, configurable: true},
individual_entrepreneur: {get: function(){return this._getter('individual_entrepreneur')}, set: function(v){this._setter('individual_entrepreneur',v)}, enumerable: true, configurable: true},
inn: {get: function(){return this._getter('inn')}, set: function(v){this._setter('inn',v)}, enumerable: true, configurable: true},
kpp: {get: function(){return this._getter('kpp')}, set: function(v){this._setter('kpp',v)}, enumerable: true, configurable: true},
main_bank_account: {get: function(){return this._getter('main_bank_account')}, set: function(v){this._setter('main_bank_account',v)}, enumerable: true, configurable: true},
main_cashbox: {get: function(){return this._getter('main_cashbox')}, set: function(v){this._setter('main_cashbox',v)}, enumerable: true, configurable: true},
certificate_series_number: {get: function(){return this._getter('certificate_series_number')}, set: function(v){this._setter('certificate_series_number',v)}, enumerable: true, configurable: true},
certificate_date_issue: {get: function(){return this._getter('certificate_date_issue')}, set: function(v){this._setter('certificate_date_issue',v)}, enumerable: true, configurable: true},
certificate_authority_name: {get: function(){return this._getter('certificate_authority_name')}, set: function(v){this._setter('certificate_authority_name',v)}, enumerable: true, configurable: true},
certificate_authority_code: {get: function(){return this._getter('certificate_authority_code')}, set: function(v){this._setter('certificate_authority_code',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
function CatOrganizationsContact_informationRow(owner){CatOrganizationsContact_informationRow.superclass.constructor.call(this, owner)};
CatOrganizationsContact_informationRow._extend($p.TabularSectionRow);
$p.CatOrganizationsContact_informationRow = CatOrganizationsContact_informationRow;
CatOrganizationsContact_informationRow.prototype.__define({type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
kind: {get: function(){return this._getter('kind')}, set: function(v){this._setter('kind',v)}, enumerable: true, configurable: true},
presentation: {get: function(){return this._getter('presentation')}, set: function(v){this._setter('presentation',v)}, enumerable: true, configurable: true},
values_fields: {get: function(){return this._getter('values_fields')}, set: function(v){this._setter('values_fields',v)}, enumerable: true, configurable: true},
country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
email_address: {get: function(){return this._getter('email_address')}, set: function(v){this._setter('email_address',v)}, enumerable: true, configurable: true},
server_domain_name: {get: function(){return this._getter('server_domain_name')}, set: function(v){this._setter('server_domain_name',v)}, enumerable: true, configurable: true},
phone_number: {get: function(){return this._getter('phone_number')}, set: function(v){this._setter('phone_number',v)}, enumerable: true, configurable: true},
phone_without_codes: {get: function(){return this._getter('phone_without_codes')}, set: function(v){this._setter('phone_without_codes',v)}, enumerable: true, configurable: true},
ВидДляСписка: {get: function(){return this._getter('ВидДляСписка')}, set: function(v){this._setter('ВидДляСписка',v)}, enumerable: true, configurable: true},
ДействуетС: {get: function(){return this._getter('ДействуетС')}, set: function(v){this._setter('ДействуетС',v)}, enumerable: true, configurable: true}});
CatOrganizations.prototype.__define('contact_information', {get: function(){return this._getter_ts('contact_information')}, set: function(v){this._setter_ts('contact_information',v)}, enumerable: true, configurable: true});
function CatOrganizationsExtra_fieldsRow(owner){CatOrganizationsExtra_fieldsRow.superclass.constructor.call(this, owner)};
CatOrganizationsExtra_fieldsRow._extend($p.TabularSectionRow);
$p.CatOrganizationsExtra_fieldsRow = CatOrganizationsExtra_fieldsRow;
CatOrganizationsExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
CatOrganizations.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
$p.cat.organizations = new $p.CatManager('cat.organizations');

/**
* ### Справочник Вставки
* Армирование, пленки, вставки - дополнение спецификации, которое зависит от одного элемента
* @class CatInserts
* @extends CatObj
* @constructor 
*/
function CatInserts(attr, manager){CatInserts.superclass.constructor.call(this, attr, manager)}
CatInserts._extend($p.CatObj);
$p.CatInserts = CatInserts;
CatInserts.prototype.__define({insert_type: {get: function(){return this._getter('insert_type')}, set: function(v){this._setter('insert_type',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
hmin: {get: function(){return this._getter('hmin')}, set: function(v){this._setter('hmin',v)}, enumerable: true, configurable: true},
hmax: {get: function(){return this._getter('hmax')}, set: function(v){this._setter('hmax',v)}, enumerable: true, configurable: true},
smin: {get: function(){return this._getter('smin')}, set: function(v){this._setter('smin',v)}, enumerable: true, configurable: true},
smax: {get: function(){return this._getter('smax')}, set: function(v){this._setter('smax',v)}, enumerable: true, configurable: true},
for_direct_profile_only: {get: function(){return this._getter('for_direct_profile_only')}, set: function(v){this._setter('for_direct_profile_only',v)}, enumerable: true, configurable: true},
ahmin: {get: function(){return this._getter('ahmin')}, set: function(v){this._setter('ahmin',v)}, enumerable: true, configurable: true},
ahmax: {get: function(){return this._getter('ahmax')}, set: function(v){this._setter('ahmax',v)}, enumerable: true, configurable: true},
priority: {get: function(){return this._getter('priority')}, set: function(v){this._setter('priority',v)}, enumerable: true, configurable: true},
mmin: {get: function(){return this._getter('mmin')}, set: function(v){this._setter('mmin',v)}, enumerable: true, configurable: true},
mmax: {get: function(){return this._getter('mmax')}, set: function(v){this._setter('mmax',v)}, enumerable: true, configurable: true},
impost_fixation: {get: function(){return this._getter('impost_fixation')}, set: function(v){this._setter('impost_fixation',v)}, enumerable: true, configurable: true},
shtulp_fixation: {get: function(){return this._getter('shtulp_fixation')}, set: function(v){this._setter('shtulp_fixation',v)}, enumerable: true, configurable: true},
can_rotate: {get: function(){return this._getter('can_rotate')}, set: function(v){this._setter('can_rotate',v)}, enumerable: true, configurable: true},
sizeb: {get: function(){return this._getter('sizeb')}, set: function(v){this._setter('sizeb',v)}, enumerable: true, configurable: true},
clr_group: {get: function(){return this._getter('clr_group')}, set: function(v){this._setter('clr_group',v)}, enumerable: true, configurable: true},
is_order_row: {get: function(){return this._getter('is_order_row')}, set: function(v){this._setter('is_order_row',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
insert_glass_type: {get: function(){return this._getter('insert_glass_type')}, set: function(v){this._setter('insert_glass_type',v)}, enumerable: true, configurable: true},
available: {get: function(){return this._getter('available')}, set: function(v){this._setter('available',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
function CatInsertsSpecificationRow(owner){CatInsertsSpecificationRow.superclass.constructor.call(this, owner)};
CatInsertsSpecificationRow._extend($p.TabularSectionRow);
$p.CatInsertsSpecificationRow = CatInsertsSpecificationRow;
CatInsertsSpecificationRow.prototype.__define({elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
nom_characteristic: {get: function(){return this._getter('nom_characteristic')}, set: function(v){this._setter('nom_characteristic',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
sz: {get: function(){return this._getter('sz')}, set: function(v){this._setter('sz',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
angle_calc_method: {get: function(){return this._getter('angle_calc_method')}, set: function(v){this._setter('angle_calc_method',v)}, enumerable: true, configurable: true},
count_calc_method: {get: function(){return this._getter('count_calc_method')}, set: function(v){this._setter('count_calc_method',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
ahmin: {get: function(){return this._getter('ahmin')}, set: function(v){this._setter('ahmin',v)}, enumerable: true, configurable: true},
ahmax: {get: function(){return this._getter('ahmax')}, set: function(v){this._setter('ahmax',v)}, enumerable: true, configurable: true},
smin: {get: function(){return this._getter('smin')}, set: function(v){this._setter('smin',v)}, enumerable: true, configurable: true},
smax: {get: function(){return this._getter('smax')}, set: function(v){this._setter('smax',v)}, enumerable: true, configurable: true},
for_direct_profile_only: {get: function(){return this._getter('for_direct_profile_only')}, set: function(v){this._setter('for_direct_profile_only',v)}, enumerable: true, configurable: true},
step: {get: function(){return this._getter('step')}, set: function(v){this._setter('step',v)}, enumerable: true, configurable: true},
step_angle: {get: function(){return this._getter('step_angle')}, set: function(v){this._setter('step_angle',v)}, enumerable: true, configurable: true},
offsets: {get: function(){return this._getter('offsets')}, set: function(v){this._setter('offsets',v)}, enumerable: true, configurable: true},
do_center: {get: function(){return this._getter('do_center')}, set: function(v){this._setter('do_center',v)}, enumerable: true, configurable: true},
attrs_option: {get: function(){return this._getter('attrs_option')}, set: function(v){this._setter('attrs_option',v)}, enumerable: true, configurable: true},
end_mount: {get: function(){return this._getter('end_mount')}, set: function(v){this._setter('end_mount',v)}, enumerable: true, configurable: true},
is_order_row: {get: function(){return this._getter('is_order_row')}, set: function(v){this._setter('is_order_row',v)}, enumerable: true, configurable: true},
is_main_elm: {get: function(){return this._getter('is_main_elm')}, set: function(v){this._setter('is_main_elm',v)}, enumerable: true, configurable: true}});
CatInserts.prototype.__define('specification', {get: function(){return this._getter_ts('specification')}, set: function(v){this._setter_ts('specification',v)}, enumerable: true, configurable: true});
function CatInsertsSelection_paramsRow(owner){CatInsertsSelection_paramsRow.superclass.constructor.call(this, owner)};
CatInsertsSelection_paramsRow._extend($p.TabularSectionRow);
$p.CatInsertsSelection_paramsRow = CatInsertsSelection_paramsRow;
CatInsertsSelection_paramsRow.prototype.__define({elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
comparison_type: {get: function(){return this._getter('comparison_type')}, set: function(v){this._setter('comparison_type',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
CatInserts.prototype.__define('selection_params', {get: function(){return this._getter_ts('selection_params')}, set: function(v){this._setter_ts('selection_params',v)}, enumerable: true, configurable: true});
$p.cat.inserts = new $p.CatManager('cat.inserts');

/**
* ### Справочник КлючиПараметров
* Списки пар {Параметр:Значение} для фильтрации в подсистемах формирования спецификаций, планировании и ценообразовании

* @class CatParameters_keys
* @extends CatObj
* @constructor 
*/
function CatParameters_keys(attr, manager){CatParameters_keys.superclass.constructor.call(this, attr, manager)}
CatParameters_keys._extend($p.CatObj);
$p.CatParameters_keys = CatParameters_keys;
CatParameters_keys.prototype.__define({priority: {get: function(){return this._getter('priority')}, set: function(v){this._setter('priority',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
function CatParameters_keysParamsRow(owner){CatParameters_keysParamsRow.superclass.constructor.call(this, owner)};
CatParameters_keysParamsRow._extend($p.TabularSectionRow);
$p.CatParameters_keysParamsRow = CatParameters_keysParamsRow;
CatParameters_keysParamsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
comparison_type: {get: function(){return this._getter('comparison_type')}, set: function(v){this._setter('comparison_type',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
CatParameters_keys.prototype.__define('params', {get: function(){return this._getter_ts('params')}, set: function(v){this._setter_ts('params',v)}, enumerable: true, configurable: true});
$p.cat.parameters_keys = new $p.CatManager('cat.parameters_keys');

/**
* ### Справочник пзПараметрыПродукции
* Настройки системы профилей и фурнитуры
* @class CatProduction_params
* @extends CatObj
* @constructor 
*/
function CatProduction_params(attr, manager){CatProduction_params.superclass.constructor.call(this, attr, manager)}
CatProduction_params._extend($p.CatObj);
$p.CatProduction_params = CatProduction_params;
CatProduction_params.prototype.__define({default_clr: {get: function(){return this._getter('default_clr')}, set: function(v){this._setter('default_clr',v)}, enumerable: true, configurable: true},
clr_group: {get: function(){return this._getter('clr_group')}, set: function(v){this._setter('clr_group',v)}, enumerable: true, configurable: true},
tmin: {get: function(){return this._getter('tmin')}, set: function(v){this._setter('tmin',v)}, enumerable: true, configurable: true},
tmax: {get: function(){return this._getter('tmax')}, set: function(v){this._setter('tmax',v)}, enumerable: true, configurable: true},
allow_open_cnn: {get: function(){return this._getter('allow_open_cnn')}, set: function(v){this._setter('allow_open_cnn',v)}, enumerable: true, configurable: true},
flap_pos_by_impost: {get: function(){return this._getter('flap_pos_by_impost')}, set: function(v){this._setter('flap_pos_by_impost',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
function CatProduction_paramsElmntsRow(owner){CatProduction_paramsElmntsRow.superclass.constructor.call(this, owner)};
CatProduction_paramsElmntsRow._extend($p.TabularSectionRow);
$p.CatProduction_paramsElmntsRow = CatProduction_paramsElmntsRow;
CatProduction_paramsElmntsRow.prototype.__define({by_default: {get: function(){return this._getter('by_default')}, set: function(v){this._setter('by_default',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
pos: {get: function(){return this._getter('pos')}, set: function(v){this._setter('pos',v)}, enumerable: true, configurable: true}});
CatProduction_params.prototype.__define('elmnts', {get: function(){return this._getter_ts('elmnts')}, set: function(v){this._setter_ts('elmnts',v)}, enumerable: true, configurable: true});
function CatProduction_paramsProductionRow(owner){CatProduction_paramsProductionRow.superclass.constructor.call(this, owner)};
CatProduction_paramsProductionRow._extend($p.TabularSectionRow);
$p.CatProduction_paramsProductionRow = CatProduction_paramsProductionRow;
CatProduction_paramsProductionRow.prototype.__define({nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true}});
CatProduction_params.prototype.__define('production', {get: function(){return this._getter_ts('production')}, set: function(v){this._setter_ts('production',v)}, enumerable: true, configurable: true});
function CatProduction_paramsProduct_paramsRow(owner){CatProduction_paramsProduct_paramsRow.superclass.constructor.call(this, owner)};
CatProduction_paramsProduct_paramsRow._extend($p.TabularSectionRow);
$p.CatProduction_paramsProduct_paramsRow = CatProduction_paramsProduct_paramsRow;
CatProduction_paramsProduct_paramsRow.prototype.__define({param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
forcibly: {get: function(){return this._getter('forcibly')}, set: function(v){this._setter('forcibly',v)}, enumerable: true, configurable: true}});
CatProduction_params.prototype.__define('product_params', {get: function(){return this._getter_ts('product_params')}, set: function(v){this._setter_ts('product_params',v)}, enumerable: true, configurable: true});
function CatProduction_paramsFurn_paramsRow(owner){CatProduction_paramsFurn_paramsRow.superclass.constructor.call(this, owner)};
CatProduction_paramsFurn_paramsRow._extend($p.TabularSectionRow);
$p.CatProduction_paramsFurn_paramsRow = CatProduction_paramsFurn_paramsRow;
CatProduction_paramsFurn_paramsRow.prototype.__define({param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
forcibly: {get: function(){return this._getter('forcibly')}, set: function(v){this._setter('forcibly',v)}, enumerable: true, configurable: true}});
CatProduction_params.prototype.__define('furn_params', {get: function(){return this._getter_ts('furn_params')}, set: function(v){this._setter_ts('furn_params',v)}, enumerable: true, configurable: true});
function CatProduction_paramsBase_blocksRow(owner){CatProduction_paramsBase_blocksRow.superclass.constructor.call(this, owner)};
CatProduction_paramsBase_blocksRow._extend($p.TabularSectionRow);
$p.CatProduction_paramsBase_blocksRow = CatProduction_paramsBase_blocksRow;
CatProduction_paramsBase_blocksRow.prototype.__define({calc_order: {get: function(){return this._getter('calc_order')}, set: function(v){this._setter('calc_order',v)}, enumerable: true, configurable: true}});
CatProduction_params.prototype.__define('base_blocks', {get: function(){return this._getter_ts('base_blocks')}, set: function(v){this._setter_ts('base_blocks',v)}, enumerable: true, configurable: true});
$p.cat.production_params = new $p.CatManager('cat.production_params');

/**
* ### Справочник РайоныДоставки
* Районы доставки
* @class CatDelivery_areas
* @extends CatObj
* @constructor 
*/
function CatDelivery_areas(attr, manager){CatDelivery_areas.superclass.constructor.call(this, attr, manager)}
CatDelivery_areas._extend($p.CatObj);
$p.CatDelivery_areas = CatDelivery_areas;
CatDelivery_areas.prototype.__define({country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
latitude: {get: function(){return this._getter('latitude')}, set: function(v){this._setter('latitude',v)}, enumerable: true, configurable: true},
longitude: {get: function(){return this._getter('longitude')}, set: function(v){this._setter('longitude',v)}, enumerable: true, configurable: true},
ind: {get: function(){return this._getter('ind')}, set: function(v){this._setter('ind',v)}, enumerable: true, configurable: true},
delivery_area: {get: function(){return this._getter('delivery_area')}, set: function(v){this._setter('delivery_area',v)}, enumerable: true, configurable: true},
specify_area_by_geocoder: {get: function(){return this._getter('specify_area_by_geocoder')}, set: function(v){this._setter('specify_area_by_geocoder',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.delivery_areas = new $p.CatManager('cat.delivery_areas');

/**
* ### Справочник пзСоединения
* Спецификации соединений элементов
* @class CatCnns
* @extends CatObj
* @constructor 
*/
function CatCnns(attr, manager){CatCnns.superclass.constructor.call(this, attr, manager)}
CatCnns._extend($p.CatObj);
$p.CatCnns = CatCnns;
CatCnns.prototype.__define({priority: {get: function(){return this._getter('priority')}, set: function(v){this._setter('priority',v)}, enumerable: true, configurable: true},
amin: {get: function(){return this._getter('amin')}, set: function(v){this._setter('amin',v)}, enumerable: true, configurable: true},
amax: {get: function(){return this._getter('amax')}, set: function(v){this._setter('amax',v)}, enumerable: true, configurable: true},
sd1: {get: function(){return this._getter('sd1')}, set: function(v){this._setter('sd1',v)}, enumerable: true, configurable: true},
sz: {get: function(){return this._getter('sz')}, set: function(v){this._setter('sz',v)}, enumerable: true, configurable: true},
cnn_type: {get: function(){return this._getter('cnn_type')}, set: function(v){this._setter('cnn_type',v)}, enumerable: true, configurable: true},
ahmin: {get: function(){return this._getter('ahmin')}, set: function(v){this._setter('ahmin',v)}, enumerable: true, configurable: true},
ahmax: {get: function(){return this._getter('ahmax')}, set: function(v){this._setter('ahmax',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
tmin: {get: function(){return this._getter('tmin')}, set: function(v){this._setter('tmin',v)}, enumerable: true, configurable: true},
tmax: {get: function(){return this._getter('tmax')}, set: function(v){this._setter('tmax',v)}, enumerable: true, configurable: true},
var_layers: {get: function(){return this._getter('var_layers')}, set: function(v){this._setter('var_layers',v)}, enumerable: true, configurable: true},
for_direct_profile_only: {get: function(){return this._getter('for_direct_profile_only')}, set: function(v){this._setter('for_direct_profile_only',v)}, enumerable: true, configurable: true},
art1vert: {get: function(){return this._getter('art1vert')}, set: function(v){this._setter('art1vert',v)}, enumerable: true, configurable: true},
art1glass: {get: function(){return this._getter('art1glass')}, set: function(v){this._setter('art1glass',v)}, enumerable: true, configurable: true},
art2glass: {get: function(){return this._getter('art2glass')}, set: function(v){this._setter('art2glass',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
function CatCnnsSpecificationRow(owner){CatCnnsSpecificationRow.superclass.constructor.call(this, owner)};
CatCnnsSpecificationRow._extend($p.TabularSectionRow);
$p.CatCnnsSpecificationRow = CatCnnsSpecificationRow;
CatCnnsSpecificationRow.prototype.__define({elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
nom_characteristic: {get: function(){return this._getter('nom_characteristic')}, set: function(v){this._setter('nom_characteristic',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
sz: {get: function(){return this._getter('sz')}, set: function(v){this._setter('sz',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
sz_min: {get: function(){return this._getter('sz_min')}, set: function(v){this._setter('sz_min',v)}, enumerable: true, configurable: true},
sz_max: {get: function(){return this._getter('sz_max')}, set: function(v){this._setter('sz_max',v)}, enumerable: true, configurable: true},
amin: {get: function(){return this._getter('amin')}, set: function(v){this._setter('amin',v)}, enumerable: true, configurable: true},
amax: {get: function(){return this._getter('amax')}, set: function(v){this._setter('amax',v)}, enumerable: true, configurable: true},
set_specification: {get: function(){return this._getter('set_specification')}, set: function(v){this._setter('set_specification',v)}, enumerable: true, configurable: true},
for_direct_profile_only: {get: function(){return this._getter('for_direct_profile_only')}, set: function(v){this._setter('for_direct_profile_only',v)}, enumerable: true, configurable: true},
by_contour: {get: function(){return this._getter('by_contour')}, set: function(v){this._setter('by_contour',v)}, enumerable: true, configurable: true},
contraction_by_contour: {get: function(){return this._getter('contraction_by_contour')}, set: function(v){this._setter('contraction_by_contour',v)}, enumerable: true, configurable: true},
on_aperture: {get: function(){return this._getter('on_aperture')}, set: function(v){this._setter('on_aperture',v)}, enumerable: true, configurable: true},
angle_calc_method: {get: function(){return this._getter('angle_calc_method')}, set: function(v){this._setter('angle_calc_method',v)}, enumerable: true, configurable: true},
contour_number: {get: function(){return this._getter('contour_number')}, set: function(v){this._setter('contour_number',v)}, enumerable: true, configurable: true},
is_order_row: {get: function(){return this._getter('is_order_row')}, set: function(v){this._setter('is_order_row',v)}, enumerable: true, configurable: true}});
CatCnns.prototype.__define('specification', {get: function(){return this._getter_ts('specification')}, set: function(v){this._setter_ts('specification',v)}, enumerable: true, configurable: true});
function CatCnnsCnn_elmntsRow(owner){CatCnnsCnn_elmntsRow.superclass.constructor.call(this, owner)};
CatCnnsCnn_elmntsRow._extend($p.TabularSectionRow);
$p.CatCnnsCnn_elmntsRow = CatCnnsCnn_elmntsRow;
CatCnnsCnn_elmntsRow.prototype.__define({nom1: {get: function(){return this._getter('nom1')}, set: function(v){this._setter('nom1',v)}, enumerable: true, configurable: true},
clr1: {get: function(){return this._getter('clr1')}, set: function(v){this._setter('clr1',v)}, enumerable: true, configurable: true},
nom2: {get: function(){return this._getter('nom2')}, set: function(v){this._setter('nom2',v)}, enumerable: true, configurable: true},
clr2: {get: function(){return this._getter('clr2')}, set: function(v){this._setter('clr2',v)}, enumerable: true, configurable: true},
varclr: {get: function(){return this._getter('varclr')}, set: function(v){this._setter('varclr',v)}, enumerable: true, configurable: true},
is_nom_combinations_row: {get: function(){return this._getter('is_nom_combinations_row')}, set: function(v){this._setter('is_nom_combinations_row',v)}, enumerable: true, configurable: true}});
CatCnns.prototype.__define('cnn_elmnts', {get: function(){return this._getter_ts('cnn_elmnts')}, set: function(v){this._setter_ts('cnn_elmnts',v)}, enumerable: true, configurable: true});
function CatCnnsSelection_paramsRow(owner){CatCnnsSelection_paramsRow.superclass.constructor.call(this, owner)};
CatCnnsSelection_paramsRow._extend($p.TabularSectionRow);
$p.CatCnnsSelection_paramsRow = CatCnnsSelection_paramsRow;
CatCnnsSelection_paramsRow.prototype.__define({elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
comparison_type: {get: function(){return this._getter('comparison_type')}, set: function(v){this._setter('comparison_type',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
CatCnns.prototype.__define('selection_params', {get: function(){return this._getter_ts('selection_params')}, set: function(v){this._setter_ts('selection_params',v)}, enumerable: true, configurable: true});
$p.cat.cnns = new $p.CatManager('cat.cnns');

/**
* ### Справочник пзФурнитура
* Описывает ограничения и правила формирования спецификаций фурнитуры
* @class CatFurns
* @extends CatObj
* @constructor 
*/
function CatFurns(attr, manager){CatFurns.superclass.constructor.call(this, attr, manager)}
CatFurns._extend($p.CatObj);
$p.CatFurns = CatFurns;
CatFurns.prototype.__define({flap_weight_max: {get: function(){return this._getter('flap_weight_max')}, set: function(v){this._setter('flap_weight_max',v)}, enumerable: true, configurable: true},
left_right: {get: function(){return this._getter('left_right')}, set: function(v){this._setter('left_right',v)}, enumerable: true, configurable: true},
is_set: {get: function(){return this._getter('is_set')}, set: function(v){this._setter('is_set',v)}, enumerable: true, configurable: true},
is_sliding: {get: function(){return this._getter('is_sliding')}, set: function(v){this._setter('is_sliding',v)}, enumerable: true, configurable: true},
furn_set: {get: function(){return this._getter('furn_set')}, set: function(v){this._setter('furn_set',v)}, enumerable: true, configurable: true},
side_count: {get: function(){return this._getter('side_count')}, set: function(v){this._setter('side_count',v)}, enumerable: true, configurable: true},
handle_side: {get: function(){return this._getter('handle_side')}, set: function(v){this._setter('handle_side',v)}, enumerable: true, configurable: true},
open_type: {get: function(){return this._getter('open_type')}, set: function(v){this._setter('open_type',v)}, enumerable: true, configurable: true},
name_short: {get: function(){return this._getter('name_short')}, set: function(v){this._setter('name_short',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
function CatFurnsOpen_tunesRow(owner){CatFurnsOpen_tunesRow.superclass.constructor.call(this, owner)};
CatFurnsOpen_tunesRow._extend($p.TabularSectionRow);
$p.CatFurnsOpen_tunesRow = CatFurnsOpen_tunesRow;
CatFurnsOpen_tunesRow.prototype.__define({side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
amin: {get: function(){return this._getter('amin')}, set: function(v){this._setter('amin',v)}, enumerable: true, configurable: true},
amax: {get: function(){return this._getter('amax')}, set: function(v){this._setter('amax',v)}, enumerable: true, configurable: true},
arc_available: {get: function(){return this._getter('arc_available')}, set: function(v){this._setter('arc_available',v)}, enumerable: true, configurable: true},
shtulp_available: {get: function(){return this._getter('shtulp_available')}, set: function(v){this._setter('shtulp_available',v)}, enumerable: true, configurable: true},
shtulp_fix_here: {get: function(){return this._getter('shtulp_fix_here')}, set: function(v){this._setter('shtulp_fix_here',v)}, enumerable: true, configurable: true},
rotation_axis: {get: function(){return this._getter('rotation_axis')}, set: function(v){this._setter('rotation_axis',v)}, enumerable: true, configurable: true},
partial_opening: {get: function(){return this._getter('partial_opening')}, set: function(v){this._setter('partial_opening',v)}, enumerable: true, configurable: true},
outline: {get: function(){return this._getter('outline')}, set: function(v){this._setter('outline',v)}, enumerable: true, configurable: true}});
CatFurns.prototype.__define('open_tunes', {get: function(){return this._getter_ts('open_tunes')}, set: function(v){this._setter_ts('open_tunes',v)}, enumerable: true, configurable: true});
function CatFurnsSpecificationRow(owner){CatFurnsSpecificationRow.superclass.constructor.call(this, owner)};
CatFurnsSpecificationRow._extend($p.TabularSectionRow);
$p.CatFurnsSpecificationRow = CatFurnsSpecificationRow;
CatFurnsSpecificationRow.prototype.__define({elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
nom_characteristic: {get: function(){return this._getter('nom_characteristic')}, set: function(v){this._setter('nom_characteristic',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
handle_height_base: {get: function(){return this._getter('handle_height_base')}, set: function(v){this._setter('handle_height_base',v)}, enumerable: true, configurable: true},
handle_height_min: {get: function(){return this._getter('handle_height_min')}, set: function(v){this._setter('handle_height_min',v)}, enumerable: true, configurable: true},
handle_height_max: {get: function(){return this._getter('handle_height_max')}, set: function(v){this._setter('handle_height_max',v)}, enumerable: true, configurable: true},
contraction: {get: function(){return this._getter('contraction')}, set: function(v){this._setter('contraction',v)}, enumerable: true, configurable: true},
contraction_option: {get: function(){return this._getter('contraction_option')}, set: function(v){this._setter('contraction_option',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
flap_weight_min: {get: function(){return this._getter('flap_weight_min')}, set: function(v){this._setter('flap_weight_min',v)}, enumerable: true, configurable: true},
flap_weight_max: {get: function(){return this._getter('flap_weight_max')}, set: function(v){this._setter('flap_weight_max',v)}, enumerable: true, configurable: true},
side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
cnn_side: {get: function(){return this._getter('cnn_side')}, set: function(v){this._setter('cnn_side',v)}, enumerable: true, configurable: true},
offset_option: {get: function(){return this._getter('offset_option')}, set: function(v){this._setter('offset_option',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
transfer_option: {get: function(){return this._getter('transfer_option')}, set: function(v){this._setter('transfer_option',v)}, enumerable: true, configurable: true},
overmeasure: {get: function(){return this._getter('overmeasure')}, set: function(v){this._setter('overmeasure',v)}, enumerable: true, configurable: true},
is_main_specification_row: {get: function(){return this._getter('is_main_specification_row')}, set: function(v){this._setter('is_main_specification_row',v)}, enumerable: true, configurable: true},
is_set_row: {get: function(){return this._getter('is_set_row')}, set: function(v){this._setter('is_set_row',v)}, enumerable: true, configurable: true},
is_procedure_row: {get: function(){return this._getter('is_procedure_row')}, set: function(v){this._setter('is_procedure_row',v)}, enumerable: true, configurable: true},
is_order_row: {get: function(){return this._getter('is_order_row')}, set: function(v){this._setter('is_order_row',v)}, enumerable: true, configurable: true}});
CatFurns.prototype.__define('specification', {get: function(){return this._getter_ts('specification')}, set: function(v){this._setter_ts('specification',v)}, enumerable: true, configurable: true});
function CatFurnsSelection_paramsRow(owner){CatFurnsSelection_paramsRow.superclass.constructor.call(this, owner)};
CatFurnsSelection_paramsRow._extend($p.TabularSectionRow);
$p.CatFurnsSelection_paramsRow = CatFurnsSelection_paramsRow;
CatFurnsSelection_paramsRow.prototype.__define({elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
comparison_type: {get: function(){return this._getter('comparison_type')}, set: function(v){this._setter('comparison_type',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
CatFurns.prototype.__define('selection_params', {get: function(){return this._getter_ts('selection_params')}, set: function(v){this._setter_ts('selection_params',v)}, enumerable: true, configurable: true});
function CatFurnsSpecification_restrictionsRow(owner){CatFurnsSpecification_restrictionsRow.superclass.constructor.call(this, owner)};
CatFurnsSpecification_restrictionsRow._extend($p.TabularSectionRow);
$p.CatFurnsSpecification_restrictionsRow = CatFurnsSpecification_restrictionsRow;
CatFurnsSpecification_restrictionsRow.prototype.__define({elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true},
side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
amin: {get: function(){return this._getter('amin')}, set: function(v){this._setter('amin',v)}, enumerable: true, configurable: true},
amax: {get: function(){return this._getter('amax')}, set: function(v){this._setter('amax',v)}, enumerable: true, configurable: true}});
CatFurns.prototype.__define('specification_restrictions', {get: function(){return this._getter_ts('specification_restrictions')}, set: function(v){this._setter_ts('specification_restrictions',v)}, enumerable: true, configurable: true});
function CatFurnsColorsRow(owner){CatFurnsColorsRow.superclass.constructor.call(this, owner)};
CatFurnsColorsRow._extend($p.TabularSectionRow);
$p.CatFurnsColorsRow = CatFurnsColorsRow;
CatFurnsColorsRow.prototype.__define({clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true}});
CatFurns.prototype.__define('colors', {get: function(){return this._getter_ts('colors')}, set: function(v){this._setter_ts('colors',v)}, enumerable: true, configurable: true});
$p.cat.furns = new $p.CatManager('cat.furns');

/**
* ### Справочник пзЦвета
* Цвета
* @class CatClrs
* @extends CatObj
* @constructor 
*/
function CatClrs(attr, manager){CatClrs.superclass.constructor.call(this, attr, manager)}
CatClrs._extend($p.CatObj);
$p.CatClrs = CatClrs;
CatClrs.prototype.__define({ral: {get: function(){return this._getter('ral')}, set: function(v){this._setter('ral',v)}, enumerable: true, configurable: true},
machine_tools_clr: {get: function(){return this._getter('machine_tools_clr')}, set: function(v){this._setter('machine_tools_clr',v)}, enumerable: true, configurable: true},
clr_str: {get: function(){return this._getter('clr_str')}, set: function(v){this._setter('clr_str',v)}, enumerable: true, configurable: true},
clr_out: {get: function(){return this._getter('clr_out')}, set: function(v){this._setter('clr_out',v)}, enumerable: true, configurable: true},
clr_in: {get: function(){return this._getter('clr_in')}, set: function(v){this._setter('clr_in',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.clrs = new $p.CatManager('cat.clrs');

/**
* ### Справочник ЦветоЦеновыеГруппы
* Цвето-ценовые группы
* @class CatColor_price_groups
* @extends CatObj
* @constructor 
*/
function CatColor_price_groups(attr, manager){CatColor_price_groups.superclass.constructor.call(this, attr, manager)}
CatColor_price_groups._extend($p.CatObj);
$p.CatColor_price_groups = CatColor_price_groups;
CatColor_price_groups.prototype.__define({color_price_group_destination: {get: function(){return this._getter('color_price_group_destination')}, set: function(v){this._setter('color_price_group_destination',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
function CatColor_price_groupsPrice_groupsRow(owner){CatColor_price_groupsPrice_groupsRow.superclass.constructor.call(this, owner)};
CatColor_price_groupsPrice_groupsRow._extend($p.TabularSectionRow);
$p.CatColor_price_groupsPrice_groupsRow = CatColor_price_groupsPrice_groupsRow;
CatColor_price_groupsPrice_groupsRow.prototype.__define({price_group: {get: function(){return this._getter('price_group')}, set: function(v){this._setter('price_group',v)}, enumerable: true, configurable: true}});
CatColor_price_groups.prototype.__define('price_groups', {get: function(){return this._getter_ts('price_groups')}, set: function(v){this._setter_ts('price_groups',v)}, enumerable: true, configurable: true});
function CatColor_price_groupsClr_conformityRow(owner){CatColor_price_groupsClr_conformityRow.superclass.constructor.call(this, owner)};
CatColor_price_groupsClr_conformityRow._extend($p.TabularSectionRow);
$p.CatColor_price_groupsClr_conformityRow = CatColor_price_groupsClr_conformityRow;
CatColor_price_groupsClr_conformityRow.prototype.__define({clr1: {get: function(){return this._getter('clr1')}, set: function(v){this._setter('clr1',v)}, enumerable: true, configurable: true},
clr2: {get: function(){return this._getter('clr2')}, set: function(v){this._setter('clr2',v)}, enumerable: true, configurable: true}});
CatColor_price_groups.prototype.__define('clr_conformity', {get: function(){return this._getter_ts('clr_conformity')}, set: function(v){this._setter_ts('clr_conformity',v)}, enumerable: true, configurable: true});
$p.cat.color_price_groups = new $p.CatManager('cat.color_price_groups');

/**
* ### Справочник Подразделения
* Перечень подразделений предприятия
* @class CatDivisions
* @extends CatObj
* @constructor 
*/
function CatDivisions(attr, manager){CatDivisions.superclass.constructor.call(this, attr, manager)}
CatDivisions._extend($p.CatObj);
$p.CatDivisions = CatDivisions;
CatDivisions.prototype.__define({main_project: {get: function(){return this._getter('main_project')}, set: function(v){this._setter('main_project',v)}, enumerable: true, configurable: true},
sorting: {get: function(){return this._getter('sorting')}, set: function(v){this._setter('sorting',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
function CatDivisionsExtra_fieldsRow(owner){CatDivisionsExtra_fieldsRow.superclass.constructor.call(this, owner)};
CatDivisionsExtra_fieldsRow._extend($p.TabularSectionRow);
$p.CatDivisionsExtra_fieldsRow = CatDivisionsExtra_fieldsRow;
CatDivisionsExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
CatDivisions.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
$p.cat.divisions = new $p.CatManager('cat.divisions');

/**
* ### Справочник Пользователи
* Пользователи
* @class CatUsers
* @extends CatObj
* @constructor 
*/
function CatUsers(attr, manager){CatUsers.superclass.constructor.call(this, attr, manager)}
CatUsers._extend($p.CatObj);
$p.CatUsers = CatUsers;
CatUsers.prototype.__define({user_ib_uid: {get: function(){return this._getter('user_ib_uid')}, set: function(v){this._setter('user_ib_uid',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
individual_person: {get: function(){return this._getter('individual_person')}, set: function(v){this._setter('individual_person',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
user_fresh_uid: {get: function(){return this._getter('user_fresh_uid')}, set: function(v){this._setter('user_fresh_uid',v)}, enumerable: true, configurable: true},
invalid: {get: function(){return this._getter('invalid')}, set: function(v){this._setter('invalid',v)}, enumerable: true, configurable: true},
ancillary: {get: function(){return this._getter('ancillary')}, set: function(v){this._setter('ancillary',v)}, enumerable: true, configurable: true},
id: {get: function(){return this._getter('id')}, set: function(v){this._setter('id',v)}, enumerable: true, configurable: true},
prefix: {get: function(){return this._getter('prefix')}, set: function(v){this._setter('prefix',v)}, enumerable: true, configurable: true},
suffix: {get: function(){return this._getter('suffix')}, set: function(v){this._setter('suffix',v)}, enumerable: true, configurable: true},
direct: {get: function(){return this._getter('direct')}, set: function(v){this._setter('direct',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
function CatUsersExtra_fieldsRow(owner){CatUsersExtra_fieldsRow.superclass.constructor.call(this, owner)};
CatUsersExtra_fieldsRow._extend($p.TabularSectionRow);
$p.CatUsersExtra_fieldsRow = CatUsersExtra_fieldsRow;
CatUsersExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
CatUsers.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
function CatUsersContact_informationRow(owner){CatUsersContact_informationRow.superclass.constructor.call(this, owner)};
CatUsersContact_informationRow._extend($p.TabularSectionRow);
$p.CatUsersContact_informationRow = CatUsersContact_informationRow;
CatUsersContact_informationRow.prototype.__define({type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
kind: {get: function(){return this._getter('kind')}, set: function(v){this._setter('kind',v)}, enumerable: true, configurable: true},
presentation: {get: function(){return this._getter('presentation')}, set: function(v){this._setter('presentation',v)}, enumerable: true, configurable: true},
values_fields: {get: function(){return this._getter('values_fields')}, set: function(v){this._setter('values_fields',v)}, enumerable: true, configurable: true},
country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
email_address: {get: function(){return this._getter('email_address')}, set: function(v){this._setter('email_address',v)}, enumerable: true, configurable: true},
server_domain_name: {get: function(){return this._getter('server_domain_name')}, set: function(v){this._setter('server_domain_name',v)}, enumerable: true, configurable: true},
phone_number: {get: function(){return this._getter('phone_number')}, set: function(v){this._setter('phone_number',v)}, enumerable: true, configurable: true},
phone_without_codes: {get: function(){return this._getter('phone_without_codes')}, set: function(v){this._setter('phone_without_codes',v)}, enumerable: true, configurable: true},
ВидДляСписка: {get: function(){return this._getter('ВидДляСписка')}, set: function(v){this._setter('ВидДляСписка',v)}, enumerable: true, configurable: true}});
CatUsers.prototype.__define('contact_information', {get: function(){return this._getter_ts('contact_information')}, set: function(v){this._setter_ts('contact_information',v)}, enumerable: true, configurable: true});
function CatUsersAcl_objsRow(owner){CatUsersAcl_objsRow.superclass.constructor.call(this, owner)};
CatUsersAcl_objsRow._extend($p.TabularSectionRow);
$p.CatUsersAcl_objsRow = CatUsersAcl_objsRow;
CatUsersAcl_objsRow.prototype.__define({acl_obj: {get: function(){return this._getter('acl_obj')}, set: function(v){this._setter('acl_obj',v)}, enumerable: true, configurable: true},
type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
by_default: {get: function(){return this._getter('by_default')}, set: function(v){this._setter('by_default',v)}, enumerable: true, configurable: true}});
CatUsers.prototype.__define('acl_objs', {get: function(){return this._getter_ts('acl_objs')}, set: function(v){this._setter_ts('acl_objs',v)}, enumerable: true, configurable: true});
$p.cat.users = new $p.CatManager('cat.users');

/**
* ### Справочник Проекты
* Проекты
* @class CatProjects
* @extends CatObj
* @constructor 
*/
function CatProjects(attr, manager){CatProjects.superclass.constructor.call(this, attr, manager)}
CatProjects._extend($p.CatObj);
$p.CatProjects = CatProjects;
CatProjects.prototype.__define({start: {get: function(){return this._getter('start')}, set: function(v){this._setter('start',v)}, enumerable: true, configurable: true},
finish: {get: function(){return this._getter('finish')}, set: function(v){this._setter('finish',v)}, enumerable: true, configurable: true},
launch: {get: function(){return this._getter('launch')}, set: function(v){this._setter('launch',v)}, enumerable: true, configurable: true},
readiness: {get: function(){return this._getter('readiness')}, set: function(v){this._setter('readiness',v)}, enumerable: true, configurable: true},
finished: {get: function(){return this._getter('finished')}, set: function(v){this._setter('finished',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
function CatProjectsExtra_fieldsRow(owner){CatProjectsExtra_fieldsRow.superclass.constructor.call(this, owner)};
CatProjectsExtra_fieldsRow._extend($p.TabularSectionRow);
$p.CatProjectsExtra_fieldsRow = CatProjectsExtra_fieldsRow;
CatProjectsExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
CatProjects.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
$p.cat.projects = new $p.CatManager('cat.projects');

/**
* ### Справочник Склады
* Сведения о местах хранения товаров (складах), их структуре и физических лицах, назначенных материально ответственными (МОЛ) за тот или иной склад
* @class CatStores
* @extends CatObj
* @constructor 
*/
function CatStores(attr, manager){CatStores.superclass.constructor.call(this, attr, manager)}
CatStores._extend($p.CatObj);
$p.CatStores = CatStores;
CatStores.prototype.__define({note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
function CatStoresExtra_fieldsRow(owner){CatStoresExtra_fieldsRow.superclass.constructor.call(this, owner)};
CatStoresExtra_fieldsRow._extend($p.TabularSectionRow);
$p.CatStoresExtra_fieldsRow = CatStoresExtra_fieldsRow;
CatStoresExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
CatStores.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
$p.cat.stores = new $p.CatManager('cat.stores');

/**
* ### Справочник Смены
* Перечень рабочих смен предприятия
* @class CatWork_shifts
* @extends CatObj
* @constructor 
*/
function CatWork_shifts(attr, manager){CatWork_shifts.superclass.constructor.call(this, attr, manager)}
CatWork_shifts._extend($p.CatObj);
$p.CatWork_shifts = CatWork_shifts;
CatWork_shifts.prototype.__define({predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
function CatWork_shiftsWork_shift_periodesRow(owner){CatWork_shiftsWork_shift_periodesRow.superclass.constructor.call(this, owner)};
CatWork_shiftsWork_shift_periodesRow._extend($p.TabularSectionRow);
$p.CatWork_shiftsWork_shift_periodesRow = CatWork_shiftsWork_shift_periodesRow;
CatWork_shiftsWork_shift_periodesRow.prototype.__define({begin_time: {get: function(){return this._getter('begin_time')}, set: function(v){this._setter('begin_time',v)}, enumerable: true, configurable: true},
end_time: {get: function(){return this._getter('end_time')}, set: function(v){this._setter('end_time',v)}, enumerable: true, configurable: true}});
CatWork_shifts.prototype.__define('work_shift_periodes', {get: function(){return this._getter_ts('work_shift_periodes')}, set: function(v){this._setter_ts('work_shift_periodes',v)}, enumerable: true, configurable: true});
$p.cat.work_shifts = new $p.CatManager('cat.work_shifts');

/**
* ### Справочник СтатьиДвиженияДенежныхСредств
* Перечень статей движения денежных средств (ДДС), используемых в предприятии для проведения анализа поступлений и расходов в разрезе статей движения денежных средств. 
* @class CatCash_flow_articles
* @extends CatObj
* @constructor 
*/
function CatCash_flow_articles(attr, manager){CatCash_flow_articles.superclass.constructor.call(this, attr, manager)}
CatCash_flow_articles._extend($p.CatObj);
$p.CatCash_flow_articles = CatCash_flow_articles;
CatCash_flow_articles.prototype.__define({definition: {get: function(){return this._getter('definition')}, set: function(v){this._setter('definition',v)}, enumerable: true, configurable: true},
sorting_field: {get: function(){return this._getter('sorting_field')}, set: function(v){this._setter('sorting_field',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.cash_flow_articles = new $p.CatManager('cat.cash_flow_articles');

/**
* ### Справочник ТипыЦенНоменклатуры
* Перечень типов отпускных цен предприятия
* @class CatNom_prices_types
* @extends CatObj
* @constructor 
*/
function CatNom_prices_types(attr, manager){CatNom_prices_types.superclass.constructor.call(this, attr, manager)}
CatNom_prices_types._extend($p.CatObj);
$p.CatNom_prices_types = CatNom_prices_types;
CatNom_prices_types.prototype.__define({price_currency: {get: function(){return this._getter('price_currency')}, set: function(v){this._setter('price_currency',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
vat_price_included: {get: function(){return this._getter('vat_price_included')}, set: function(v){this._setter('vat_price_included',v)}, enumerable: true, configurable: true},
rounding_order: {get: function(){return this._getter('rounding_order')}, set: function(v){this._setter('rounding_order',v)}, enumerable: true, configurable: true},
rounding_in_a_big_way: {get: function(){return this._getter('rounding_in_a_big_way')}, set: function(v){this._setter('rounding_in_a_big_way',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.nom_prices_types = new $p.CatManager('cat.nom_prices_types');

/**
* ### Справочник ФизическиеЛица
* Физические лица
* @class CatIndividuals
* @extends CatObj
* @constructor 
*/
function CatIndividuals(attr, manager){CatIndividuals.superclass.constructor.call(this, attr, manager)}
CatIndividuals._extend($p.CatObj);
$p.CatIndividuals = CatIndividuals;
CatIndividuals.prototype.__define({birth_date: {get: function(){return this._getter('birth_date')}, set: function(v){this._setter('birth_date',v)}, enumerable: true, configurable: true},
inn: {get: function(){return this._getter('inn')}, set: function(v){this._setter('inn',v)}, enumerable: true, configurable: true},
imns_code: {get: function(){return this._getter('imns_code')}, set: function(v){this._setter('imns_code',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
pfr_number: {get: function(){return this._getter('pfr_number')}, set: function(v){this._setter('pfr_number',v)}, enumerable: true, configurable: true},
sex: {get: function(){return this._getter('sex')}, set: function(v){this._setter('sex',v)}, enumerable: true, configurable: true},
birth_place: {get: function(){return this._getter('birth_place')}, set: function(v){this._setter('birth_place',v)}, enumerable: true, configurable: true},
ОсновноеИзображение: {get: function(){return this._getter('ОсновноеИзображение')}, set: function(v){this._setter('ОсновноеИзображение',v)}, enumerable: true, configurable: true},
Фамилия: {get: function(){return this._getter('Фамилия')}, set: function(v){this._setter('Фамилия',v)}, enumerable: true, configurable: true},
Имя: {get: function(){return this._getter('Имя')}, set: function(v){this._setter('Имя',v)}, enumerable: true, configurable: true},
Отчество: {get: function(){return this._getter('Отчество')}, set: function(v){this._setter('Отчество',v)}, enumerable: true, configurable: true},
ФамилияРП: {get: function(){return this._getter('ФамилияРП')}, set: function(v){this._setter('ФамилияРП',v)}, enumerable: true, configurable: true},
ИмяРП: {get: function(){return this._getter('ИмяРП')}, set: function(v){this._setter('ИмяРП',v)}, enumerable: true, configurable: true},
ОтчествоРП: {get: function(){return this._getter('ОтчествоРП')}, set: function(v){this._setter('ОтчествоРП',v)}, enumerable: true, configurable: true},
ОснованиеРП: {get: function(){return this._getter('ОснованиеРП')}, set: function(v){this._setter('ОснованиеРП',v)}, enumerable: true, configurable: true},
ДолжностьРП: {get: function(){return this._getter('ДолжностьРП')}, set: function(v){this._setter('ДолжностьРП',v)}, enumerable: true, configurable: true},
Должность: {get: function(){return this._getter('Должность')}, set: function(v){this._setter('Должность',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
function CatIndividualsContact_informationRow(owner){CatIndividualsContact_informationRow.superclass.constructor.call(this, owner)};
CatIndividualsContact_informationRow._extend($p.TabularSectionRow);
$p.CatIndividualsContact_informationRow = CatIndividualsContact_informationRow;
CatIndividualsContact_informationRow.prototype.__define({type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
kind: {get: function(){return this._getter('kind')}, set: function(v){this._setter('kind',v)}, enumerable: true, configurable: true},
presentation: {get: function(){return this._getter('presentation')}, set: function(v){this._setter('presentation',v)}, enumerable: true, configurable: true},
values_fields: {get: function(){return this._getter('values_fields')}, set: function(v){this._setter('values_fields',v)}, enumerable: true, configurable: true},
country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
email_address: {get: function(){return this._getter('email_address')}, set: function(v){this._setter('email_address',v)}, enumerable: true, configurable: true},
server_domain_name: {get: function(){return this._getter('server_domain_name')}, set: function(v){this._setter('server_domain_name',v)}, enumerable: true, configurable: true},
phone_number: {get: function(){return this._getter('phone_number')}, set: function(v){this._setter('phone_number',v)}, enumerable: true, configurable: true},
phone_without_codes: {get: function(){return this._getter('phone_without_codes')}, set: function(v){this._setter('phone_without_codes',v)}, enumerable: true, configurable: true},
ВидДляСписка: {get: function(){return this._getter('ВидДляСписка')}, set: function(v){this._setter('ВидДляСписка',v)}, enumerable: true, configurable: true}});
CatIndividuals.prototype.__define('contact_information', {get: function(){return this._getter_ts('contact_information')}, set: function(v){this._setter_ts('contact_information',v)}, enumerable: true, configurable: true});
$p.cat.individuals = new $p.CatManager('cat.individuals');

/**
* ### Справочник ХарактеристикиНоменклатуры
* Дополнительные характеристики элементов номенклатуры: цвет, размер и т.п.
* @class CatCharacteristics
* @extends CatObj
* @constructor 
*/
function CatCharacteristics(attr, manager){CatCharacteristics.superclass.constructor.call(this, attr, manager)}
CatCharacteristics._extend($p.CatObj);
$p.CatCharacteristics = CatCharacteristics;
CatCharacteristics.prototype.__define({x: {get: function(){return this._getter('x')}, set: function(v){this._setter('x',v)}, enumerable: true, configurable: true},
y: {get: function(){return this._getter('y')}, set: function(v){this._setter('y',v)}, enumerable: true, configurable: true},
z: {get: function(){return this._getter('z')}, set: function(v){this._setter('z',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
weight: {get: function(){return this._getter('weight')}, set: function(v){this._setter('weight',v)}, enumerable: true, configurable: true},
calc_order: {get: function(){return this._getter('calc_order')}, set: function(v){this._setter('calc_order',v)}, enumerable: true, configurable: true},
product: {get: function(){return this._getter('product')}, set: function(v){this._setter('product',v)}, enumerable: true, configurable: true},
leading_product: {get: function(){return this._getter('leading_product')}, set: function(v){this._setter('leading_product',v)}, enumerable: true, configurable: true},
leading_elm: {get: function(){return this._getter('leading_elm')}, set: function(v){this._setter('leading_elm',v)}, enumerable: true, configurable: true},
origin: {get: function(){return this._getter('origin')}, set: function(v){this._setter('origin',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
sys: {get: function(){return this._getter('sys')}, set: function(v){this._setter('sys',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true}});
function CatCharacteristicsConstructionsRow(owner){CatCharacteristicsConstructionsRow.superclass.constructor.call(this, owner)};
CatCharacteristicsConstructionsRow._extend($p.TabularSectionRow);
$p.CatCharacteristicsConstructionsRow = CatCharacteristicsConstructionsRow;
CatCharacteristicsConstructionsRow.prototype.__define({cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
x: {get: function(){return this._getter('x')}, set: function(v){this._setter('x',v)}, enumerable: true, configurable: true},
y: {get: function(){return this._getter('y')}, set: function(v){this._setter('y',v)}, enumerable: true, configurable: true},
z: {get: function(){return this._getter('z')}, set: function(v){this._setter('z',v)}, enumerable: true, configurable: true},
w: {get: function(){return this._getter('w')}, set: function(v){this._setter('w',v)}, enumerable: true, configurable: true},
h: {get: function(){return this._getter('h')}, set: function(v){this._setter('h',v)}, enumerable: true, configurable: true},
furn: {get: function(){return this._getter('furn')}, set: function(v){this._setter('furn',v)}, enumerable: true, configurable: true},
clr_furn: {get: function(){return this._getter('clr_furn')}, set: function(v){this._setter('clr_furn',v)}, enumerable: true, configurable: true},
direction: {get: function(){return this._getter('direction')}, set: function(v){this._setter('direction',v)}, enumerable: true, configurable: true},
h_ruch: {get: function(){return this._getter('h_ruch')}, set: function(v){this._setter('h_ruch',v)}, enumerable: true, configurable: true},
fix_ruch: {get: function(){return this._getter('fix_ruch')}, set: function(v){this._setter('fix_ruch',v)}, enumerable: true, configurable: true},
is_rectangular: {get: function(){return this._getter('is_rectangular')}, set: function(v){this._setter('is_rectangular',v)}, enumerable: true, configurable: true}});
CatCharacteristics.prototype.__define('constructions', {get: function(){return this._getter_ts('constructions')}, set: function(v){this._setter_ts('constructions',v)}, enumerable: true, configurable: true});
function CatCharacteristicsCoordinatesRow(owner){CatCharacteristicsCoordinatesRow.superclass.constructor.call(this, owner)};
CatCharacteristicsCoordinatesRow._extend($p.TabularSectionRow);
$p.CatCharacteristicsCoordinatesRow = CatCharacteristicsCoordinatesRow;
CatCharacteristicsCoordinatesRow.prototype.__define({cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
path_data: {get: function(){return this._getter('path_data')}, set: function(v){this._setter('path_data',v)}, enumerable: true, configurable: true},
x1: {get: function(){return this._getter('x1')}, set: function(v){this._setter('x1',v)}, enumerable: true, configurable: true},
y1: {get: function(){return this._getter('y1')}, set: function(v){this._setter('y1',v)}, enumerable: true, configurable: true},
x2: {get: function(){return this._getter('x2')}, set: function(v){this._setter('x2',v)}, enumerable: true, configurable: true},
y2: {get: function(){return this._getter('y2')}, set: function(v){this._setter('y2',v)}, enumerable: true, configurable: true},
r: {get: function(){return this._getter('r')}, set: function(v){this._setter('r',v)}, enumerable: true, configurable: true},
arc_ccw: {get: function(){return this._getter('arc_ccw')}, set: function(v){this._setter('arc_ccw',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
angle_hor: {get: function(){return this._getter('angle_hor')}, set: function(v){this._setter('angle_hor',v)}, enumerable: true, configurable: true},
alp1: {get: function(){return this._getter('alp1')}, set: function(v){this._setter('alp1',v)}, enumerable: true, configurable: true},
alp2: {get: function(){return this._getter('alp2')}, set: function(v){this._setter('alp2',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
pos: {get: function(){return this._getter('pos')}, set: function(v){this._setter('pos',v)}, enumerable: true, configurable: true},
orientation: {get: function(){return this._getter('orientation')}, set: function(v){this._setter('orientation',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true}});
CatCharacteristics.prototype.__define('coordinates', {get: function(){return this._getter_ts('coordinates')}, set: function(v){this._setter_ts('coordinates',v)}, enumerable: true, configurable: true});
function CatCharacteristicsInsertsRow(owner){CatCharacteristicsInsertsRow.superclass.constructor.call(this, owner)};
CatCharacteristicsInsertsRow._extend($p.TabularSectionRow);
$p.CatCharacteristicsInsertsRow = CatCharacteristicsInsertsRow;
CatCharacteristicsInsertsRow.prototype.__define({cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true}});
CatCharacteristics.prototype.__define('inserts', {get: function(){return this._getter_ts('inserts')}, set: function(v){this._setter_ts('inserts',v)}, enumerable: true, configurable: true});
function CatCharacteristicsParamsRow(owner){CatCharacteristicsParamsRow.superclass.constructor.call(this, owner)};
CatCharacteristicsParamsRow._extend($p.TabularSectionRow);
$p.CatCharacteristicsParamsRow = CatCharacteristicsParamsRow;
CatCharacteristicsParamsRow.prototype.__define({cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true}});
CatCharacteristics.prototype.__define('params', {get: function(){return this._getter_ts('params')}, set: function(v){this._setter_ts('params',v)}, enumerable: true, configurable: true});
function CatCharacteristicsCnn_elmntsRow(owner){CatCharacteristicsCnn_elmntsRow.superclass.constructor.call(this, owner)};
CatCharacteristicsCnn_elmntsRow._extend($p.TabularSectionRow);
$p.CatCharacteristicsCnn_elmntsRow = CatCharacteristicsCnn_elmntsRow;
CatCharacteristicsCnn_elmntsRow.prototype.__define({elm1: {get: function(){return this._getter('elm1')}, set: function(v){this._setter('elm1',v)}, enumerable: true, configurable: true},
node1: {get: function(){return this._getter('node1')}, set: function(v){this._setter('node1',v)}, enumerable: true, configurable: true},
elm2: {get: function(){return this._getter('elm2')}, set: function(v){this._setter('elm2',v)}, enumerable: true, configurable: true},
node2: {get: function(){return this._getter('node2')}, set: function(v){this._setter('node2',v)}, enumerable: true, configurable: true},
cnn: {get: function(){return this._getter('cnn')}, set: function(v){this._setter('cnn',v)}, enumerable: true, configurable: true},
aperture_len: {get: function(){return this._getter('aperture_len')}, set: function(v){this._setter('aperture_len',v)}, enumerable: true, configurable: true}});
CatCharacteristics.prototype.__define('cnn_elmnts', {get: function(){return this._getter_ts('cnn_elmnts')}, set: function(v){this._setter_ts('cnn_elmnts',v)}, enumerable: true, configurable: true});
function CatCharacteristicsGlass_specificationRow(owner){CatCharacteristicsGlass_specificationRow.superclass.constructor.call(this, owner)};
CatCharacteristicsGlass_specificationRow._extend($p.TabularSectionRow);
$p.CatCharacteristicsGlass_specificationRow = CatCharacteristicsGlass_specificationRow;
CatCharacteristicsGlass_specificationRow.prototype.__define({elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
gno: {get: function(){return this._getter('gno')}, set: function(v){this._setter('gno',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true}});
CatCharacteristics.prototype.__define('glass_specification', {get: function(){return this._getter_ts('glass_specification')}, set: function(v){this._setter_ts('glass_specification',v)}, enumerable: true, configurable: true});
function CatCharacteristicsExtra_fieldsRow(owner){CatCharacteristicsExtra_fieldsRow.superclass.constructor.call(this, owner)};
CatCharacteristicsExtra_fieldsRow._extend($p.TabularSectionRow);
$p.CatCharacteristicsExtra_fieldsRow = CatCharacteristicsExtra_fieldsRow;
CatCharacteristicsExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
CatCharacteristics.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
function CatCharacteristicsGlassesRow(owner){CatCharacteristicsGlassesRow.superclass.constructor.call(this, owner)};
CatCharacteristicsGlassesRow._extend($p.TabularSectionRow);
$p.CatCharacteristicsGlassesRow = CatCharacteristicsGlassesRow;
CatCharacteristicsGlassesRow.prototype.__define({elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
height: {get: function(){return this._getter('height')}, set: function(v){this._setter('height',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
is_rectangular: {get: function(){return this._getter('is_rectangular')}, set: function(v){this._setter('is_rectangular',v)}, enumerable: true, configurable: true},
is_sandwich: {get: function(){return this._getter('is_sandwich')}, set: function(v){this._setter('is_sandwich',v)}, enumerable: true, configurable: true},
thickness: {get: function(){return this._getter('thickness')}, set: function(v){this._setter('thickness',v)}, enumerable: true, configurable: true},
coffer: {get: function(){return this._getter('coffer')}, set: function(v){this._setter('coffer',v)}, enumerable: true, configurable: true}});
CatCharacteristics.prototype.__define('glasses', {get: function(){return this._getter_ts('glasses')}, set: function(v){this._setter_ts('glasses',v)}, enumerable: true, configurable: true});
function CatCharacteristicsSpecificationRow(owner){CatCharacteristicsSpecificationRow.superclass.constructor.call(this, owner)};
CatCharacteristicsSpecificationRow._extend($p.TabularSectionRow);
$p.CatCharacteristicsSpecificationRow = CatCharacteristicsSpecificationRow;
CatCharacteristicsSpecificationRow.prototype.__define({elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
qty: {get: function(){return this._getter('qty')}, set: function(v){this._setter('qty',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
alp1: {get: function(){return this._getter('alp1')}, set: function(v){this._setter('alp1',v)}, enumerable: true, configurable: true},
alp2: {get: function(){return this._getter('alp2')}, set: function(v){this._setter('alp2',v)}, enumerable: true, configurable: true},
totqty: {get: function(){return this._getter('totqty')}, set: function(v){this._setter('totqty',v)}, enumerable: true, configurable: true},
totqty1: {get: function(){return this._getter('totqty1')}, set: function(v){this._setter('totqty1',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
amount_marged: {get: function(){return this._getter('amount_marged')}, set: function(v){this._setter('amount_marged',v)}, enumerable: true, configurable: true},
origin: {get: function(){return this._getter('origin')}, set: function(v){this._setter('origin',v)}, enumerable: true, configurable: true},
changed: {get: function(){return this._getter('changed')}, set: function(v){this._setter('changed',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true}});
CatCharacteristics.prototype.__define('specification', {get: function(){return this._getter_ts('specification')}, set: function(v){this._setter_ts('specification',v)}, enumerable: true, configurable: true});
$p.cat.characteristics = new $p.CatManager('cat.characteristics');

/**
* ### Справочник ЦеновыеГруппы
* Ценовые группы
* @class CatPrice_groups
* @extends CatObj
* @constructor 
*/
function CatPrice_groups(attr, manager){CatPrice_groups.superclass.constructor.call(this, attr, manager)}
CatPrice_groups._extend($p.CatObj);
$p.CatPrice_groups = CatPrice_groups;
CatPrice_groups.prototype.__define({definition: {get: function(){return this._getter('definition')}, set: function(v){this._setter('definition',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.price_groups = new $p.CatManager('cat.price_groups');

/**
* ### Справочник ГруппыФинансовогоУчетаНоменклатуры
* Перечень номенклатурных групп для учета затрат и укрупненного планирования продаж, закупок и производства
* @class CatNom_groups
* @extends CatObj
* @constructor 
*/
function CatNom_groups(attr, manager){CatNom_groups.superclass.constructor.call(this, attr, manager)}
CatNom_groups._extend($p.CatObj);
$p.CatNom_groups = CatNom_groups;
CatNom_groups.prototype.__define({vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.nom_groups = new $p.CatManager('cat.nom_groups');

/**
* ### Справочник ПривязкиВставок
* Замена регистра "Корректировка спецификации"
* @class CatInsert_bind
* @extends CatObj
* @constructor 
*/
function CatInsert_bind(attr, manager){CatInsert_bind.superclass.constructor.call(this, attr, manager)}
CatInsert_bind._extend($p.CatObj);
$p.CatInsert_bind = CatInsert_bind;
CatInsert_bind.prototype.__define({key: {get: function(){return this._getter('key')}, set: function(v){this._setter('key',v)}, enumerable: true, configurable: true},
zone: {get: function(){return this._getter('zone')}, set: function(v){this._setter('zone',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
function CatInsert_bindProductionRow(owner){CatInsert_bindProductionRow.superclass.constructor.call(this, owner)};
CatInsert_bindProductionRow._extend($p.TabularSectionRow);
$p.CatInsert_bindProductionRow = CatInsert_bindProductionRow;
CatInsert_bindProductionRow.prototype.__define({nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true}});
CatInsert_bind.prototype.__define('production', {get: function(){return this._getter_ts('production')}, set: function(v){this._setter_ts('production',v)}, enumerable: true, configurable: true});
function CatInsert_bindInsertsRow(owner){CatInsert_bindInsertsRow.superclass.constructor.call(this, owner)};
CatInsert_bindInsertsRow._extend($p.TabularSectionRow);
$p.CatInsert_bindInsertsRow = CatInsert_bindInsertsRow;
CatInsert_bindInsertsRow.prototype.__define({inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true}});
CatInsert_bind.prototype.__define('inserts', {get: function(){return this._getter_ts('inserts')}, set: function(v){this._setter_ts('inserts',v)}, enumerable: true, configurable: true});
$p.cat.insert_bind = new $p.CatManager('cat.insert_bind');

/**
* ### Справочник ПризнакиНестандартов
* Признаки нестандартов
* @class CatNonstandard_attributes
* @extends CatObj
* @constructor 
*/
function CatNonstandard_attributes(attr, manager){CatNonstandard_attributes.superclass.constructor.call(this, attr, manager)}
CatNonstandard_attributes._extend($p.CatObj);
$p.CatNonstandard_attributes = CatNonstandard_attributes;
CatNonstandard_attributes.prototype.__define({crooked: {get: function(){return this._getter('crooked')}, set: function(v){this._setter('crooked',v)}, enumerable: true, configurable: true},
colored: {get: function(){return this._getter('colored')}, set: function(v){this._setter('colored',v)}, enumerable: true, configurable: true},
lay: {get: function(){return this._getter('lay')}, set: function(v){this._setter('lay',v)}, enumerable: true, configurable: true},
made_to_order: {get: function(){return this._getter('made_to_order')}, set: function(v){this._setter('made_to_order',v)}, enumerable: true, configurable: true},
packing: {get: function(){return this._getter('packing')}, set: function(v){this._setter('packing',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.nonstandard_attributes = new $p.CatManager('cat.nonstandard_attributes');

/**
* ### Справочник НаправленияДоставки
* Объединяет районы, территории или подразделения продаж
* @class CatDelivery_directions
* @extends CatObj
* @constructor 
*/
function CatDelivery_directions(attr, manager){CatDelivery_directions.superclass.constructor.call(this, attr, manager)}
CatDelivery_directions._extend($p.CatObj);
$p.CatDelivery_directions = CatDelivery_directions;
CatDelivery_directions.prototype.__define({predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
function CatDelivery_directionsCompositionRow(owner){CatDelivery_directionsCompositionRow.superclass.constructor.call(this, owner)};
CatDelivery_directionsCompositionRow._extend($p.TabularSectionRow);
$p.CatDelivery_directionsCompositionRow = CatDelivery_directionsCompositionRow;
CatDelivery_directionsCompositionRow.prototype.__define({elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true}});
CatDelivery_directions.prototype.__define('composition', {get: function(){return this._getter_ts('composition')}, set: function(v){this._setter_ts('composition',v)}, enumerable: true, configurable: true});
$p.cat.delivery_directions = new $p.CatManager('cat.delivery_directions');

/**
* ### Документ КорректировкаРегистров
* Корректировка регистров
* @class DocRegisters_correction
* @extends DocObj
* @constructor 
*/
function DocRegisters_correction(attr, manager){DocRegisters_correction.superclass.constructor.call(this, attr, manager)}
DocRegisters_correction._extend($p.DocObj);
$p.DocRegisters_correction = DocRegisters_correction;
DocRegisters_correction.prototype.__define({original_doc_type: {get: function(){return this._getter('original_doc_type')}, set: function(v){this._setter('original_doc_type',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true}});
function DocRegisters_correctionRegisters_tableRow(owner){DocRegisters_correctionRegisters_tableRow.superclass.constructor.call(this, owner)};
DocRegisters_correctionRegisters_tableRow._extend($p.TabularSectionRow);
$p.DocRegisters_correctionRegisters_tableRow = DocRegisters_correctionRegisters_tableRow;
DocRegisters_correctionRegisters_tableRow.prototype.__define({Имя: {get: function(){return this._getter('Имя')}, set: function(v){this._setter('Имя',v)}, enumerable: true, configurable: true}});
DocRegisters_correction.prototype.__define('registers_table', {get: function(){return this._getter_ts('registers_table')}, set: function(v){this._setter_ts('registers_table',v)}, enumerable: true, configurable: true});
$p.doc.registers_correction = new $p.DocManager('doc.registers_correction');

/**
* ### Документ ПоступлениеТоваровУслуг
* Документы отражают поступление товаров и услуг
* @class DocPurchase
* @extends DocObj
* @constructor 
*/
function DocPurchase(attr, manager){DocPurchase.superclass.constructor.call(this, attr, manager)}
DocPurchase._extend($p.DocObj);
$p.DocPurchase = DocPurchase;
DocPurchase.prototype.__define({organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
warehouse: {get: function(){return this._getter('warehouse')}, set: function(v){this._setter('warehouse',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
function DocPurchaseGoodsRow(owner){DocPurchaseGoodsRow.superclass.constructor.call(this, owner)};
DocPurchaseGoodsRow._extend($p.TabularSectionRow);
$p.DocPurchaseGoodsRow = DocPurchaseGoodsRow;
DocPurchaseGoodsRow.prototype.__define({nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
unit: {get: function(){return this._getter('unit')}, set: function(v){this._setter('unit',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
vat_amount: {get: function(){return this._getter('vat_amount')}, set: function(v){this._setter('vat_amount',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true}});
DocPurchase.prototype.__define('goods', {get: function(){return this._getter_ts('goods')}, set: function(v){this._setter_ts('goods',v)}, enumerable: true, configurable: true});
function DocPurchaseServicesRow(owner){DocPurchaseServicesRow.superclass.constructor.call(this, owner)};
DocPurchaseServicesRow._extend($p.TabularSectionRow);
$p.DocPurchaseServicesRow = DocPurchaseServicesRow;
DocPurchaseServicesRow.prototype.__define({nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
content: {get: function(){return this._getter('content')}, set: function(v){this._setter('content',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
vat_amount: {get: function(){return this._getter('vat_amount')}, set: function(v){this._setter('vat_amount',v)}, enumerable: true, configurable: true},
nom_group: {get: function(){return this._getter('nom_group')}, set: function(v){this._setter('nom_group',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
cost_item: {get: function(){return this._getter('cost_item')}, set: function(v){this._setter('cost_item',v)}, enumerable: true, configurable: true},
project: {get: function(){return this._getter('project')}, set: function(v){this._setter('project',v)}, enumerable: true, configurable: true},
buyers_order: {get: function(){return this._getter('buyers_order')}, set: function(v){this._setter('buyers_order',v)}, enumerable: true, configurable: true}});
DocPurchase.prototype.__define('services', {get: function(){return this._getter_ts('services')}, set: function(v){this._setter_ts('services',v)}, enumerable: true, configurable: true});
function DocPurchaseExtra_fieldsRow(owner){DocPurchaseExtra_fieldsRow.superclass.constructor.call(this, owner)};
DocPurchaseExtra_fieldsRow._extend($p.TabularSectionRow);
$p.DocPurchaseExtra_fieldsRow = DocPurchaseExtra_fieldsRow;
DocPurchaseExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
DocPurchase.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
$p.doc.purchase = new $p.DocManager('doc.purchase');

/**
* ### Документ НарядРЦ
* Задание рабочему центру
* @class DocWork_centers_task
* @extends DocObj
* @constructor 
*/
function DocWork_centers_task(attr, manager){DocWork_centers_task.superclass.constructor.call(this, attr, manager)}
DocWork_centers_task._extend($p.DocObj);
$p.DocWork_centers_task = DocWork_centers_task;
DocWork_centers_task.prototype.__define({responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
key: {get: function(){return this._getter('key')}, set: function(v){this._setter('key',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
recipient: {get: function(){return this._getter('recipient')}, set: function(v){this._setter('recipient',v)}, enumerable: true, configurable: true},
ДеловаяОбрезь: {get: function(){return this._getter('ДеловаяОбрезь')}, set: function(v){this._setter('ДеловаяОбрезь',v)}, enumerable: true, configurable: true}});
function DocWork_centers_taskPlanningRow(owner){DocWork_centers_taskPlanningRow.superclass.constructor.call(this, owner)};
DocWork_centers_taskPlanningRow._extend($p.TabularSectionRow);
$p.DocWork_centers_taskPlanningRow = DocWork_centers_taskPlanningRow;
DocWork_centers_taskPlanningRow.prototype.__define({obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
performance: {get: function(){return this._getter('performance')}, set: function(v){this._setter('performance',v)}, enumerable: true, configurable: true}});
DocWork_centers_task.prototype.__define('planning', {get: function(){return this._getter_ts('planning')}, set: function(v){this._setter_ts('planning',v)}, enumerable: true, configurable: true});
function DocWork_centers_taskПотребностьRow(owner){DocWork_centers_taskПотребностьRow.superclass.constructor.call(this, owner)};
DocWork_centers_taskПотребностьRow._extend($p.TabularSectionRow);
$p.DocWork_centers_taskПотребностьRow = DocWork_centers_taskПотребностьRow;
DocWork_centers_taskПотребностьRow.prototype.__define({production: {get: function(){return this._getter('production')}, set: function(v){this._setter('production',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
НоменклатураСП: {get: function(){return this._getter('НоменклатураСП')}, set: function(v){this._setter('НоменклатураСП',v)}, enumerable: true, configurable: true},
ХарактеристикаСП: {get: function(){return this._getter('ХарактеристикаСП')}, set: function(v){this._setter('ХарактеристикаСП',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
ОстатокПотребности: {get: function(){return this._getter('ОстатокПотребности')}, set: function(v){this._setter('ОстатокПотребности',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
Закрыть: {get: function(){return this._getter('Закрыть')}, set: function(v){this._setter('Закрыть',v)}, enumerable: true, configurable: true},
ИзОбрези: {get: function(){return this._getter('ИзОбрези')}, set: function(v){this._setter('ИзОбрези',v)}, enumerable: true, configurable: true}});
DocWork_centers_task.prototype.__define('Потребность', {get: function(){return this._getter_ts('Потребность')}, set: function(v){this._setter_ts('Потребность',v)}, enumerable: true, configurable: true});
function DocWork_centers_taskОбрезьRow(owner){DocWork_centers_taskОбрезьRow.superclass.constructor.call(this, owner)};
DocWork_centers_taskОбрезьRow._extend($p.TabularSectionRow);
$p.DocWork_centers_taskОбрезьRow = DocWork_centers_taskОбрезьRow;
DocWork_centers_taskОбрезьRow.prototype.__define({ВидДвижения: {get: function(){return this._getter('ВидДвижения')}, set: function(v){this._setter('ВидДвижения',v)}, enumerable: true, configurable: true},
Хлыст: {get: function(){return this._getter('Хлыст')}, set: function(v){this._setter('Хлыст',v)}, enumerable: true, configurable: true},
НомерПары: {get: function(){return this._getter('НомерПары')}, set: function(v){this._setter('НомерПары',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
КоординатаX: {get: function(){return this._getter('КоординатаX')}, set: function(v){this._setter('КоординатаX',v)}, enumerable: true, configurable: true},
КоординатаY: {get: function(){return this._getter('КоординатаY')}, set: function(v){this._setter('КоординатаY',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
cell: {get: function(){return this._getter('cell')}, set: function(v){this._setter('cell',v)}, enumerable: true, configurable: true}});
DocWork_centers_task.prototype.__define('Обрезь', {get: function(){return this._getter_ts('Обрезь')}, set: function(v){this._setter_ts('Обрезь',v)}, enumerable: true, configurable: true});
function DocWork_centers_taskРаскройRow(owner){DocWork_centers_taskРаскройRow.superclass.constructor.call(this, owner)};
DocWork_centers_taskРаскройRow._extend($p.TabularSectionRow);
$p.DocWork_centers_taskРаскройRow = DocWork_centers_taskРаскройRow;
DocWork_centers_taskРаскройRow.prototype.__define({production: {get: function(){return this._getter('production')}, set: function(v){this._setter('production',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
Хлыст: {get: function(){return this._getter('Хлыст')}, set: function(v){this._setter('Хлыст',v)}, enumerable: true, configurable: true},
НомерПары: {get: function(){return this._getter('НомерПары')}, set: function(v){this._setter('НомерПары',v)}, enumerable: true, configurable: true},
orientation: {get: function(){return this._getter('orientation')}, set: function(v){this._setter('orientation',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
Угол1: {get: function(){return this._getter('Угол1')}, set: function(v){this._setter('Угол1',v)}, enumerable: true, configurable: true},
Угол2: {get: function(){return this._getter('Угол2')}, set: function(v){this._setter('Угол2',v)}, enumerable: true, configurable: true},
cell: {get: function(){return this._getter('cell')}, set: function(v){this._setter('cell',v)}, enumerable: true, configurable: true},
Партия: {get: function(){return this._getter('Партия')}, set: function(v){this._setter('Партия',v)}, enumerable: true, configurable: true},
КоординатаX: {get: function(){return this._getter('КоординатаX')}, set: function(v){this._setter('КоординатаX',v)}, enumerable: true, configurable: true},
КоординатаY: {get: function(){return this._getter('КоординатаY')}, set: function(v){this._setter('КоординатаY',v)}, enumerable: true, configurable: true},
Поворот: {get: function(){return this._getter('Поворот')}, set: function(v){this._setter('Поворот',v)}, enumerable: true, configurable: true},
ЭтоНестандарт: {get: function(){return this._getter('ЭтоНестандарт')}, set: function(v){this._setter('ЭтоНестандарт',v)}, enumerable: true, configurable: true}});
DocWork_centers_task.prototype.__define('Раскрой', {get: function(){return this._getter_ts('Раскрой')}, set: function(v){this._setter_ts('Раскрой',v)}, enumerable: true, configurable: true});
$p.doc.work_centers_task = new $p.DocManager('doc.work_centers_task');

/**
* ### Документ Расчет
* Аналог заказа покупателя типовых конфигураций.
Содержит инструменты для формирования спецификаций и подготовки данных производства и диспетчеризации
* @class DocCalc_order
* @extends DocObj
* @constructor 
*/
function DocCalc_order(attr, manager){DocCalc_order.superclass.constructor.call(this, attr, manager)}
DocCalc_order._extend($p.DocObj);
$p.DocCalc_order = DocCalc_order;
DocCalc_order.prototype.__define({number_internal: {get: function(){return this._getter('number_internal')}, set: function(v){this._setter('number_internal',v)}, enumerable: true, configurable: true},
project: {get: function(){return this._getter('project')}, set: function(v){this._setter('project',v)}, enumerable: true, configurable: true},
organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
client_of_dealer: {get: function(){return this._getter('client_of_dealer')}, set: function(v){this._setter('client_of_dealer',v)}, enumerable: true, configurable: true},
contract: {get: function(){return this._getter('contract')}, set: function(v){this._setter('contract',v)}, enumerable: true, configurable: true},
bank_account: {get: function(){return this._getter('bank_account')}, set: function(v){this._setter('bank_account',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
manager: {get: function(){return this._getter('manager')}, set: function(v){this._setter('manager',v)}, enumerable: true, configurable: true},
leading_manager: {get: function(){return this._getter('leading_manager')}, set: function(v){this._setter('leading_manager',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
warehouse: {get: function(){return this._getter('warehouse')}, set: function(v){this._setter('warehouse',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
amount_operation: {get: function(){return this._getter('amount_operation')}, set: function(v){this._setter('amount_operation',v)}, enumerable: true, configurable: true},
amount_internal: {get: function(){return this._getter('amount_internal')}, set: function(v){this._setter('amount_internal',v)}, enumerable: true, configurable: true},
accessory_characteristic: {get: function(){return this._getter('accessory_characteristic')}, set: function(v){this._setter('accessory_characteristic',v)}, enumerable: true, configurable: true},
sys_profile: {get: function(){return this._getter('sys_profile')}, set: function(v){this._setter('sys_profile',v)}, enumerable: true, configurable: true},
sys_furn: {get: function(){return this._getter('sys_furn')}, set: function(v){this._setter('sys_furn',v)}, enumerable: true, configurable: true},
phone: {get: function(){return this._getter('phone')}, set: function(v){this._setter('phone',v)}, enumerable: true, configurable: true},
delivery_area: {get: function(){return this._getter('delivery_area')}, set: function(v){this._setter('delivery_area',v)}, enumerable: true, configurable: true},
shipping_address: {get: function(){return this._getter('shipping_address')}, set: function(v){this._setter('shipping_address',v)}, enumerable: true, configurable: true},
coordinates: {get: function(){return this._getter('coordinates')}, set: function(v){this._setter('coordinates',v)}, enumerable: true, configurable: true},
address_fields: {get: function(){return this._getter('address_fields')}, set: function(v){this._setter('address_fields',v)}, enumerable: true, configurable: true},
difficult: {get: function(){return this._getter('difficult')}, set: function(v){this._setter('difficult',v)}, enumerable: true, configurable: true},
vat_consider: {get: function(){return this._getter('vat_consider')}, set: function(v){this._setter('vat_consider',v)}, enumerable: true, configurable: true},
vat_included: {get: function(){return this._getter('vat_included')}, set: function(v){this._setter('vat_included',v)}, enumerable: true, configurable: true},
settlements_course: {get: function(){return this._getter('settlements_course')}, set: function(v){this._setter('settlements_course',v)}, enumerable: true, configurable: true},
settlements_multiplicity: {get: function(){return this._getter('settlements_multiplicity')}, set: function(v){this._setter('settlements_multiplicity',v)}, enumerable: true, configurable: true},
extra_charge_external: {get: function(){return this._getter('extra_charge_external')}, set: function(v){this._setter('extra_charge_external',v)}, enumerable: true, configurable: true},
obj_delivery_state: {get: function(){return this._getter('obj_delivery_state')}, set: function(v){this._setter('obj_delivery_state',v)}, enumerable: true, configurable: true},
category: {get: function(){return this._getter('category')}, set: function(v){this._setter('category',v)}, enumerable: true, configurable: true}});
function DocCalc_orderProductionRow(owner){DocCalc_orderProductionRow.superclass.constructor.call(this, owner)};
DocCalc_orderProductionRow._extend($p.TabularSectionRow);
$p.DocCalc_orderProductionRow = DocCalc_orderProductionRow;
DocCalc_orderProductionRow.prototype.__define({nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
unit: {get: function(){return this._getter('unit')}, set: function(v){this._setter('unit',v)}, enumerable: true, configurable: true},
qty: {get: function(){return this._getter('qty')}, set: function(v){this._setter('qty',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
first_cost: {get: function(){return this._getter('first_cost')}, set: function(v){this._setter('first_cost',v)}, enumerable: true, configurable: true},
marginality: {get: function(){return this._getter('marginality')}, set: function(v){this._setter('marginality',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
discount_percent_internal: {get: function(){return this._getter('discount_percent_internal')}, set: function(v){this._setter('discount_percent_internal',v)}, enumerable: true, configurable: true},
discount: {get: function(){return this._getter('discount')}, set: function(v){this._setter('discount',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
margin: {get: function(){return this._getter('margin')}, set: function(v){this._setter('margin',v)}, enumerable: true, configurable: true},
price_internal: {get: function(){return this._getter('price_internal')}, set: function(v){this._setter('price_internal',v)}, enumerable: true, configurable: true},
amount_internal: {get: function(){return this._getter('amount_internal')}, set: function(v){this._setter('amount_internal',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
vat_amount: {get: function(){return this._getter('vat_amount')}, set: function(v){this._setter('vat_amount',v)}, enumerable: true, configurable: true},
ordn: {get: function(){return this._getter('ordn')}, set: function(v){this._setter('ordn',v)}, enumerable: true, configurable: true},
changed: {get: function(){return this._getter('changed')}, set: function(v){this._setter('changed',v)}, enumerable: true, configurable: true}});
DocCalc_order.prototype.__define('production', {get: function(){return this._getter_ts('production')}, set: function(v){this._setter_ts('production',v)}, enumerable: true, configurable: true});
function DocCalc_orderExtra_fieldsRow(owner){DocCalc_orderExtra_fieldsRow.superclass.constructor.call(this, owner)};
DocCalc_orderExtra_fieldsRow._extend($p.TabularSectionRow);
$p.DocCalc_orderExtra_fieldsRow = DocCalc_orderExtra_fieldsRow;
DocCalc_orderExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
DocCalc_order.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
function DocCalc_orderContact_informationRow(owner){DocCalc_orderContact_informationRow.superclass.constructor.call(this, owner)};
DocCalc_orderContact_informationRow._extend($p.TabularSectionRow);
$p.DocCalc_orderContact_informationRow = DocCalc_orderContact_informationRow;
DocCalc_orderContact_informationRow.prototype.__define({type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
kind: {get: function(){return this._getter('kind')}, set: function(v){this._setter('kind',v)}, enumerable: true, configurable: true},
presentation: {get: function(){return this._getter('presentation')}, set: function(v){this._setter('presentation',v)}, enumerable: true, configurable: true},
values_fields: {get: function(){return this._getter('values_fields')}, set: function(v){this._setter('values_fields',v)}, enumerable: true, configurable: true},
country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
email_address: {get: function(){return this._getter('email_address')}, set: function(v){this._setter('email_address',v)}, enumerable: true, configurable: true},
server_domain_name: {get: function(){return this._getter('server_domain_name')}, set: function(v){this._setter('server_domain_name',v)}, enumerable: true, configurable: true},
phone_number: {get: function(){return this._getter('phone_number')}, set: function(v){this._setter('phone_number',v)}, enumerable: true, configurable: true},
phone_without_codes: {get: function(){return this._getter('phone_without_codes')}, set: function(v){this._setter('phone_without_codes',v)}, enumerable: true, configurable: true}});
DocCalc_order.prototype.__define('contact_information', {get: function(){return this._getter_ts('contact_information')}, set: function(v){this._setter_ts('contact_information',v)}, enumerable: true, configurable: true});
function DocCalc_orderPlanningRow(owner){DocCalc_orderPlanningRow.superclass.constructor.call(this, owner)};
DocCalc_orderPlanningRow._extend($p.TabularSectionRow);
$p.DocCalc_orderPlanningRow = DocCalc_orderPlanningRow;
DocCalc_orderPlanningRow.prototype.__define({phase: {get: function(){return this._getter('phase')}, set: function(v){this._setter('phase',v)}, enumerable: true, configurable: true},
date: {get: function(){return this._getter('date')}, set: function(v){this._setter('date',v)}, enumerable: true, configurable: true},
key: {get: function(){return this._getter('key')}, set: function(v){this._setter('key',v)}, enumerable: true, configurable: true},
obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
performance: {get: function(){return this._getter('performance')}, set: function(v){this._setter('performance',v)}, enumerable: true, configurable: true}});
DocCalc_order.prototype.__define('planning', {get: function(){return this._getter_ts('planning')}, set: function(v){this._setter_ts('planning',v)}, enumerable: true, configurable: true});
$p.doc.calc_order = new $p.DocManager('doc.calc_order');

/**
* ### Документ ОплатаОтПокупателяПлатежнойКартой
* Оплата от покупателя платежной картой
* @class DocCredit_card_order
* @extends DocObj
* @constructor 
*/
function DocCredit_card_order(attr, manager){DocCredit_card_order.superclass.constructor.call(this, attr, manager)}
DocCredit_card_order._extend($p.DocObj);
$p.DocCredit_card_order = DocCredit_card_order;
DocCredit_card_order.prototype.__define({organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
function DocCredit_card_orderPayment_detailsRow(owner){DocCredit_card_orderPayment_detailsRow.superclass.constructor.call(this, owner)};
DocCredit_card_orderPayment_detailsRow._extend($p.TabularSectionRow);
$p.DocCredit_card_orderPayment_detailsRow = DocCredit_card_orderPayment_detailsRow;
DocCredit_card_orderPayment_detailsRow.prototype.__define({cash_flow_article: {get: function(){return this._getter('cash_flow_article')}, set: function(v){this._setter('cash_flow_article',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true}});
DocCredit_card_order.prototype.__define('payment_details', {get: function(){return this._getter_ts('payment_details')}, set: function(v){this._setter_ts('payment_details',v)}, enumerable: true, configurable: true});
function DocCredit_card_orderExtra_fieldsRow(owner){DocCredit_card_orderExtra_fieldsRow.superclass.constructor.call(this, owner)};
DocCredit_card_orderExtra_fieldsRow._extend($p.TabularSectionRow);
$p.DocCredit_card_orderExtra_fieldsRow = DocCredit_card_orderExtra_fieldsRow;
DocCredit_card_orderExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
DocCredit_card_order.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
$p.doc.credit_card_order = new $p.DocManager('doc.credit_card_order');

/**
* ### Документ МощностиРЦ
* Мощности рабочих центров
* @class DocWork_centers_performance
* @extends DocObj
* @constructor 
*/
function DocWork_centers_performance(attr, manager){DocWork_centers_performance.superclass.constructor.call(this, attr, manager)}
DocWork_centers_performance._extend($p.DocObj);
$p.DocWork_centers_performance = DocWork_centers_performance;
DocWork_centers_performance.prototype.__define({start_date: {get: function(){return this._getter('start_date')}, set: function(v){this._setter('start_date',v)}, enumerable: true, configurable: true},
expiration_date: {get: function(){return this._getter('expiration_date')}, set: function(v){this._setter('expiration_date',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
function DocWork_centers_performancePlanningRow(owner){DocWork_centers_performancePlanningRow.superclass.constructor.call(this, owner)};
DocWork_centers_performancePlanningRow._extend($p.TabularSectionRow);
$p.DocWork_centers_performancePlanningRow = DocWork_centers_performancePlanningRow;
DocWork_centers_performancePlanningRow.prototype.__define({date: {get: function(){return this._getter('date')}, set: function(v){this._setter('date',v)}, enumerable: true, configurable: true},
key: {get: function(){return this._getter('key')}, set: function(v){this._setter('key',v)}, enumerable: true, configurable: true},
performance: {get: function(){return this._getter('performance')}, set: function(v){this._setter('performance',v)}, enumerable: true, configurable: true}});
DocWork_centers_performance.prototype.__define('planning', {get: function(){return this._getter_ts('planning')}, set: function(v){this._setter_ts('planning',v)}, enumerable: true, configurable: true});
$p.doc.work_centers_performance = new $p.DocManager('doc.work_centers_performance');

/**
* ### Документ ПлатежноеПоручениеВходящее
* Платежное поручение входящее
* @class DocDebit_bank_order
* @extends DocObj
* @constructor 
*/
function DocDebit_bank_order(attr, manager){DocDebit_bank_order.superclass.constructor.call(this, attr, manager)}
DocDebit_bank_order._extend($p.DocObj);
$p.DocDebit_bank_order = DocDebit_bank_order;
DocDebit_bank_order.prototype.__define({organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
function DocDebit_bank_orderPayment_detailsRow(owner){DocDebit_bank_orderPayment_detailsRow.superclass.constructor.call(this, owner)};
DocDebit_bank_orderPayment_detailsRow._extend($p.TabularSectionRow);
$p.DocDebit_bank_orderPayment_detailsRow = DocDebit_bank_orderPayment_detailsRow;
DocDebit_bank_orderPayment_detailsRow.prototype.__define({cash_flow_article: {get: function(){return this._getter('cash_flow_article')}, set: function(v){this._setter('cash_flow_article',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true}});
DocDebit_bank_order.prototype.__define('payment_details', {get: function(){return this._getter_ts('payment_details')}, set: function(v){this._setter_ts('payment_details',v)}, enumerable: true, configurable: true});
function DocDebit_bank_orderExtra_fieldsRow(owner){DocDebit_bank_orderExtra_fieldsRow.superclass.constructor.call(this, owner)};
DocDebit_bank_orderExtra_fieldsRow._extend($p.TabularSectionRow);
$p.DocDebit_bank_orderExtra_fieldsRow = DocDebit_bank_orderExtra_fieldsRow;
DocDebit_bank_orderExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
DocDebit_bank_order.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
$p.doc.debit_bank_order = new $p.DocManager('doc.debit_bank_order');

/**
* ### Документ ПлатежноеПоручениеИсходящее
* Платежное поручение исходящее
* @class DocCredit_bank_order
* @extends DocObj
* @constructor 
*/
function DocCredit_bank_order(attr, manager){DocCredit_bank_order.superclass.constructor.call(this, attr, manager)}
DocCredit_bank_order._extend($p.DocObj);
$p.DocCredit_bank_order = DocCredit_bank_order;
DocCredit_bank_order.prototype.__define({organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
function DocCredit_bank_orderPayment_detailsRow(owner){DocCredit_bank_orderPayment_detailsRow.superclass.constructor.call(this, owner)};
DocCredit_bank_orderPayment_detailsRow._extend($p.TabularSectionRow);
$p.DocCredit_bank_orderPayment_detailsRow = DocCredit_bank_orderPayment_detailsRow;
DocCredit_bank_orderPayment_detailsRow.prototype.__define({cash_flow_article: {get: function(){return this._getter('cash_flow_article')}, set: function(v){this._setter('cash_flow_article',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true}});
DocCredit_bank_order.prototype.__define('payment_details', {get: function(){return this._getter_ts('payment_details')}, set: function(v){this._setter_ts('payment_details',v)}, enumerable: true, configurable: true});
function DocCredit_bank_orderExtra_fieldsRow(owner){DocCredit_bank_orderExtra_fieldsRow.superclass.constructor.call(this, owner)};
DocCredit_bank_orderExtra_fieldsRow._extend($p.TabularSectionRow);
$p.DocCredit_bank_orderExtra_fieldsRow = DocCredit_bank_orderExtra_fieldsRow;
DocCredit_bank_orderExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
DocCredit_bank_order.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
$p.doc.credit_bank_order = new $p.DocManager('doc.credit_bank_order');

/**
* ### Документ ПриходныйКассовыйОрдер
* Приходный кассовый ордер
* @class DocDebit_cash_order
* @extends DocObj
* @constructor 
*/
function DocDebit_cash_order(attr, manager){DocDebit_cash_order.superclass.constructor.call(this, attr, manager)}
DocDebit_cash_order._extend($p.DocObj);
$p.DocDebit_cash_order = DocDebit_cash_order;
DocDebit_cash_order.prototype.__define({organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
cashbox: {get: function(){return this._getter('cashbox')}, set: function(v){this._setter('cashbox',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
function DocDebit_cash_orderPayment_detailsRow(owner){DocDebit_cash_orderPayment_detailsRow.superclass.constructor.call(this, owner)};
DocDebit_cash_orderPayment_detailsRow._extend($p.TabularSectionRow);
$p.DocDebit_cash_orderPayment_detailsRow = DocDebit_cash_orderPayment_detailsRow;
DocDebit_cash_orderPayment_detailsRow.prototype.__define({cash_flow_article: {get: function(){return this._getter('cash_flow_article')}, set: function(v){this._setter('cash_flow_article',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true}});
DocDebit_cash_order.prototype.__define('payment_details', {get: function(){return this._getter_ts('payment_details')}, set: function(v){this._setter_ts('payment_details',v)}, enumerable: true, configurable: true});
function DocDebit_cash_orderExtra_fieldsRow(owner){DocDebit_cash_orderExtra_fieldsRow.superclass.constructor.call(this, owner)};
DocDebit_cash_orderExtra_fieldsRow._extend($p.TabularSectionRow);
$p.DocDebit_cash_orderExtra_fieldsRow = DocDebit_cash_orderExtra_fieldsRow;
DocDebit_cash_orderExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
DocDebit_cash_order.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
$p.doc.debit_cash_order = new $p.DocManager('doc.debit_cash_order');

/**
* ### Документ РасходныйКассовыйОрдер
* Расходный кассовый ордер
* @class DocCredit_cash_order
* @extends DocObj
* @constructor 
*/
function DocCredit_cash_order(attr, manager){DocCredit_cash_order.superclass.constructor.call(this, attr, manager)}
DocCredit_cash_order._extend($p.DocObj);
$p.DocCredit_cash_order = DocCredit_cash_order;
DocCredit_cash_order.prototype.__define({organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
cashbox: {get: function(){return this._getter('cashbox')}, set: function(v){this._setter('cashbox',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
function DocCredit_cash_orderPayment_detailsRow(owner){DocCredit_cash_orderPayment_detailsRow.superclass.constructor.call(this, owner)};
DocCredit_cash_orderPayment_detailsRow._extend($p.TabularSectionRow);
$p.DocCredit_cash_orderPayment_detailsRow = DocCredit_cash_orderPayment_detailsRow;
DocCredit_cash_orderPayment_detailsRow.prototype.__define({cash_flow_article: {get: function(){return this._getter('cash_flow_article')}, set: function(v){this._setter('cash_flow_article',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true}});
DocCredit_cash_order.prototype.__define('payment_details', {get: function(){return this._getter_ts('payment_details')}, set: function(v){this._setter_ts('payment_details',v)}, enumerable: true, configurable: true});
function DocCredit_cash_orderExtra_fieldsRow(owner){DocCredit_cash_orderExtra_fieldsRow.superclass.constructor.call(this, owner)};
DocCredit_cash_orderExtra_fieldsRow._extend($p.TabularSectionRow);
$p.DocCredit_cash_orderExtra_fieldsRow = DocCredit_cash_orderExtra_fieldsRow;
DocCredit_cash_orderExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
DocCredit_cash_order.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
$p.doc.credit_cash_order = new $p.DocManager('doc.credit_cash_order');

/**
* ### Документ РеализацияТоваровУслуг
* Документы отражают факт реализации (отгрузки) товаров
* @class DocSelling
* @extends DocObj
* @constructor 
*/
function DocSelling(attr, manager){DocSelling.superclass.constructor.call(this, attr, manager)}
DocSelling._extend($p.DocObj);
$p.DocSelling = DocSelling;
DocSelling.prototype.__define({organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
warehouse: {get: function(){return this._getter('warehouse')}, set: function(v){this._setter('warehouse',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
function DocSellingGoodsRow(owner){DocSellingGoodsRow.superclass.constructor.call(this, owner)};
DocSellingGoodsRow._extend($p.TabularSectionRow);
$p.DocSellingGoodsRow = DocSellingGoodsRow;
DocSellingGoodsRow.prototype.__define({nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
unit: {get: function(){return this._getter('unit')}, set: function(v){this._setter('unit',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
vat_amount: {get: function(){return this._getter('vat_amount')}, set: function(v){this._setter('vat_amount',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true}});
DocSelling.prototype.__define('goods', {get: function(){return this._getter_ts('goods')}, set: function(v){this._setter_ts('goods',v)}, enumerable: true, configurable: true});
function DocSellingServicesRow(owner){DocSellingServicesRow.superclass.constructor.call(this, owner)};
DocSellingServicesRow._extend($p.TabularSectionRow);
$p.DocSellingServicesRow = DocSellingServicesRow;
DocSellingServicesRow.prototype.__define({nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
content: {get: function(){return this._getter('content')}, set: function(v){this._setter('content',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
vat_amount: {get: function(){return this._getter('vat_amount')}, set: function(v){this._setter('vat_amount',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true}});
DocSelling.prototype.__define('services', {get: function(){return this._getter_ts('services')}, set: function(v){this._setter_ts('services',v)}, enumerable: true, configurable: true});
function DocSellingExtra_fieldsRow(owner){DocSellingExtra_fieldsRow.superclass.constructor.call(this, owner)};
DocSellingExtra_fieldsRow._extend($p.TabularSectionRow);
$p.DocSellingExtra_fieldsRow = DocSellingExtra_fieldsRow;
DocSellingExtra_fieldsRow.prototype.__define({property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
DocSelling.prototype.__define('extra_fields', {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true});
$p.doc.selling = new $p.DocManager('doc.selling');

/**
* ### Документ УстановкаЦенНоменклатуры
* Установка цен номенклатуры
* @class DocNom_prices_setup
* @extends DocObj
* @constructor 
*/
function DocNom_prices_setup(attr, manager){DocNom_prices_setup.superclass.constructor.call(this, attr, manager)}
DocNom_prices_setup._extend($p.DocObj);
$p.DocNom_prices_setup = DocNom_prices_setup;
DocNom_prices_setup.prototype.__define({price_type: {get: function(){return this._getter('price_type')}, set: function(v){this._setter('price_type',v)}, enumerable: true, configurable: true},
currency: {get: function(){return this._getter('currency')}, set: function(v){this._setter('currency',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
function DocNom_prices_setupGoodsRow(owner){DocNom_prices_setupGoodsRow.superclass.constructor.call(this, owner)};
DocNom_prices_setupGoodsRow._extend($p.TabularSectionRow);
$p.DocNom_prices_setupGoodsRow = DocNom_prices_setupGoodsRow;
DocNom_prices_setupGoodsRow.prototype.__define({nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
nom_characteristic: {get: function(){return this._getter('nom_characteristic')}, set: function(v){this._setter('nom_characteristic',v)}, enumerable: true, configurable: true},
price_type: {get: function(){return this._getter('price_type')}, set: function(v){this._setter('price_type',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true}});
DocNom_prices_setup.prototype.__define('goods', {get: function(){return this._getter_ts('goods')}, set: function(v){this._setter_ts('goods',v)}, enumerable: true, configurable: true});
$p.doc.nom_prices_setup = new $p.DocManager('doc.nom_prices_setup');

/**
* ### Документ СобытиеПланирования
* Событие планирования
* @class DocPlanning_event
* @extends DocObj
* @constructor 
*/
function DocPlanning_event(attr, manager){DocPlanning_event.superclass.constructor.call(this, attr, manager)}
DocPlanning_event._extend($p.DocObj);
$p.DocPlanning_event = DocPlanning_event;
DocPlanning_event.prototype.__define({phase: {get: function(){return this._getter('phase')}, set: function(v){this._setter('phase',v)}, enumerable: true, configurable: true},
key: {get: function(){return this._getter('key')}, set: function(v){this._setter('key',v)}, enumerable: true, configurable: true},
recipient: {get: function(){return this._getter('recipient')}, set: function(v){this._setter('recipient',v)}, enumerable: true, configurable: true},
calc_order: {get: function(){return this._getter('calc_order')}, set: function(v){this._setter('calc_order',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
project: {get: function(){return this._getter('project')}, set: function(v){this._setter('project',v)}, enumerable: true, configurable: true},
Основание: {get: function(){return this._getter('Основание')}, set: function(v){this._setter('Основание',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
function DocPlanning_eventExecutorsRow(owner){DocPlanning_eventExecutorsRow.superclass.constructor.call(this, owner)};
DocPlanning_eventExecutorsRow._extend($p.TabularSectionRow);
$p.DocPlanning_eventExecutorsRow = DocPlanning_eventExecutorsRow;
DocPlanning_eventExecutorsRow.prototype.__define({executor: {get: function(){return this._getter('executor')}, set: function(v){this._setter('executor',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true}});
DocPlanning_event.prototype.__define('executors', {get: function(){return this._getter_ts('executors')}, set: function(v){this._setter_ts('executors',v)}, enumerable: true, configurable: true});
function DocPlanning_eventPlanningRow(owner){DocPlanning_eventPlanningRow.superclass.constructor.call(this, owner)};
DocPlanning_eventPlanningRow._extend($p.TabularSectionRow);
$p.DocPlanning_eventPlanningRow = DocPlanning_eventPlanningRow;
DocPlanning_eventPlanningRow.prototype.__define({obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
performance: {get: function(){return this._getter('performance')}, set: function(v){this._setter('performance',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
begin_time: {get: function(){return this._getter('begin_time')}, set: function(v){this._setter('begin_time',v)}, enumerable: true, configurable: true},
end_time: {get: function(){return this._getter('end_time')}, set: function(v){this._setter('end_time',v)}, enumerable: true, configurable: true}});
DocPlanning_event.prototype.__define('planning', {get: function(){return this._getter_ts('planning')}, set: function(v){this._setter_ts('planning',v)}, enumerable: true, configurable: true});
$p.doc.planning_event = new $p.DocManager('doc.planning_event');

/**
* ### Регистр сведений log
* Журнал событий
* @class IregLog
* @extends RegisterRow
* @constructor 
*/
function IregLog(attr, manager){IregLog.superclass.constructor.call(this, attr, manager)}
IregLog._extend($p.RegisterRow);
$p.IregLog = IregLog;
IregLog.prototype.__define({date: {get: function(){return this._getter('date')}, set: function(v){this._setter('date',v)}, enumerable: true, configurable: true},
sequence: {get: function(){return this._getter('sequence')}, set: function(v){this._setter('sequence',v)}, enumerable: true, configurable: true},
class: {get: function(){return this._getter('class')}, set: function(v){this._setter('class',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true}});

/**
* ### Регистр сведений СостоянияЗаказовКлиентов
* Состояния заказов клиентов
* @class IregBuyers_order_states
* @extends RegisterRow
* @constructor 
*/
function IregBuyers_order_states(attr, manager){IregBuyers_order_states.superclass.constructor.call(this, attr, manager)}
IregBuyers_order_states._extend($p.RegisterRow);
$p.IregBuyers_order_states = IregBuyers_order_states;
IregBuyers_order_states.prototype.__define({invoice: {get: function(){return this._getter('invoice')}, set: function(v){this._setter('invoice',v)}, enumerable: true, configurable: true},
state: {get: function(){return this._getter('state')}, set: function(v){this._setter('state',v)}, enumerable: true, configurable: true},
event_date: {get: function(){return this._getter('event_date')}, set: function(v){this._setter('event_date',v)}, enumerable: true, configurable: true},
СуммаОплаты: {get: function(){return this._getter('СуммаОплаты')}, set: function(v){this._setter('СуммаОплаты',v)}, enumerable: true, configurable: true},
ПроцентОплаты: {get: function(){return this._getter('ПроцентОплаты')}, set: function(v){this._setter('ПроцентОплаты',v)}, enumerable: true, configurable: true},
СуммаОтгрузки: {get: function(){return this._getter('СуммаОтгрузки')}, set: function(v){this._setter('СуммаОтгрузки',v)}, enumerable: true, configurable: true},
ПроцентОтгрузки: {get: function(){return this._getter('ПроцентОтгрузки')}, set: function(v){this._setter('ПроцентОтгрузки',v)}, enumerable: true, configurable: true},
СуммаДолга: {get: function(){return this._getter('СуммаДолга')}, set: function(v){this._setter('СуммаДолга',v)}, enumerable: true, configurable: true},
ПроцентДолга: {get: function(){return this._getter('ПроцентДолга')}, set: function(v){this._setter('ПроцентДолга',v)}, enumerable: true, configurable: true},
ЕстьРасхожденияОрдерНакладная: {get: function(){return this._getter('ЕстьРасхожденияОрдерНакладная')}, set: function(v){this._setter('ЕстьРасхожденияОрдерНакладная',v)}, enumerable: true, configurable: true}});
$p.ireg.buyers_order_states = new $p.InfoRegManager('ireg.buyers_order_states');

/**
* ### Регистр сведений КурсыВалют
* Курсы валют
* @class IregCurrency_courses
* @extends RegisterRow
* @constructor 
*/
function IregCurrency_courses(attr, manager){IregCurrency_courses.superclass.constructor.call(this, attr, manager)}
IregCurrency_courses._extend($p.RegisterRow);
$p.IregCurrency_courses = IregCurrency_courses;
IregCurrency_courses.prototype.__define({currency: {get: function(){return this._getter('currency')}, set: function(v){this._setter('currency',v)}, enumerable: true, configurable: true},
period: {get: function(){return this._getter('period')}, set: function(v){this._setter('period',v)}, enumerable: true, configurable: true},
course: {get: function(){return this._getter('course')}, set: function(v){this._setter('course',v)}, enumerable: true, configurable: true},
multiplicity: {get: function(){return this._getter('multiplicity')}, set: function(v){this._setter('multiplicity',v)}, enumerable: true, configurable: true}});
$p.ireg.currency_courses = new $p.InfoRegManager('ireg.currency_courses');

/**
* ### Регистр сведений пзМаржинальныеКоэффициентыИСкидки
* Маржинальные коэффициенты
* @class IregMargin_coefficients
* @extends RegisterRow
* @constructor 
*/
function IregMargin_coefficients(attr, manager){IregMargin_coefficients.superclass.constructor.call(this, attr, manager)}
IregMargin_coefficients._extend($p.RegisterRow);
$p.IregMargin_coefficients = IregMargin_coefficients;
IregMargin_coefficients.prototype.__define({price_group: {get: function(){return this._getter('price_group')}, set: function(v){this._setter('price_group',v)}, enumerable: true, configurable: true},
key: {get: function(){return this._getter('key')}, set: function(v){this._setter('key',v)}, enumerable: true, configurable: true},
condition_formula: {get: function(){return this._getter('condition_formula')}, set: function(v){this._setter('condition_formula',v)}, enumerable: true, configurable: true},
marginality: {get: function(){return this._getter('marginality')}, set: function(v){this._setter('marginality',v)}, enumerable: true, configurable: true},
marginality_min: {get: function(){return this._getter('marginality_min')}, set: function(v){this._setter('marginality_min',v)}, enumerable: true, configurable: true},
marginality_internal: {get: function(){return this._getter('marginality_internal')}, set: function(v){this._setter('marginality_internal',v)}, enumerable: true, configurable: true},
price_type_first_cost: {get: function(){return this._getter('price_type_first_cost')}, set: function(v){this._setter('price_type_first_cost',v)}, enumerable: true, configurable: true},
price_type_sale: {get: function(){return this._getter('price_type_sale')}, set: function(v){this._setter('price_type_sale',v)}, enumerable: true, configurable: true},
price_type_internal: {get: function(){return this._getter('price_type_internal')}, set: function(v){this._setter('price_type_internal',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
sale_formula: {get: function(){return this._getter('sale_formula')}, set: function(v){this._setter('sale_formula',v)}, enumerable: true, configurable: true},
internal_formula: {get: function(){return this._getter('internal_formula')}, set: function(v){this._setter('internal_formula',v)}, enumerable: true, configurable: true},
external_formula: {get: function(){return this._getter('external_formula')}, set: function(v){this._setter('external_formula',v)}, enumerable: true, configurable: true},
extra_charge_external: {get: function(){return this._getter('extra_charge_external')}, set: function(v){this._setter('extra_charge_external',v)}, enumerable: true, configurable: true},
discount_external: {get: function(){return this._getter('discount_external')}, set: function(v){this._setter('discount_external',v)}, enumerable: true, configurable: true},
discount: {get: function(){return this._getter('discount')}, set: function(v){this._setter('discount',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
$p.ireg.margin_coefficients = new $p.InfoRegManager('ireg.margin_coefficients');

/**
* ### Обработка builder_price
* Метаданные карточки цен номенклатуры
* @class DpBuilder_price
* @extends DataProcessorObj
* @constructor 
*/
function DpBuilder_price(attr, manager){DpBuilder_price.superclass.constructor.call(this, attr, manager)}
DpBuilder_price._extend($p.DataProcessorObj);
$p.DpBuilder_price = DpBuilder_price;
DpBuilder_price.prototype.__define({nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true}});
function DpBuilder_priceGoodsRow(owner){DpBuilder_priceGoodsRow.superclass.constructor.call(this, owner)};
DpBuilder_priceGoodsRow._extend($p.TabularSectionRow);
$p.DpBuilder_priceGoodsRow = DpBuilder_priceGoodsRow;
DpBuilder_priceGoodsRow.prototype.__define({price_type: {get: function(){return this._getter('price_type')}, set: function(v){this._setter('price_type',v)}, enumerable: true, configurable: true},
date: {get: function(){return this._getter('date')}, set: function(v){this._setter('date',v)}, enumerable: true, configurable: true},
nom_characteristic: {get: function(){return this._getter('nom_characteristic')}, set: function(v){this._setter('nom_characteristic',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
currency: {get: function(){return this._getter('currency')}, set: function(v){this._setter('currency',v)}, enumerable: true, configurable: true}});
DpBuilder_price.prototype.__define('goods', {get: function(){return this._getter_ts('goods')}, set: function(v){this._setter_ts('goods',v)}, enumerable: true, configurable: true});
$p.dp.builder_price = new $p.DataProcessorsManager('dp.builder_price');

/**
* ### Обработка ЗаказПокупателя
* УПзП: Заказ покупателя
* @class DpBuyers_order
* @extends DataProcessorObj
* @constructor 
*/
function DpBuyers_order(attr, manager){DpBuyers_order.superclass.constructor.call(this, attr, manager)}
DpBuyers_order._extend($p.DataProcessorObj);
$p.DpBuyers_order = DpBuyers_order;
DpBuyers_order.prototype.__define({nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
sys: {get: function(){return this._getter('sys')}, set: function(v){this._setter('sys',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
height: {get: function(){return this._getter('height')}, set: function(v){this._setter('height',v)}, enumerable: true, configurable: true},
depth: {get: function(){return this._getter('depth')}, set: function(v){this._setter('depth',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
first_cost: {get: function(){return this._getter('first_cost')}, set: function(v){this._setter('first_cost',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
discount_percent_internal: {get: function(){return this._getter('discount_percent_internal')}, set: function(v){this._setter('discount_percent_internal',v)}, enumerable: true, configurable: true},
discount: {get: function(){return this._getter('discount')}, set: function(v){this._setter('discount',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
shipping_date: {get: function(){return this._getter('shipping_date')}, set: function(v){this._setter('shipping_date',v)}, enumerable: true, configurable: true},
client_number: {get: function(){return this._getter('client_number')}, set: function(v){this._setter('client_number',v)}, enumerable: true, configurable: true},
inn: {get: function(){return this._getter('inn')}, set: function(v){this._setter('inn',v)}, enumerable: true, configurable: true},
shipping_address: {get: function(){return this._getter('shipping_address')}, set: function(v){this._setter('shipping_address',v)}, enumerable: true, configurable: true},
phone: {get: function(){return this._getter('phone')}, set: function(v){this._setter('phone',v)}, enumerable: true, configurable: true},
price_internal: {get: function(){return this._getter('price_internal')}, set: function(v){this._setter('price_internal',v)}, enumerable: true, configurable: true},
amount_internal: {get: function(){return this._getter('amount_internal')}, set: function(v){this._setter('amount_internal',v)}, enumerable: true, configurable: true},
base_block: {get: function(){return this._getter('base_block')}, set: function(v){this._setter('base_block',v)}, enumerable: true, configurable: true}});
function DpBuyers_orderProduct_paramsRow(owner){DpBuyers_orderProduct_paramsRow.superclass.constructor.call(this, owner)};
DpBuyers_orderProduct_paramsRow._extend($p.TabularSectionRow);
$p.DpBuyers_orderProduct_paramsRow = DpBuyers_orderProduct_paramsRow;
DpBuyers_orderProduct_paramsRow.prototype.__define({elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true}});
DpBuyers_order.prototype.__define('product_params', {get: function(){return this._getter_ts('product_params')}, set: function(v){this._setter_ts('product_params',v)}, enumerable: true, configurable: true});
function DpBuyers_orderProductionRow(owner){DpBuyers_orderProductionRow.superclass.constructor.call(this, owner)};
DpBuyers_orderProductionRow._extend($p.TabularSectionRow);
$p.DpBuyers_orderProductionRow = DpBuyers_orderProductionRow;
DpBuyers_orderProductionRow.prototype.__define({inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
height: {get: function(){return this._getter('height')}, set: function(v){this._setter('height',v)}, enumerable: true, configurable: true},
depth: {get: function(){return this._getter('depth')}, set: function(v){this._setter('depth',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
first_cost: {get: function(){return this._getter('first_cost')}, set: function(v){this._setter('first_cost',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
ordn: {get: function(){return this._getter('ordn')}, set: function(v){this._setter('ordn',v)}, enumerable: true, configurable: true},
qty: {get: function(){return this._getter('qty')}, set: function(v){this._setter('qty',v)}, enumerable: true, configurable: true}});
DpBuyers_order.prototype.__define('production', {get: function(){return this._getter_ts('production')}, set: function(v){this._setter_ts('production',v)}, enumerable: true, configurable: true});
function DpBuyers_orderGlass_specificationRow(owner){DpBuyers_orderGlass_specificationRow.superclass.constructor.call(this, owner)};
DpBuyers_orderGlass_specificationRow._extend($p.TabularSectionRow);
$p.DpBuyers_orderGlass_specificationRow = DpBuyers_orderGlass_specificationRow;
DpBuyers_orderGlass_specificationRow.prototype.__define({elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
sorting: {get: function(){return this._getter('sorting')}, set: function(v){this._setter('sorting',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true}});
DpBuyers_order.prototype.__define('glass_specification', {get: function(){return this._getter_ts('glass_specification')}, set: function(v){this._setter_ts('glass_specification',v)}, enumerable: true, configurable: true});
function DpBuyers_orderSpecificationRow(owner){DpBuyers_orderSpecificationRow.superclass.constructor.call(this, owner)};
DpBuyers_orderSpecificationRow._extend($p.TabularSectionRow);
$p.DpBuyers_orderSpecificationRow = DpBuyers_orderSpecificationRow;
DpBuyers_orderSpecificationRow.prototype.__define({elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
handle_height_base: {get: function(){return this._getter('handle_height_base')}, set: function(v){this._setter('handle_height_base',v)}, enumerable: true, configurable: true},
handle_height_min: {get: function(){return this._getter('handle_height_min')}, set: function(v){this._setter('handle_height_min',v)}, enumerable: true, configurable: true},
handle_height_max: {get: function(){return this._getter('handle_height_max')}, set: function(v){this._setter('handle_height_max',v)}, enumerable: true, configurable: true},
contraction: {get: function(){return this._getter('contraction')}, set: function(v){this._setter('contraction',v)}, enumerable: true, configurable: true},
contraction_option: {get: function(){return this._getter('contraction_option')}, set: function(v){this._setter('contraction_option',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
flap_weight_min: {get: function(){return this._getter('flap_weight_min')}, set: function(v){this._setter('flap_weight_min',v)}, enumerable: true, configurable: true},
flap_weight_max: {get: function(){return this._getter('flap_weight_max')}, set: function(v){this._setter('flap_weight_max',v)}, enumerable: true, configurable: true},
side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
cnn_side: {get: function(){return this._getter('cnn_side')}, set: function(v){this._setter('cnn_side',v)}, enumerable: true, configurable: true},
offset_option: {get: function(){return this._getter('offset_option')}, set: function(v){this._setter('offset_option',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
transfer_option: {get: function(){return this._getter('transfer_option')}, set: function(v){this._setter('transfer_option',v)}, enumerable: true, configurable: true},
is_main_specification_row: {get: function(){return this._getter('is_main_specification_row')}, set: function(v){this._setter('is_main_specification_row',v)}, enumerable: true, configurable: true},
is_set_row: {get: function(){return this._getter('is_set_row')}, set: function(v){this._setter('is_set_row',v)}, enumerable: true, configurable: true},
is_procedure_row: {get: function(){return this._getter('is_procedure_row')}, set: function(v){this._setter('is_procedure_row',v)}, enumerable: true, configurable: true},
is_order_row: {get: function(){return this._getter('is_order_row')}, set: function(v){this._setter('is_order_row',v)}, enumerable: true, configurable: true},
origin: {get: function(){return this._getter('origin')}, set: function(v){this._setter('origin',v)}, enumerable: true, configurable: true}});
DpBuyers_order.prototype.__define('specification', {get: function(){return this._getter_ts('specification')}, set: function(v){this._setter_ts('specification',v)}, enumerable: true, configurable: true});
$p.dp.buyers_order = new $p.DataProcessorsManager('dp.buyers_order');

/**
* ### Обработка builder_lay_impost
* Импосты и раскладки
* @class DpBuilder_lay_impost
* @extends DataProcessorObj
* @constructor 
*/
function DpBuilder_lay_impost(attr, manager){DpBuilder_lay_impost.superclass.constructor.call(this, attr, manager)}
DpBuilder_lay_impost._extend($p.DataProcessorObj);
$p.DpBuilder_lay_impost = DpBuilder_lay_impost;
DpBuilder_lay_impost.prototype.__define({elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
split: {get: function(){return this._getter('split')}, set: function(v){this._setter('split',v)}, enumerable: true, configurable: true},
elm_by_y: {get: function(){return this._getter('elm_by_y')}, set: function(v){this._setter('elm_by_y',v)}, enumerable: true, configurable: true},
step_by_y: {get: function(){return this._getter('step_by_y')}, set: function(v){this._setter('step_by_y',v)}, enumerable: true, configurable: true},
align_by_y: {get: function(){return this._getter('align_by_y')}, set: function(v){this._setter('align_by_y',v)}, enumerable: true, configurable: true},
inset_by_y: {get: function(){return this._getter('inset_by_y')}, set: function(v){this._setter('inset_by_y',v)}, enumerable: true, configurable: true},
elm_by_x: {get: function(){return this._getter('elm_by_x')}, set: function(v){this._setter('elm_by_x',v)}, enumerable: true, configurable: true},
step_by_x: {get: function(){return this._getter('step_by_x')}, set: function(v){this._setter('step_by_x',v)}, enumerable: true, configurable: true},
align_by_x: {get: function(){return this._getter('align_by_x')}, set: function(v){this._setter('align_by_x',v)}, enumerable: true, configurable: true},
inset_by_x: {get: function(){return this._getter('inset_by_x')}, set: function(v){this._setter('inset_by_x',v)}, enumerable: true, configurable: true},
w: {get: function(){return this._getter('w')}, set: function(v){this._setter('w',v)}, enumerable: true, configurable: true},
h: {get: function(){return this._getter('h')}, set: function(v){this._setter('h',v)}, enumerable: true, configurable: true}});
$p.dp.builder_lay_impost = new $p.DataProcessorsManager('dp.builder_lay_impost');

/**
* ### Обработка builder_pen
* Метаданные инструмента pen (рисование профилей) графического построителя
* @class DpBuilder_pen
* @extends DataProcessorObj
* @constructor 
*/
function DpBuilder_pen(attr, manager){DpBuilder_pen.superclass.constructor.call(this, attr, manager)}
DpBuilder_pen._extend($p.DataProcessorObj);
$p.DpBuilder_pen = DpBuilder_pen;
DpBuilder_pen.prototype.__define({elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
bind_generatrix: {get: function(){return this._getter('bind_generatrix')}, set: function(v){this._setter('bind_generatrix',v)}, enumerable: true, configurable: true},
bind_node: {get: function(){return this._getter('bind_node')}, set: function(v){this._setter('bind_node',v)}, enumerable: true, configurable: true}});
$p.dp.builder_pen = new $p.DataProcessorsManager('dp.builder_pen');

/**
* ### Обработка builder_text
* Метаданные инструмента text графического построителя
* @class DpBuilder_text
* @extends DataProcessorObj
* @constructor 
*/
function DpBuilder_text(attr, manager){DpBuilder_text.superclass.constructor.call(this, attr, manager)}
DpBuilder_text._extend($p.DataProcessorObj);
$p.DpBuilder_text = DpBuilder_text;
DpBuilder_text.prototype.__define({text: {get: function(){return this._getter('text')}, set: function(v){this._setter('text',v)}, enumerable: true, configurable: true},
font_family: {get: function(){return this._getter('font_family')}, set: function(v){this._setter('font_family',v)}, enumerable: true, configurable: true},
bold: {get: function(){return this._getter('bold')}, set: function(v){this._setter('bold',v)}, enumerable: true, configurable: true},
font_size: {get: function(){return this._getter('font_size')}, set: function(v){this._setter('font_size',v)}, enumerable: true, configurable: true},
angle: {get: function(){return this._getter('angle')}, set: function(v){this._setter('angle',v)}, enumerable: true, configurable: true},
align: {get: function(){return this._getter('align')}, set: function(v){this._setter('align',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
x: {get: function(){return this._getter('x')}, set: function(v){this._setter('x',v)}, enumerable: true, configurable: true},
y: {get: function(){return this._getter('y')}, set: function(v){this._setter('y',v)}, enumerable: true, configurable: true}});
$p.dp.builder_text = new $p.DataProcessorsManager('dp.builder_text');

/**
* ### Отчет materials_demand
* Потребность в материалах
* @class RepMaterials_demand
* @extends DataProcessorObj
* @constructor 
*/
function RepMaterials_demand(attr, manager){RepMaterials_demand.superclass.constructor.call(this, attr, manager)}
RepMaterials_demand._extend($p.DataProcessorObj);
$p.RepMaterials_demand = RepMaterials_demand;
RepMaterials_demand.prototype.__define({calc_order: {get: function(){return this._getter('calc_order')}, set: function(v){this._setter('calc_order',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
scheme: {get: function(){return this._getter('scheme')}, set: function(v){this._setter('scheme',v)}, enumerable: true, configurable: true}});
function RepMaterials_demandProductionRow(owner){RepMaterials_demandProductionRow.superclass.constructor.call(this, owner)};
RepMaterials_demandProductionRow._extend($p.TabularSectionRow);
$p.RepMaterials_demandProductionRow = RepMaterials_demandProductionRow;
RepMaterials_demandProductionRow.prototype.__define({use: {get: function(){return this._getter('use')}, set: function(v){this._setter('use',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
qty: {get: function(){return this._getter('qty')}, set: function(v){this._setter('qty',v)}, enumerable: true, configurable: true}});
RepMaterials_demand.prototype.__define('production', {get: function(){return this._getter_ts('production')}, set: function(v){this._setter_ts('production',v)}, enumerable: true, configurable: true});
function RepMaterials_demandSpecificationRow(owner){RepMaterials_demandSpecificationRow.superclass.constructor.call(this, owner)};
RepMaterials_demandSpecificationRow._extend($p.TabularSectionRow);
$p.RepMaterials_demandSpecificationRow = RepMaterials_demandSpecificationRow;
RepMaterials_demandSpecificationRow.prototype.__define({calc_order: {get: function(){return this._getter('calc_order')}, set: function(v){this._setter('calc_order',v)}, enumerable: true, configurable: true},
product: {get: function(){return this._getter('product')}, set: function(v){this._setter('product',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
article: {get: function(){return this._getter('article')}, set: function(v){this._setter('article',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
nom_kind: {get: function(){return this._getter('nom_kind')}, set: function(v){this._setter('nom_kind',v)}, enumerable: true, configurable: true},
qty: {get: function(){return this._getter('qty')}, set: function(v){this._setter('qty',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
material: {get: function(){return this._getter('material')}, set: function(v){this._setter('material',v)}, enumerable: true, configurable: true},
grouping: {get: function(){return this._getter('grouping')}, set: function(v){this._setter('grouping',v)}, enumerable: true, configurable: true},
totqty: {get: function(){return this._getter('totqty')}, set: function(v){this._setter('totqty',v)}, enumerable: true, configurable: true},
totqty1: {get: function(){return this._getter('totqty1')}, set: function(v){this._setter('totqty1',v)}, enumerable: true, configurable: true},
alp1: {get: function(){return this._getter('alp1')}, set: function(v){this._setter('alp1',v)}, enumerable: true, configurable: true},
alp2: {get: function(){return this._getter('alp2')}, set: function(v){this._setter('alp2',v)}, enumerable: true, configurable: true},
sz: {get: function(){return this._getter('sz')}, set: function(v){this._setter('sz',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
amount_marged: {get: function(){return this._getter('amount_marged')}, set: function(v){this._setter('amount_marged',v)}, enumerable: true, configurable: true}});
RepMaterials_demand.prototype.__define('specification', {get: function(){return this._getter_ts('specification')}, set: function(v){this._setter_ts('specification',v)}, enumerable: true, configurable: true});
$p.rep.materials_demand = new $p.DataProcessorsManager('rep.materials_demand');
};


$p.md.init({"enm":{"accumulation_record_type":[{"order":0,"name":"debit","synonym":"Приход"},{"order":1,"name":"credit","synonym":"Расход"}],"sort_directions":[{"order":0,"name":"asc","synonym":"По возрастанию"},{"order":1,"name":"desc","synonym":"По убыванию"}],"comparison_types":[{"order":0,"name":"gt","synonym":"Больше"},{"order":1,"name":"gte","synonym":"Больше или равно"},{"order":2,"name":"lt","synonym":"Меньше"},{"order":3,"name":"lte","synonym":"Меньше или равно "},{"order":4,"name":"eq","synonym":"Равно"},{"order":5,"name":"ne","synonym":"Не равно"},{"order":6,"name":"in","synonym":"В списке"},{"order":7,"name":"nin","synonym":"Не в списке"},{"order":8,"name":"lke","synonym":"Подобно "},{"order":9,"name":"nlk","synonym":"Не подобно"}],"inset_attrs_options":[{"order":0,"name":"НеПоперечина","synonym":"Не поперечина"},{"order":1,"name":"ОбаНаправления","synonym":"Оба направления"},{"order":2,"name":"ОтключитьВтороеНаправление","synonym":"Отключить второе направление"},{"order":3,"name":"ОтключитьШагиВторогоНаправления","synonym":"Отключить шаги второго направления"},{"order":4,"name":"ОтключитьПервоеНаправление","synonym":"Отключить первое направление"},{"order":5,"name":"ОтключитьШагиПервогоНаправления","synonym":"Отключить шаги первого направления"}],"impost_mount_options":[{"order":0,"name":"НетКрепленийИмпостовИРам","synonym":"Нет креплений импостов и рам"},{"order":1,"name":"МогутКрепитьсяИмпосты","synonym":"Могут крепиться импосты"},{"order":2,"name":"ДолжныБытьКрепленияИмпостов","synonym":"Должны быть крепления импостов"}],"transfer_operations_options":[{"order":0,"name":"НетПереноса","synonym":"Нет переноса"},{"order":1,"name":"НаПримыкающий","synonym":"На примыкающий"}],"offset_options":[{"order":0,"name":"ОтНачалаСтороны","synonym":"От начала стороны"},{"order":1,"name":"ОтКонцаСтороны","synonym":"От конца стороны"},{"order":2,"name":"ОтРучки","synonym":"От ручки"},{"order":3,"name":"РазмерПоФальцу","synonym":"Размер по фальцу"},{"order":4,"name":"Формула","synonym":"Формула"}],"contraction_options":[{"order":0,"name":"ОтДлиныСтороны","synonym":"От длины стороны"},{"order":1,"name":"ОтВысотыРучки","synonym":"От высоты ручки"},{"order":2,"name":"ОтДлиныСтороныМинусВысотыРучки","synonym":"От длины стороны минус высота ручки"},{"order":3,"name":"ФиксированнаяДлина","synonym":"Фиксированная длина"}],"align_types":[{"order":0,"name":"Геометрически","synonym":"Геометрически"},{"order":1,"name":"ПоЗаполнениям","synonym":"По заполнениям"}],"mutual_contract_settlements":[{"order":0,"name":"ПоДоговоруВЦелом","synonym":"По договору в целом"},{"order":1,"name":"ПоЗаказам","synonym":"По заказам"},{"order":2,"name":"ПоСчетам","synonym":"По счетам"}],"contract_kinds":[{"order":0,"name":"СПоставщиком","synonym":"С поставщиком"},{"order":1,"name":"СПокупателем","synonym":"С покупателем"},{"order":2,"name":"СКомитентом","synonym":"С комитентом"},{"order":3,"name":"СКомиссионером","synonym":"С комиссионером"},{"order":4,"name":"Прочее","synonym":"Прочее"}],"planning_detailing":[{"order":0,"name":"Изделие","synonym":"Изделие"},{"order":1,"name":"Контур","synonym":"Контур"},{"order":2,"name":"РамныйКонтур","synonym":"Рамный контур"},{"order":3,"name":"Элемент","synonym":"Элемент"},{"order":4,"name":"ТипЭлемента","synonym":"Тип элемента"},{"order":5,"name":"РодительскийЭлемент","synonym":"Родительский элемент"}],"obj_delivery_states":[{"order":0,"name":"Черновик","synonym":"Черновик"},{"order":1,"name":"Отправлен","synonym":"Отправлен"},{"order":2,"name":"Подтвержден","synonym":"Подтвержден"},{"order":3,"name":"Отклонен","synonym":"Отклонен"},{"order":4,"name":"Отозван","synonym":"Отозван"},{"order":5,"name":"Архив","synonym":"Перенесён в архив"},{"order":6,"name":"Шаблон","synonym":"Шаблон"}],"caching_type":[{"order":0,"name":"ram","synonym":"ram"},{"order":1,"name":"doc","synonym":"doc"},{"order":2,"name":"doc_remote","synonym":"doc_remote"},{"order":3,"name":"doc_ram","synonym":"doc_ram"},{"order":4,"name":"remote","synonym":"remote"},{"order":5,"name":"user","synonym":"user"},{"order":6,"name":"meta","synonym":"meta"},{"order":7,"name":"e1cib","synonym":"e1cib"},{"order":8,"name":"pgsql","synonym":"pgsql"}],"order_categories":[{"order":0,"name":"РасчетЗаказ","synonym":"Расчет заказ"},{"order":1,"name":"Сервис","synonym":"Сервис"},{"order":2,"name":"Рекламация","synonym":"Рекламация"}],"color_price_group_destinations":[{"order":0,"name":"ДляЦенообразования","synonym":"Для ценообразования"},{"order":1,"name":"ДляХарактеристик","synonym":"Для характеристик"},{"order":2,"name":"ДляГруппировкиВПараметрах","synonym":"Для группировки в параметрах"},{"order":3,"name":"ДляОграниченияДоступности","synonym":"Для ограничения доступности"}],"orientations":[{"order":0,"name":"Горизонтальная","synonym":"Горизонтальная"},{"order":1,"name":"Вертикальная","synonym":"Вертикальная"},{"order":2,"name":"Наклонная","synonym":"Наклонная"}],"text_aligns":[{"order":0,"name":"left","synonym":"Лево"},{"order":1,"name":"right","synonym":"Право"},{"order":2,"name":"center","synonym":"Центр"}],"open_directions":[{"order":0,"name":"Левое","synonym":"Левое"},{"order":1,"name":"Правое","synonym":"Правое"},{"order":2,"name":"Откидное","synonym":"Откидное"}],"cnn_sides":[{"order":0,"name":"Изнутри","synonym":"Изнутри"},{"order":1,"name":"Снаружи","synonym":"Снаружи"},{"order":2,"name":"Любая","synonym":"Любая"}],"positions":[{"order":0,"name":"Любое","synonym":"Любое"},{"order":1,"name":"Верх","synonym":"Верх"},{"order":2,"name":"Низ","synonym":"Низ"},{"order":3,"name":"Лев","synonym":"Лев"},{"order":4,"name":"Прав","synonym":"Прав"},{"order":5,"name":"ЦентрВертикаль","synonym":"Центр вертикаль"},{"order":6,"name":"ЦентрГоризонталь","synonym":"Центр горизонталь"},{"order":7,"name":"Центр","synonym":"Центр"},{"order":8,"name":"ЛевВерх","synonym":"Лев верх"},{"order":9,"name":"ЛевНиз","synonym":"Лев низ"},{"order":10,"name":"ПравВерх","synonym":"Прав верх"},{"order":11,"name":"ПравНиз","synonym":"Прав низ"}],"gender":[{"order":0,"name":"Мужской","synonym":"Мужской"},{"order":1,"name":"Женский","synonym":"Женский"}],"buyers_order_states":[{"order":0,"name":"ОжидаетсяСогласование","synonym":"Ожидается согласование"},{"order":1,"name":"ОжидаетсяАвансДоОбеспечения","synonym":"Ожидается аванс (до обеспечения)"},{"order":2,"name":"ГотовКОбеспечению","synonym":"Готов к обеспечению"},{"order":3,"name":"ОжидаетсяПредоплатаДоОтгрузки","synonym":"Ожидается предоплата (до отгрузки)"},{"order":4,"name":"ОжидаетсяОбеспечение","synonym":"Ожидается обеспечение"},{"order":5,"name":"ГотовКОтгрузке","synonym":"Готов к отгрузке"},{"order":6,"name":"ВПроцессеОтгрузки","synonym":"В процессе отгрузки"},{"order":7,"name":"ОжидаетсяОплатаПослеОтгрузки","synonym":"Ожидается оплата (после отгрузки)"},{"order":8,"name":"ГотовКЗакрытию","synonym":"Готов к закрытию"},{"order":9,"name":"Закрыт","synonym":"Закрыт"}],"count_calculating_ways":[{"order":0,"name":"ПоПериметру","synonym":"По периметру"},{"order":1,"name":"ПоПлощади","synonym":"По площади"},{"order":2,"name":"ДляЭлемента","synonym":"Для элемента"},{"order":3,"name":"ПоШагам","synonym":"По шагам"},{"order":4,"name":"ПоФормуле","synonym":"По формуле"}],"angle_calculating_ways":[{"order":0,"name":"Основной","synonym":"Основной"},{"order":1,"name":"СварнойШов","synonym":"Сварной шов"},{"order":2,"name":"СоединениеПополам","synonym":"Соед./2"},{"order":3,"name":"Соединение","synonym":"Соединение"},{"order":4,"name":"_90","synonym":"90"},{"order":5,"name":"НеСчитать","synonym":"Не считать"}],"specification_installation_methods":[{"order":0,"name":"Всегда","synonym":"Всегда"},{"order":1,"name":"САртикулом1","synonym":"с Арт1"},{"order":2,"name":"САртикулом2","synonym":"с Арт2"}],"vat_rates":[{"order":0,"name":"НДС18","synonym":"18%"},{"order":1,"name":"НДС18_118","synonym":"18% / 118%"},{"order":2,"name":"НДС10","synonym":"10%"},{"order":3,"name":"НДС10_110","synonym":"10% / 110%"},{"order":4,"name":"НДС0","synonym":"0%"},{"order":5,"name":"БезНДС","synonym":"Без НДС"},{"order":6,"name":"НДС20","synonym":"20%"},{"order":7,"name":"НДС20_120","synonym":"20% / 120%"}],"inserts_types":[{"order":0,"name":"Профиль","synonym":"Профиль"},{"order":1,"name":"Заполнение","synonym":"Заполнение"},{"order":2,"name":"Элемент","synonym":"Элемент"},{"order":3,"name":"Изделие","synonym":"Изделие"},{"order":4,"name":"Контур","synonym":"Контур"},{"order":5,"name":"МоскитнаяСетка","synonym":"Москитная сетка"},{"order":6,"name":"Подоконник","synonym":"Подоконник"},{"order":7,"name":"Откос","synonym":"Откос"},{"order":8,"name":"Водоотлив","synonym":"Водоотлив"},{"order":9,"name":"Стеклопакет","synonym":"Стеклопакет"},{"order":10,"name":"ТиповойСтеклопакет","synonym":"Типовой стеклопакет"},{"order":11,"name":"Раскладка","synonym":"Раскладка"},{"order":12,"name":"Набор","synonym":"Набор"},{"order":13,"name":"Монтаж","synonym":"Монтаж"}],"inserts_glass_types":[{"order":0,"name":"Заполнение","synonym":"Заполнение"},{"order":1,"name":"Рамка","synonym":"Рамка"},{"order":2,"name":"Газ","synonym":"Газ"}],"lay_split_types":[{"order":0,"name":"ДелениеГоризонтальных","synonym":"Деление горизонтальных"},{"order":1,"name":"ДелениеВертикальных","synonym":"Деление вертикальных"},{"order":2,"name":"КрестВСтык","synonym":"Крест в стык"},{"order":3,"name":"КрестПересечение","synonym":"Крест пересечение"}],"contact_information_types":[{"order":0,"name":"Адрес","synonym":"Адрес"},{"order":1,"name":"Телефон","synonym":"Телефон"},{"order":2,"name":"АдресЭлектроннойПочты","synonym":"Адрес электронной почты"},{"order":3,"name":"ВебСтраница","synonym":"Веб страница"},{"order":4,"name":"Факс","synonym":"Факс"},{"order":5,"name":"Другое","synonym":"Другое"},{"order":6,"name":"Skype","synonym":"Skype"}],"nom_types":[{"order":0,"name":"Товар","synonym":"Товар, материал"},{"order":1,"name":"Услуга","synonym":"Услуга"},{"order":2,"name":"Работа","synonym":"Работа, техоперация"}],"cutting_optimization_types":[{"order":0,"name":"Нет","synonym":"Нет"},{"order":1,"name":"РасчетНарезки","synonym":"Расчет нарезки"},{"order":2,"name":"НельзяВращатьПереворачивать","synonym":"Нельзя вращать переворачивать"},{"order":3,"name":"ТолькоНомераЯчеек","synonym":"Только номера ячеек"}],"open_types":[{"order":0,"name":"Глухое","synonym":"Глухое"},{"order":1,"name":"Поворотное","synonym":"Поворотное"},{"order":2,"name":"Откидное","synonym":"Откидное"},{"order":3,"name":"ПоворотноОткидное","synonym":"Поворотно-откидное"},{"order":4,"name":"Раздвижное","synonym":"Раздвижное"},{"order":5,"name":"Неподвижное","synonym":"Неподвижное"}],"sz_line_types":[{"order":0,"name":"Обычные","synonym":"Обычные"},{"order":1,"name":"Габаритные","synonym":"Только габаритные"},{"order":2,"name":"ПоСтворкам","synonym":"По створкам"},{"order":3,"name":"ОтКрая","synonym":"От края"},{"order":4,"name":"БезРазмеров","synonym":"Без размеров"}],"cnn_types":[{"order":0,"name":"УгловоеДиагональное","synonym":"Угловое диагональное"},{"order":1,"name":"УгловоеКВертикальной","synonym":"Угловое к вертикальной"},{"order":2,"name":"УгловоеКГоризонтальной","synonym":"Угловое к горизонтальной"},{"order":3,"name":"ТОбразное","synonym":"Т-образное"},{"order":4,"name":"Наложение","synonym":"Наложение"},{"order":5,"name":"НезамкнутыйКонтур","synonym":"Незамкнутый контур"},{"order":6,"name":"КрестВСтык","synonym":"Крест в стык"},{"order":7,"name":"КрестПересечение","synonym":"Крест пересечение"}],"specification_order_row_types":[{"order":0,"name":"Нет","synonym":"Нет"},{"order":1,"name":"Материал","synonym":"Материал"},{"order":2,"name":"Продукция","synonym":"Продукция"}],"elm_types":[{"order":0,"name":"Рама","synonym":"Рама"},{"order":1,"name":"Створка","synonym":"Створка"},{"order":2,"name":"Импост","synonym":"Импост"},{"order":3,"name":"Штульп","synonym":"Штульп"},{"order":4,"name":"Стекло","synonym":"Стекло - стеклопакет"},{"order":5,"name":"Заполнение","synonym":"Заполнение - сэндвич"},{"order":6,"name":"Раскладка","synonym":"Раскладка - фальшпереплет"},{"order":7,"name":"Текст","synonym":"Текст"},{"order":8,"name":"Линия","synonym":"Линия"},{"order":9,"name":"Размер","synonym":"Размер"},{"order":10,"name":"Добор","synonym":"Доборный проф."},{"order":11,"name":"Соединитель","synonym":"Соединит. профиль"},{"order":12,"name":"Водоотлив","synonym":"Водоотлив"},{"order":13,"name":"Москитка","synonym":"Москитн. сетка"},{"order":14,"name":"Фурнитура","synonym":"Фурнитура"},{"order":15,"name":"Макрос","synonym":"Макрос обр центра"},{"order":16,"name":"Подоконник","synonym":"Подоконник"},{"order":17,"name":"ОшибкаКритическая","synonym":"Ошибка критическая"},{"order":18,"name":"ОшибкаИнфо","synonym":"Ошибка инфо"},{"order":19,"name":"Визуализация","synonym":"Визуализация"},{"order":20,"name":"Прочее","synonym":"Прочее"},{"order":21,"name":"Продукция","synonym":"Продукция"},{"order":22,"name":"Доставка","synonym":"Доставка"},{"order":23,"name":"РаботыЦеха","synonym":"Работы цеха"},{"order":24,"name":"РаботыМонтажа","synonym":"Работы монтажа"},{"order":25,"name":"Монтаж","synonym":"Монтаж"},{"order":26,"name":"Уплотнение","synonym":"Уплотнение"},{"order":27,"name":"Арматура","synonym":"Армирование"},{"order":28,"name":"Штапик","synonym":"Штапик"},{"order":29,"name":"Порог","synonym":"Порог"},{"order":30,"name":"Подставочник","synonym":"Подставочн. профиль"}],"planning_phases":[{"order":0,"name":"План","synonym":"План"},{"order":1,"name":"Запуск","synonym":"Запуск"},{"order":2,"name":"Готовность","synonym":"Готовность"}],"individual_legal":[{"order":0,"name":"ЮрЛицо","synonym":"Юрлицо"},{"order":1,"name":"ФизЛицо","synonym":"Физлицо"}]},"cat":{"meta_objs":{"fields":{}},"meta_fields":{"fields":{}},"scheme_settings":{"name":"scheme_settings","synonym":"Настройки отчетов и списков","input_by_string":["name"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"obj":{"synonym":"Объект","tooltip":"Имя класса метаданных","type":{"types":["string"],"str_len":250}},"user":{"synonym":"Пользователь","tooltip":"Если пусто - публичная настройка","type":{"types":["string"],"str_len":50}},"order":{"synonym":"Порядок","tooltip":"Порядок варианта","type":{"types":["number"],"digits":6,"fraction_figits":0}},"query":{"synonym":"Запрос","tooltip":"Индекс CouchDB или текст SQL","type":{"types":["string"],"str_len":0}},"date_from":{"synonym":"Начало периода","tooltip":"","type":{"types":["date"],"date_part":"date"}},"date_till":{"synonym":"Конец периода","tooltip":"","type":{"types":["date"],"date_part":"date"}},"formula":{"synonym":"Формула","tooltip":"Формула инициализации","type":{"types":["cat.formulas"],"is_ref":true}},"tag":{"synonym":"Дополнительные свойства","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"fields":{"name":"fields","synonym":"Доступные поля","tooltip":"Состав, порядок и ширина колонок","fields":{"parent":{"synonym":"Родитель","tooltip":"Для плоского списка, родитель пустой","type":{"types":["string"],"str_len":100}},"use":{"synonym":"Использование","tooltip":"","type":{"types":["boolean"]}},"field":{"synonym":"Поле","tooltip":"","type":{"types":["string"],"str_len":100}},"width":{"synonym":"Ширина","tooltip":"","type":{"types":["string"],"str_len":6}},"caption":{"synonym":"Заголовок","tooltip":"","type":{"types":["string"],"str_len":100}},"tooltip":{"synonym":"Подсказка","tooltip":"","type":{"types":["string"],"str_len":100}},"ctrl_type":{"synonym":"Тип","tooltip":"Тип элемента управления","type":{"types":["string"],"str_len":100}},"formatter":{"synonym":"Формат","tooltip":"Функция форматирования","type":{"types":["cat.formulas"],"is_ref":true}},"editor":{"synonym":"Редактор","tooltip":"Компонент редактирования","type":{"types":["cat.formulas"],"is_ref":true}}}},"sorting":{"name":"sorting","synonym":"Поля сортировки","tooltip":"","fields":{"parent":{"synonym":"Родитель","tooltip":"","type":{"types":["string"],"str_len":100}},"use":{"synonym":"Использование","tooltip":"","type":{"types":["boolean"]}},"field":{"synonym":"Поле","tooltip":"","type":{"types":["string"],"str_len":100}},"direction":{"synonym":"Направление","tooltip":"","type":{"types":["enm.sort_directions"],"is_ref":true}}}},"dimensions":{"name":"dimensions","synonym":"Поля группировки","tooltip":"","fields":{"parent":{"synonym":"Родитель","tooltip":"","type":{"types":["string"],"str_len":100}},"use":{"synonym":"Использование","tooltip":"","type":{"types":["boolean"]}},"field":{"synonym":"Поле","tooltip":"","type":{"types":["string"],"str_len":100}}}},"resources":{"name":"resources","synonym":"Ресурсы","tooltip":"","fields":{"parent":{"synonym":"Родитель","tooltip":"","type":{"types":["string"],"str_len":100}},"use":{"synonym":"Использование","tooltip":"","type":{"types":["boolean"]}},"field":{"synonym":"Поле","tooltip":"","type":{"types":["string"],"str_len":100}},"formula":{"synonym":"Формула","tooltip":"По умолчанию - сумма","type":{"types":["cat.formulas"],"is_ref":true}}}},"selection":{"name":"selection","synonym":"Отбор","tooltip":"","fields":{"parent":{"synonym":"Родитель","tooltip":"","type":{"types":["string"],"str_len":100}},"use":{"synonym":"Использование","tooltip":"","type":{"types":["boolean"]}},"left_value":{"synonym":"Левое значение","tooltip":"","type":{"types":["string"],"str_len":100}},"comparison_type":{"synonym":"Вид сравнения","tooltip":"","type":{"types":["enm.comparison_types"],"is_ref":true}},"right_value":{"synonym":"Правое значение","tooltip":"","type":{"types":["string"],"str_len":100}}}},"params":{"name":"params","synonym":"Параметры","tooltip":"","fields":{"param":{"synonym":"Параметр","tooltip":"","type":{"types":["string"],"str_len":100}},"value_type":{"synonym":"Тип","tooltip":"Тип значения","type":{"types":["string"],"str_len":100}},"value":{"synonym":"Значение","tooltip":"Может иметь примитивный или ссылочный тип или массив","type":{"types":["string","number"],"str_len":0,"digits":15,"fraction_figits":3}}}},"composition":{"name":"composition","synonym":"Структура","tooltip":"","fields":{"parent":{"synonym":"Родитель","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":10}},"use":{"synonym":"Использование","tooltip":"","type":{"types":["boolean"]}},"field":{"synonym":"Элемент","tooltip":"Элемент структуры отчета","type":{"types":["string"],"str_len":50}},"kind":{"synonym":"Вид раздела отчета","tooltip":"список, таблица, группировка строк, группировка колонок","type":{"types":["string"],"str_len":50}},"definition":{"synonym":"Описание","tooltip":"Описание раздела структуры","type":{"types":["string"],"str_len":50}}}}},"cachable":"doc"},"params_links":{"name":"СвязиПараметров","splitted":true,"synonym":"Связи параметров","illustration":"Подчиненные параметры","obj_presentation":"Связь параметров","list_presentation":"Связи параметров","input_by_string":["name"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"master":{"synonym":"Ведущий","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.parameters_keys"],"is_ref":true}},"slave":{"synonym":"Ведомый","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"hide":{"synonym":"Скрыть ведомый","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"zone":{"synonym":"Область","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cat.params_links"],"is_ref":true}}},"tabular_sections":{"values":{"name":"Значения","synonym":"Значения","tooltip":"","fields":{"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["slave"]}],"choice_groups_elm":"elm","choice_type":{"path":["slave"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"by_default":{"synonym":"По умолчанию","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"forcibly":{"synonym":"Принудительно","multiline_mode":false,"tooltip":"Замещать установленное ранее значение при перевыборе ведущего параметра","type":{"types":["boolean"]}}}}},"cachable":"ram"},"partner_bank_accounts":{"name":"БанковскиеСчетаКонтрагентов","splitted":true,"synonym":"Банковские счета","illustration":"Банковские счета сторонних контрагентов и физических лиц.","obj_presentation":"Банковский счет","list_presentation":"Банковские счета","input_by_string":["name","account_number"],"hierarchical":false,"has_owners":true,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"account_number":{"synonym":"Номер счета","multiline_mode":false,"tooltip":"Номер расчетного счета организации","mandatory":true,"type":{"types":["string"],"str_len":20}},"bank":{"synonym":"Банк","multiline_mode":false,"tooltip":"Банк, в котором открыт расчетный счет организации","choice_groups_elm":"elm","type":{"types":["cat.banks_qualifier"],"is_ref":true}},"settlements_bank":{"synonym":"Банк для расчетов","multiline_mode":false,"tooltip":"Банк, в случае непрямых расчетов","choice_groups_elm":"elm","type":{"types":["cat.banks_qualifier"],"is_ref":true}},"correspondent_text":{"synonym":"Текст корреспондента","multiline_mode":false,"tooltip":"Текст \"Плательщик\\Получатель\" в платежных документах","type":{"types":["string"],"str_len":250}},"appointments_text":{"synonym":"Текст назначения","multiline_mode":false,"tooltip":"Текст назначения платежа","type":{"types":["string"],"str_len":250}},"funds_currency":{"synonym":"Валюта","multiline_mode":false,"tooltip":"Валюта учета денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.currencies"],"is_ref":true}},"bank_bic":{"synonym":"БИКБанка","multiline_mode":false,"tooltip":"БИК банка, в котором открыт счет","type":{"types":["string"],"str_len":9}},"bank_name":{"synonym":"Наименование банка","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":100}},"bank_correspondent_account":{"synonym":"Корр. счет банк","multiline_mode":false,"tooltip":"Корр.счет банка","type":{"types":["string"],"str_len":20}},"bank_city":{"synonym":"Город банка","multiline_mode":false,"tooltip":"Город банка","type":{"types":["string"],"str_len":50}},"bank_address":{"synonym":"Адрес банка","multiline_mode":false,"tooltip":"Адрес банка","type":{"types":["string"],"str_len":0}},"bank_phone_numbers":{"synonym":"Телефоны банка","multiline_mode":false,"tooltip":"Телефоны банка","type":{"types":["string"],"str_len":0}},"settlements_bank_bic":{"synonym":"БИК банка для расчетов","multiline_mode":false,"tooltip":"БИК банка, в случае непрямых расчетов","type":{"types":["string"],"str_len":9}},"settlements_bank_correspondent_account":{"synonym":"Корр. счет банка для расчетов","multiline_mode":false,"tooltip":"Корр.счет банка, в случае непрямых расчетов","type":{"types":["string"],"str_len":20}},"settlements_bank_city":{"synonym":"Город банка для расчетов","multiline_mode":false,"tooltip":"Город банка, в случае непрямых расчетов","type":{"types":["string"],"str_len":50}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Контрагент","multiline_mode":false,"tooltip":"Контрагент или физическое лицо, являющиеся владельцем банковского счета","choice_params":[{"name":"is_folder","path":false}],"mandatory":true,"type":{"types":["cat.individuals","cat.partners"],"is_ref":true}}},"tabular_sections":{},"cachable":"doc_ram","form":{"obj":{"head":{" ":["name","owner","account_number","funds_currency","bank_bic","bank","settlements_bank_bic","settlements_bank"]}}}},"organization_bank_accounts":{"name":"БанковскиеСчетаОрганизаций","splitted":true,"synonym":"Банковские счета организаций","illustration":"Банковские счета собственных организаций. ","obj_presentation":"Банковский счет организации","list_presentation":"Банковские счета","input_by_string":["name","account_number"],"hierarchical":false,"has_owners":true,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"bank":{"synonym":"Банк","multiline_mode":false,"tooltip":"Банк, в котором открыт расчетный счет организации","choice_groups_elm":"elm","type":{"types":["cat.banks_qualifier"],"is_ref":true}},"bank_bic":{"synonym":"БИКБанка","multiline_mode":false,"tooltip":"БИК банка, в котором открыт счет","type":{"types":["string"],"str_len":9}},"funds_currency":{"synonym":"Валюта денежных средств","multiline_mode":false,"tooltip":"Валюта учета денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.currencies"],"is_ref":true}},"account_number":{"synonym":"Номер счета","multiline_mode":false,"tooltip":"Номер расчетного счета организации","mandatory":true,"type":{"types":["string"],"str_len":20}},"settlements_bank":{"synonym":"Банк для расчетов","multiline_mode":false,"tooltip":"Банк, в случае непрямых расчетов","choice_groups_elm":"elm","type":{"types":["cat.banks_qualifier"],"is_ref":true}},"settlements_bank_bic":{"synonym":"БИК банка для расчетов","multiline_mode":false,"tooltip":"БИК банка, в случае непрямых расчетов","type":{"types":["string"],"str_len":9}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"Подразделение, отвечающее за банковский счет","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Организация","multiline_mode":false,"tooltip":"Организация, являющиеся владельцем банковского счета","choice_params":[{"name":"is_folder","path":false}],"mandatory":true,"type":{"types":["cat.organizations"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","form":{"obj":{"head":{" ":["name","owner","account_number","funds_currency","bank_bic","bank","settlements_bank_bic","settlements_bank"]}}}},"property_values_hierarchy":{"name":"ЗначенияСвойствОбъектовИерархия","splitted":true,"synonym":"Дополнительные значения (иерархия)","illustration":"","obj_presentation":"Дополнительное значение (иерархия)","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":true,"group_hierarchy":false,"main_presentation_name":true,"code_length":0,"fields":{"heft":{"synonym":"Весовой коэффициент","multiline_mode":false,"tooltip":"Относительный вес дополнительного значения (значимость).","type":{"types":["number"],"digits":10,"fraction_figits":2}},"ПолноеНаименование":{"synonym":"Полное наименование","multiline_mode":true,"tooltip":"Подробное описание значения дополнительного реквизита","type":{"types":["string"],"str_len":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит или сведение.","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"parent":{"synonym":"Входит в группу","multiline_mode":false,"tooltip":"Вышестоящее дополнительное значение свойства.","choice_links":[{"name":["selection","owner"],"path":["owner"]}],"type":{"types":["cat.property_values_hierarchy"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram"},"banks_qualifier":{"name":"КлассификаторБанковРФ","splitted":false,"synonym":"Классификатор банков РФ","illustration":"","obj_presentation":"Банк","list_presentation":"Банки","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"correspondent_account":{"synonym":"Корр. счет","multiline_mode":false,"tooltip":"Корреспондентский счет банка","type":{"types":["string"],"str_len":20}},"city":{"synonym":"Город","multiline_mode":false,"tooltip":"Город банка","type":{"types":["string"],"str_len":50}},"address":{"synonym":"Адрес","multiline_mode":false,"tooltip":"Адрес банка","type":{"types":["string"],"str_len":500}},"phone_numbers":{"synonym":"Телефоны","multiline_mode":false,"tooltip":"Телефоны банка","type":{"types":["string"],"str_len":250}},"activity_ceased":{"synonym":"Деятельность прекращена","multiline_mode":false,"tooltip":"Банк по каким-либо причинам прекратил свою деятельность","type":{"types":["boolean"]}},"swift":{"synonym":"СВИФТ БИК","multiline_mode":false,"tooltip":"Международный банковский идентификационный код (SWIFT BIC)","type":{"types":["string"],"str_len":11}},"inn":{"synonym":"ИНН","multiline_mode":false,"tooltip":"Идентификационный номер налогоплательщика","type":{"types":["string"],"str_len":12}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа банков","multiline_mode":false,"tooltip":"Группа банков, в которую входит данный банк","type":{"types":["cat.banks_qualifier"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram"},"destinations":{"name":"НаборыДополнительныхРеквизитовИСведений","splitted":true,"synonym":"Наборы дополнительных реквизитов и сведений","illustration":"","obj_presentation":"Набор дополнительных реквизитов и сведений","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"КоличествоРеквизитов":{"synonym":"Количество реквизитов","multiline_mode":false,"tooltip":"Количество реквизитов в наборе не помеченных на удаление.","type":{"types":["string"],"str_len":5}},"КоличествоСведений":{"synonym":"Количество сведений","multiline_mode":false,"tooltip":"Количество сведений в наборе не помеченных на удаление.","type":{"types":["string"],"str_len":5}},"Используется":{"synonym":"Используется","multiline_mode":false,"tooltip":"Набор свойств отображается в форме списка","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Входит в группу","multiline_mode":false,"tooltip":"Группа, к которой относится набор.","type":{"types":["cat.destinations"],"is_ref":true}}},"tabular_sections":{"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"","fields":{"property":{"synonym":"Дополнительный реквизит","multiline_mode":false,"tooltip":"Дополнительный реквизит этого набора","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"_deleted":{"synonym":"Пометка удаления","multiline_mode":false,"tooltip":"Устанавливается при исключении дополнительного реквизита из набора,\nчтобы можно было вернуть связь с уникальным дополнительным реквизитом.","type":{"types":["boolean"]}}}},"extra_properties":{"name":"ДополнительныеСведения","synonym":"Дополнительные сведения","tooltip":"","fields":{"property":{"synonym":"Дополнительное сведение","multiline_mode":false,"tooltip":"Дополнительное сведение этого набора","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"_deleted":{"synonym":"Пометка удаления","multiline_mode":false,"tooltip":"Устанавливается при исключении дополнительного сведения из набора,\nчтобы можно было вернуть связь с уникальным дополнительным сведением.","type":{"types":["boolean"]}}}}},"cachable":"ram"},"countries":{"name":"СтраныМира","splitted":true,"synonym":"Страны мира","illustration":"","obj_presentation":"Страна мира","list_presentation":"","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":3,"fields":{"name_full":{"synonym":"Наименование полное","multiline_mode":false,"tooltip":"Полное наименование страны мира","type":{"types":["string"],"str_len":100}},"alpha2":{"synonym":"Код альфа-2","multiline_mode":false,"tooltip":"Двузначный буквенный код альфа-2 страны по ОКСМ","type":{"types":["string"],"str_len":2}},"alpha3":{"synonym":"Код альфа-3","multiline_mode":false,"tooltip":"Трехзначный буквенный код альфа-3 страны по ОКСМ","type":{"types":["string"],"str_len":3}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"ram"},"formulas":{"name":"Формулы","splitted":true,"synonym":"Формулы","illustration":"Формулы пользователя, для выполнения при расчете спецификаций в справочниках Вставки, Соединения, Фурнитура и регистре Корректировки спецификации","obj_presentation":"Формула","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"formula":{"synonym":"Формула","multiline_mode":false,"tooltip":"Текст функции на языке javascript","type":{"types":["string"],"str_len":0}},"leading_formula":{"synonym":"Ведущая формула","multiline_mode":false,"tooltip":"Если указано, выполняется код ведущей формулы с параметрами, заданными для текущей формулы","choice_params":[{"name":"leading_formula","path":"00000000-0000-0000-0000-000000000000"}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"condition_formula":{"synonym":"Это формула условия","multiline_mode":false,"tooltip":"Формула используется, как фильтр, а не как алгоритм расчета количества.\nЕсли возвращает не Истина, строка в спецификацию не добавляется","type":{"types":["boolean"]}},"definition":{"synonym":"Описание","multiline_mode":true,"tooltip":"Описание в формате html","type":{"types":["string"],"str_len":0}},"template":{"synonym":"Шаблон","multiline_mode":true,"tooltip":"html шаблон отчета","type":{"types":["string"],"str_len":0}},"async":{"synonym":"Асинхронный режим","multiline_mode":false,"tooltip":"Создавать асинхронную функцию","type":{"types":["boolean"]}},"zone":{"synonym":"Область","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа","multiline_mode":false,"tooltip":"Группа формул","type":{"types":["cat.formulas"],"is_ref":true}}},"tabular_sections":{"params":{"name":"Параметры","synonym":"Параметры","tooltip":"","fields":{"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["param"],"path":["params","param"]}],"choice_groups_elm":"elm","choice_type":{"path":["params","param"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}}}}},"cachable":"doc"},"elm_visualization":{"name":"пзВизуализацияЭлементов","splitted":true,"synonym":"Визуализация элементов","illustration":"Строки svg для рисования петель, ручек и графических примитивов","obj_presentation":"Визуализация элемента","list_presentation":"Визуализация элементов","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"svg_path":{"synonym":"Путь SVG","multiline_mode":true,"tooltip":"","type":{"types":["string"],"str_len":0}},"note":{"synonym":"Комментарий","multiline_mode":true,"tooltip":"","type":{"types":["string"],"str_len":0}},"attributes":{"synonym":"Атрибуты","multiline_mode":false,"tooltip":"Дополнительные атрибуты svg path","type":{"types":["string"],"str_len":0}},"rotate":{"synonym":"Поворачивать","multiline_mode":false,"tooltip":"правила поворота эскиза параллельно касательной профиля в точке визуализации\n0 - поворачивать\n1 - ручка","type":{"types":["number"],"digits":1,"fraction_figits":0}},"offset":{"synonym":"Смещение","multiline_mode":false,"tooltip":"Смещение в мм относительно внещнего ребра элемента","type":{"types":["number"],"digits":6,"fraction_figits":0}},"side":{"synonym":"Сторона соедин.","multiline_mode":false,"tooltip":"имеет смысл только для импостов","choice_groups_elm":"elm","type":{"types":["enm.cnn_sides"],"is_ref":true}},"elm_side":{"synonym":"Сторона элем.","multiline_mode":false,"tooltip":"(0) - изнутри, (1) - снаружи, (-1) - в середине элемента","type":{"types":["number"],"digits":1,"fraction_figits":0}},"cx":{"synonym":"cx","multiline_mode":false,"tooltip":"Координата точки привязки","type":{"types":["number"],"digits":6,"fraction_figits":0}},"cy":{"synonym":"cy","multiline_mode":false,"tooltip":"Координата точки привязки","type":{"types":["number"],"digits":6,"fraction_figits":0}},"angle_hor":{"synonym":"Угол к горизонту","multiline_mode":false,"tooltip":"Угол к к горизонту элемента по умолчанию","type":{"types":["number"],"digits":6,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"ram"},"currencies":{"name":"Валюты","splitted":true,"synonym":"Валюты","illustration":"Валюты, используемые при расчетах","obj_presentation":"Валюта","list_presentation":"","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":3,"fields":{"name_full":{"synonym":"Наименование валюты","multiline_mode":false,"tooltip":"Полное наименование валюты","mandatory":true,"type":{"types":["string"],"str_len":50}},"extra_charge":{"synonym":"Наценка","multiline_mode":false,"tooltip":"Коэффициент, который применяется к курсу основной валюты для вычисления курса текущей валюты.","type":{"types":["number"],"digits":10,"fraction_figits":2}},"main_currency":{"synonym":"Основная валюта","multiline_mode":false,"tooltip":"Валюта, на основании курса которой рассчитывается курс текущей валюты","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.currencies"],"is_ref":true}},"parameters_russian_recipe":{"synonym":"Параметры прописи на русском","multiline_mode":false,"tooltip":"Параметры прописи валюты на русском языке","type":{"types":["string"],"str_len":200}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"ram","form":{"selection":{"fields":["ref","_deleted","id","name as presentation","name_full"],"cols":[{"id":"id","width":"120","type":"ro","align":"left","sort":"server","caption":"Код"},{"id":"presentation","width":"*","type":"ro","align":"left","sort":"server","caption":"Обозначение"},{"id":"name_full","width":"*","type":"ro","align":"left","sort":"server","caption":"Наименование"}]},"obj":{"head":{" ":["id","name","name_full","parameters_russian_recipe"],"Дополнительно":["main_currency","extra_charge"]},"tabular_sections":{},"tabular_sections_order":[]}}},"contact_information_kinds":{"name":"ВидыКонтактнойИнформации","splitted":true,"synonym":"Виды контактной информации","illustration":"","obj_presentation":"Вид контактной информации","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"Тип контактной информации (адрес, телефон и т.д.)","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.contact_information_types"],"is_ref":true}},"ВидПоляДругое":{"synonym":"Вид поля другое","multiline_mode":false,"tooltip":"Внешний вид поля другое на форме","type":{"types":["string"],"str_len":20}},"Используется":{"synonym":"Используется","multiline_mode":false,"tooltip":"Вид контактной информации используется","type":{"types":["boolean"]}},"mandatory_fields":{"synonym":"Обязательное заполнение","multiline_mode":false,"tooltip":"Вид контактной информации обязателен к заполнению","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа","multiline_mode":false,"tooltip":"Группа вида контактной информации","type":{"types":["cat.contact_information_kinds"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram"},"nom_kinds":{"name":"ВидыНоменклатуры","splitted":true,"synonym":"Виды номенклатуры","illustration":"","obj_presentation":"Вид номенклатуры","list_presentation":"","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"nom_type":{"synonym":"Тип номенклатуры","multiline_mode":false,"tooltip":"Указывается тип, к которому относится номенклатура данного вида.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.nom_types"],"is_ref":true}},"НаборСвойствНоменклатура":{"synonym":"Набор свойств номенклатура","multiline_mode":false,"tooltip":"Набор свойств, которым будет обладать номенклатура с этим видом","choice_groups_elm":"elm","type":{"types":["cat.destinations"],"is_ref":true}},"НаборСвойствХарактеристика":{"synonym":"Набор свойств характеристика","multiline_mode":false,"tooltip":"Набор свойств, которым будет обладать характеристика с этим видом","choice_groups_elm":"elm","type":{"types":["cat.destinations"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа","multiline_mode":false,"tooltip":"","type":{"types":["cat.nom_kinds"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram"},"contracts":{"name":"ДоговорыКонтрагентов","splitted":true,"synonym":"Договоры контрагентов","illustration":"Перечень договоров, заключенных с контрагентами","obj_presentation":"Договор контрагента","list_presentation":"Договоры контрагентов","input_by_string":["name","id"],"hierarchical":true,"has_owners":true,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"settlements_currency":{"synonym":"Валюта взаиморасчетов","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.currencies"],"is_ref":true}},"mutual_settlements":{"synonym":"Ведение взаиморасчетов","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.mutual_contract_settlements"],"is_ref":true}},"contract_kind":{"synonym":"Вид договора","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.contract_kinds"],"is_ref":true}},"date":{"synonym":"Дата","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"check_days_without_pay":{"synonym":"Держать резерв без оплаты ограниченное время","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"allowable_debts_amount":{"synonym":"Допустимая сумма дебиторской задолженности","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"allowable_debts_days":{"synonym":"Допустимое число дней дебиторской задолженности","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":0}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"check_debts_amount":{"synonym":"Контролировать сумму дебиторской задолженности","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"check_debts_days":{"synonym":"Контролировать число дней дебиторской задолженности","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"number_doc":{"synonym":"Номер","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":20}},"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.organizations"],"is_ref":true}},"main_cash_flow_article":{"synonym":"Основная статья движения денежных средств","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.cash_flow_articles"],"is_ref":true}},"main_project":{"synonym":"Основной проект","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.projects"],"is_ref":true}},"accounting_reflect":{"synonym":"Отражать в бухгалтерском учете","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"tax_accounting_reflect":{"synonym":"Отражать в налоговом учете","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"prepayment_percent":{"synonym":"Процент предоплаты","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"validity":{"synonym":"Срок действия договора","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"vat_included":{"synonym":"Сумма включает НДС","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"price_type":{"synonym":"Тип цен","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom_prices_types"],"is_ref":true}},"vat_consider":{"synonym":"Учитывать НДС","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"days_without_pay":{"synonym":"Число дней резерва без оплаты","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Контрагент","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_folder","path":false}],"mandatory":true,"type":{"types":["cat.partners"],"is_ref":true}},"parent":{"synonym":"Группа договоров","multiline_mode":false,"tooltip":"","type":{"types":["cat.contracts"],"is_ref":true}}},"tabular_sections":{},"cachable":"doc_ram","form":{"selection":{"fields":["is_folder","id","_t_.name as presentation","enm_contract_kinds.synonym as contract_kind","enm_mutual_settlements.synonym as mutual_settlements","cat_organizations.name as organization","cat_partners.name as partner"],"cols":[{"id":"partner","width":"180","type":"ro","align":"left","sort":"server","caption":"Контрагент"},{"id":"organization","width":"180","type":"ro","align":"left","sort":"server","caption":"Организация"},{"id":"presentation","width":"*","type":"ro","align":"left","sort":"server","caption":"Наименование"},{"id":"contract_kind","width":"150","type":"ro","align":"left","sort":"server","caption":"Вид договора"},{"id":"mutual_settlements","width":"150","type":"ro","align":"left","sort":"server","caption":"Ведение расчетов"}]},"obj":{"head":{" ":[{"id":"id","path":"o.id","synonym":"Код","type":"ro"},"parent","name","number_doc","date","validity","owner","organization","contract_kind","mutual_settlements","settlements_currency"],"Дополнительно":["accounting_reflect","tax_accounting_reflect","vat_consider","vat_included","price_type","main_project","main_cash_flow_article","check_debts_amount","check_debts_days","check_days_without_pay","prepayment_percent","allowable_debts_amount","allowable_debts_days","note"]}}}},"nom_units":{"name":"ЕдиницыИзмерения","splitted":true,"synonym":"Единицы измерения","illustration":"Перечень единиц измерения номенклатуры и номенклатурных групп","obj_presentation":"Единица измерения","list_presentation":"Единицы измерения","input_by_string":["name","id"],"hierarchical":false,"has_owners":true,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"qualifier_unit":{"synonym":"Единица по классификатору","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.units"],"is_ref":true}},"heft":{"synonym":"Вес","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":3}},"volume":{"synonym":"Объем","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":3}},"coefficient":{"synonym":"Коэффициент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"rounding_threshold":{"synonym":"Порог округления","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":0}},"ПредупреждатьОНецелыхМестах":{"synonym":"При округлении предупреждать о нецелых местах","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["cat.nom_groups","cat.nom"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram"},"property_values":{"name":"ЗначенияСвойствОбъектов","splitted":true,"synonym":"Дополнительные значения","illustration":"","obj_presentation":"Дополнительное значение","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":true,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"heft":{"synonym":"Весовой коэффициент","multiline_mode":false,"tooltip":"Относительный вес дополнительного значения (значимость).","type":{"types":["number"],"digits":10,"fraction_figits":2}},"ПолноеНаименование":{"synonym":"Полное наименование","multiline_mode":true,"tooltip":"Подробное описание значения дополнительного реквизита","type":{"types":["string"],"str_len":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит или сведение.","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"parent":{"synonym":"Входит в группу","multiline_mode":false,"tooltip":"Группа дополнительных значений свойства.","choice_links":[{"name":["selection","owner"],"path":["owner"]}],"type":{"types":["cat.property_values"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram"},"meta_ids":{"name":"ИдентификаторыОбъектовМетаданных","splitted":false,"synonym":"Идентификаторы объектов метаданных","illustration":"Идентификаторы объектов метаданных для использования в базе данных.","obj_presentation":"Идентификатор объекта метаданных","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":false,"group_hierarchy":false,"main_presentation_name":true,"code_length":0,"fields":{"full_moniker":{"synonym":"Полное имя","multiline_mode":false,"tooltip":"Полное имя объекта метаданных","type":{"types":["string"],"str_len":430}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа объектов","multiline_mode":false,"tooltip":"Группа объектов метаданных.","type":{"types":["cat.meta_ids"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram"},"cashboxes":{"name":"Кассы","splitted":true,"synonym":"Кассы","illustration":"Список мест фактического хранения и движения наличных денежных средств предприятия. Кассы разделены по организациям и валютам денежных средств. ","obj_presentation":"Касса","list_presentation":"Кассы предприятия","input_by_string":["name","id"],"hierarchical":false,"has_owners":true,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"funds_currency":{"synonym":"Валюта денежных средств","multiline_mode":false,"tooltip":"Валюта учета денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.currencies"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"Подразделение, отвечающее за кассу.","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"current_account":{"synonym":"Расчетный счет","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["owner"]}],"choice_groups_elm":"elm","type":{"types":["cat.organization_bank_accounts"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_folder","path":false}],"mandatory":true,"type":{"types":["cat.organizations"],"is_ref":true}}},"tabular_sections":{},"cachable":"doc_ram","form":{"obj":{"head":{" ":[{"id":"id","path":"o.id","synonym":"Код","type":"ro"},"name","owner","funds_currency"]}}}},"units":{"name":"КлассификаторЕдиницИзмерения","splitted":true,"synonym":"Классификатор единиц измерения","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":3,"fields":{"name_full":{"synonym":"Полное наименование","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":100}},"international_short":{"synonym":"Международное сокращение","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":3}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"ram"},"partners":{"name":"Контрагенты","splitted":true,"synonym":"Контрагенты","illustration":"Список юридических или физических лиц клиентов (поставщиков, покупателей).","obj_presentation":"Контрагент","list_presentation":"Контрагенты","input_by_string":["name","id","inn"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"name_full":{"synonym":"Полное наименование","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"main_bank_account":{"synonym":"Основной банковский счет","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["ref"]}],"choice_groups_elm":"elm","type":{"types":["cat.partner_bank_accounts"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"kpp":{"synonym":"КПП","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":9}},"okpo":{"synonym":"Код по ОКПО","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":10}},"inn":{"synonym":"ИНН","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":12}},"individual_legal":{"synonym":"Юр. / физ. лицо","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.individual_legal"],"is_ref":true}},"main_contract":{"synonym":"Основной договор контрагента","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["ref"]}],"choice_groups_elm":"elm","type":{"types":["cat.contracts"],"is_ref":true}},"identification_document":{"synonym":"Документ, удостоверяющий личность","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"buyer_main_manager":{"synonym":"Основной менеджер покупателя","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"is_buyer":{"synonym":"Покупатель","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"is_supplier":{"synonym":"Поставщик","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"primary_contact":{"synonym":"Основное контактное лицо","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.individuals"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа контрагентов","multiline_mode":false,"tooltip":"","type":{"types":["cat.partners"],"is_ref":true}}},"tabular_sections":{"contact_information":{"name":"КонтактнаяИнформация","synonym":"Контактная информация","tooltip":"","fields":{"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"Тип контактной информации (телефон, адрес и т.п.)","choice_groups_elm":"elm","type":{"types":["enm.contact_information_types"],"is_ref":true}},"kind":{"synonym":"Вид","multiline_mode":false,"tooltip":"Вид контактной информации","choice_params":[{"name":"parent","path":"139d49b9-5301-45f3-b851-4488420d7d15"}],"choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}},"presentation":{"synonym":"Представление","multiline_mode":false,"tooltip":"Представление контактной информации для отображения в формах","type":{"types":["string"],"str_len":500}},"values_fields":{"synonym":"Значения полей","multiline_mode":false,"tooltip":"Служебное поле, для хранения контактной информации","type":{"types":["string"],"str_len":0},"hide":true},"country":{"synonym":"Страна","multiline_mode":false,"tooltip":"Страна (заполняется для адреса)","type":{"types":["string"],"str_len":100},"hide":true},"region":{"synonym":"Регион","multiline_mode":false,"tooltip":"Регион (заполняется для адреса)","type":{"types":["string"],"str_len":50},"hide":true},"city":{"synonym":"Город","multiline_mode":false,"tooltip":"Город (заполняется для адреса)","type":{"types":["string"],"str_len":50},"hide":true},"email_address":{"synonym":"Адрес ЭП","multiline_mode":false,"tooltip":"Адрес электронной почты","type":{"types":["string"],"str_len":100},"hide":true},"server_domain_name":{"synonym":"Доменное имя сервера","multiline_mode":false,"tooltip":"Доменное имя сервера электронной почты или веб-страницы","type":{"types":["string"],"str_len":100},"hide":true},"phone_number":{"synonym":"Номер телефона","multiline_mode":false,"tooltip":"Полный номер телефона","type":{"types":["string"],"str_len":20},"hide":true},"phone_without_codes":{"synonym":"Номер телефона без кодов","multiline_mode":false,"tooltip":"Номер телефона без кодов и добавочного номера","type":{"types":["string"],"str_len":20},"hide":true}}},"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0},"hide":true}}}},"cachable":"doc_ram","form":{"obj":{"head":{" ":[{"id":"id","path":"o.id","synonym":"Код","type":"ro"},"parent","name","name_full","is_buyer","is_supplier","individual_legal","inn","kpp","okpo","main_bank_account","main_contract","primary_contact","buyer_main_manager"],"Дополнительные реквизиты":[]},"tabular_sections":{"contact_information":{"fields":["kind","presentation"],"headers":"Вид,Представление","widths":"200,*","min_widths":"100,200","aligns":"","sortings":"na,na","types":"ref,txt"}},"tabular_sections_order":["contact_information"]}}},"nom":{"name":"Номенклатура","splitted":true,"synonym":"Номенклатура","illustration":"Перечень товаров, продукции, материалов, полуфабрикатов, тары, услуг","obj_presentation":"Позиция номенклатуры","list_presentation":"","input_by_string":["name","id","article"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":11,"fields":{"article":{"synonym":"Артикул ","multiline_mode":false,"tooltip":"Артикул номенклатуры.","type":{"types":["string"],"str_len":25}},"name_full":{"synonym":"Наименование для печати","multiline_mode":true,"tooltip":"Наименование номенклатуры, которое будет печататься во всех документах.","type":{"types":["string"],"str_len":1024}},"base_unit":{"synonym":"Базовая единица измерения","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.units"],"is_ref":true}},"storage_unit":{"synonym":"Единица хранения остатков","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["ref"]}],"choice_groups_elm":"elm","type":{"types":["cat.nom_units"],"is_ref":true}},"nom_kind":{"synonym":"Вид номенклатуры","multiline_mode":false,"tooltip":"Указывается вид, к которому следует отнести данную позицию номенклатуры.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom_kinds"],"is_ref":true}},"nom_group":{"synonym":"Номенклатурная группа","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom_groups"],"is_ref":true}},"vat_rate":{"synonym":"Ставка НДС","multiline_mode":false,"tooltip":"Определяется ставка НДС товара или услуги","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.vat_rates"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":true,"tooltip":"","type":{"types":["string"],"str_len":0}},"price_group":{"synonym":"Ценовая группа","multiline_mode":false,"tooltip":"Определяет ценовую группу, к которой относится номенклатурная позиция.","choice_groups_elm":"elm","type":{"types":["cat.price_groups"],"is_ref":true}},"elm_type":{"synonym":"Тип элемента: рама, створка и т.п.","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.elm_types"],"is_ref":true}},"len":{"synonym":"Длина","multiline_mode":false,"tooltip":"Длина стандартной загатовки, мм","type":{"types":["number"],"digits":8,"fraction_figits":1}},"width":{"synonym":"Ширина - A","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"thickness":{"synonym":"Толщина - T","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"sizefurn":{"synonym":"Размер фурн. паза - D","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"sizefaltz":{"synonym":"Размер фальца - F","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"density":{"synonym":"Плотность, кг / ед. хранения","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"volume":{"synonym":"Объем, м³ / ед. хранения","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"arc_elongation":{"synonym":"Удлинение арки","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"loss_factor":{"synonym":"Коэффициент потерь","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":4}},"rounding_quantity":{"synonym":"Округлять количество","multiline_mode":false,"tooltip":"При расчете спецификации построителя, как в функции Окр(). 1: до десятых долей,  0: до целых, -1: до десятков","type":{"types":["number"],"digits":1,"fraction_figits":0}},"clr":{"synonym":"Цвет по умолчанию","multiline_mode":false,"tooltip":"Цвет материала по умолчанию. Актуально для заполнений, которые берём НЕ из системы","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"cutting_optimization_type":{"synonym":"Тип оптимизации","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.cutting_optimization_types"],"is_ref":true}},"crooked":{"synonym":"Кривой","multiline_mode":false,"tooltip":"Если эта номенклатура есть в спецификации - изделие кривое","type":{"types":["boolean"]}},"colored":{"synonym":"Цветной","multiline_mode":false,"tooltip":"Если эта номенклатура есть в спецификации - изделие цветное","type":{"types":["boolean"]}},"lay":{"synonym":"Раскладка","multiline_mode":false,"tooltip":"Если эта номенклатура есть в спецификации - изделие имеет раскладку","type":{"types":["boolean"]}},"made_to_order":{"synonym":"Заказной","multiline_mode":false,"tooltip":"Если эта номенклатура есть в спецификации - изделие имеет заказные материалы, на которые должен обратить внимание ОМТС","type":{"types":["boolean"]}},"days_to_execution":{"synonym":"Дней до готовности","multiline_mode":false,"tooltip":"Если номенклатура есть в спецификации, плановая готовность отодвигается на N дней","type":{"types":["number"],"digits":6,"fraction_figits":0}},"days_from_execution":{"synonym":"Дней от готовности","multiline_mode":false,"tooltip":"Обратный отсчет. Когда надо запустить в работу в цехе. Должно иметь значение <= ДнейДоГотовности","type":{"types":["number"],"digits":6,"fraction_figits":0}},"pricing":{"synonym":"","multiline_mode":false,"tooltip":"Дополнительная формула расчета цены на случай, когда не хватает возможностей стандартной подисистемы","choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"visualization":{"synonym":"Визуализация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.elm_visualization"],"is_ref":true}},"complete_list_sorting":{"synonym":"Сортировка в листе комплектации","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":2,"fraction_figits":0}},"is_accessory":{"synonym":"Это аксессуар","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"is_procedure":{"synonym":"Это техоперация","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"is_service":{"synonym":"Это услуга","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"is_pieces":{"synonym":"Штуки","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа","multiline_mode":false,"tooltip":"Группа, в которую входит данная позиция номенклатуры.","type":{"types":["cat.nom"],"is_ref":true}}},"tabular_sections":{"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"Набор реквизитов, состав которого определяется компанией.","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0},"hide":true}}}},"cachable":"ram","form":{"selection":{"fields":[],"cols":[{"id":"id","width":"140","type":"ro","align":"left","sort":"server","caption":"Код"},{"id":"article","width":"150","type":"ro","align":"left","sort":"server","caption":"Артикул"},{"id":"presentation","width":"*","type":"ro","align":"left","sort":"server","caption":"Наименование"},{"id":"nom_unit","width":"70","type":"ro","align":"left","sort":"server","caption":"Ед"},{"id":"thickness","width":"70","type":"ro","align":"left","sort":"server","caption":"Толщина"}]}}},"organizations":{"name":"Организации","splitted":true,"synonym":"Организации","illustration":"","obj_presentation":"Организация","list_presentation":"","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"prefix":{"synonym":"Префикс","multiline_mode":false,"tooltip":"Используется при нумерации документов. В начало каждого номера документов данной организации добавляется символы префикса.","type":{"types":["string"],"str_len":3}},"individual_legal":{"synonym":"Юр. / физ. лицо","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.individual_legal"],"is_ref":true}},"individual_entrepreneur":{"synonym":"Индивидуальный предприниматель","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.individuals"],"is_ref":true}},"inn":{"synonym":"ИНН","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":12}},"kpp":{"synonym":"КПП","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":9}},"main_bank_account":{"synonym":"Основной банковский счет","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["ref"]}],"choice_groups_elm":"elm","type":{"types":["cat.organization_bank_accounts"],"is_ref":true}},"main_cashbox":{"synonym":"Основноая касса","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["ref"]}],"choice_groups_elm":"elm","type":{"types":["cat.cashboxes"],"is_ref":true}},"certificate_series_number":{"synonym":"Серия и номер свидетельства о постановке на учет","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":25}},"certificate_date_issue":{"synonym":"Дата выдачи свидетельства о постановке на учет","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"certificate_authority_name":{"synonym":"Наименование налогового органа, выдавшего свидетельство","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":254}},"certificate_authority_code":{"synonym":"Код налогового органа, выдавшего свидетельство","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":4}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cat.organizations"],"is_ref":true}}},"tabular_sections":{"contact_information":{"name":"КонтактнаяИнформация","synonym":"Контактная информация","tooltip":"Хранение контактной информации (адреса, веб-страницы, номера телефонов и др.)","fields":{"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"Тип контактной информации (телефон, адрес и т.п.)","choice_groups_elm":"elm","type":{"types":["enm.contact_information_types"],"is_ref":true}},"kind":{"synonym":"Вид","multiline_mode":false,"tooltip":"Вид контактной информации","choice_params":[{"name":"parent","path":"c34c4e9d-c7c5-42bb-8def-93ecfe7b1977"}],"choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}},"presentation":{"synonym":"Представление","multiline_mode":false,"tooltip":"Представление контактной информации для отображения в формах","type":{"types":["string"],"str_len":500}},"values_fields":{"synonym":"Значения полей","multiline_mode":false,"tooltip":"Служебное поле, для хранения контактной информации","type":{"types":["string"],"str_len":0},"hide":true},"country":{"synonym":"Страна","multiline_mode":false,"tooltip":"Страна (заполняется для адреса)","type":{"types":["string"],"str_len":100},"hide":true},"region":{"synonym":"Регион","multiline_mode":false,"tooltip":"Регион (заполняется для адреса)","type":{"types":["string"],"str_len":50},"hide":true},"city":{"synonym":"Город","multiline_mode":false,"tooltip":"Город (заполняется для адреса)","type":{"types":["string"],"str_len":50},"hide":true},"email_address":{"synonym":"Адрес ЭП","multiline_mode":false,"tooltip":"Адрес электронной почты","type":{"types":["string"],"str_len":100},"hide":true},"server_domain_name":{"synonym":"Доменное имя сервера","multiline_mode":false,"tooltip":"Доменное имя сервера электронной почты или веб-страницы","type":{"types":["string"],"str_len":100},"hide":true},"phone_number":{"synonym":"Номер телефона","multiline_mode":false,"tooltip":"Полный номер телефона","type":{"types":["string"],"str_len":20},"hide":true},"phone_without_codes":{"synonym":"Номер телефона без кодов","multiline_mode":false,"tooltip":"Номер телефона без кодов и добавочного номера","type":{"types":["string"],"str_len":20},"hide":true},"ВидДляСписка":{"synonym":"Вид для списка","multiline_mode":false,"tooltip":"Вид контактной информации для списка","choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}},"ДействуетС":{"synonym":"Действует С","multiline_mode":false,"tooltip":"Дата актуальности контактная информация","type":{"types":["date"],"date_part":"date"}}}},"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"Набор реквизитов, состав которого определяется компанией.","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0},"hide":true}}}},"cachable":"ram","form":{"obj":{"head":{" ":[{"id":"id","path":"o.id","synonym":"Код","type":"ro"},{"id":"prefix","path":"o.prefix","synonym":"Префикс","type":"ro"},"name","individual_legal","individual_entrepreneur","main_bank_account","main_cashbox"],"Коды":["inn","kpp","certificate_series_number","certificate_date_issue","certificate_authority_name","certificate_authority_code"]},"tabular_sections":{"contact_information":{"fields":["kind","presentation"],"headers":"Вид,Представление","widths":"200,*","min_widths":"100,200","aligns":"","sortings":"na,na","types":"ref,txt"}},"tabular_sections_order":["contact_information"]}}},"inserts":{"name":"Вставки","splitted":true,"synonym":"Вставки","illustration":"Армирование, пленки, вставки - дополнение спецификации, которое зависит от одного элемента","obj_presentation":"Вставка","list_presentation":"Вставки","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"insert_type":{"synonym":"Тип вставки","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":["Профиль","Заполнение","МоскитнаяСетка","Элемент","Контур","Изделие","Подоконник","Откос","Водоотлив"]}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.inserts_types"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"Вставку можно использовать для элементов с этим цветом","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.clrs"],"is_ref":true}},"lmin":{"synonym":"X min","multiline_mode":false,"tooltip":"X min (длина или ширина)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"lmax":{"synonym":"X max","multiline_mode":false,"tooltip":"X max (длина или ширина)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"hmin":{"synonym":"Y min","multiline_mode":false,"tooltip":"Y min (высота)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"hmax":{"synonym":"Y max","multiline_mode":false,"tooltip":"Y max (высота)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"smin":{"synonym":"S min","multiline_mode":false,"tooltip":"Площадь min","type":{"types":["number"],"digits":8,"fraction_figits":3}},"smax":{"synonym":"S max","multiline_mode":false,"tooltip":"Площадь max","type":{"types":["number"],"digits":8,"fraction_figits":3}},"for_direct_profile_only":{"synonym":"Для прямых","multiline_mode":false,"tooltip":"Использовать только для прямых профилей (1), только для кривых (-1) или всегда(0)","type":{"types":["number"],"digits":1,"fraction_figits":0}},"ahmin":{"synonym":"α min","multiline_mode":false,"tooltip":"AH min (угол к горизонтали)","type":{"types":["number"],"digits":3,"fraction_figits":0}},"ahmax":{"synonym":"α max","multiline_mode":false,"tooltip":"AH max (угол к горизонтали)","type":{"types":["number"],"digits":3,"fraction_figits":0}},"priority":{"synonym":"Приоритет","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"mmin":{"synonym":"Масса min","multiline_mode":false,"tooltip":"M min (масса)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"mmax":{"synonym":"Масса max","multiline_mode":false,"tooltip":"M max (масса)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"impost_fixation":{"synonym":"Крепление импостов","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.impost_mount_options"],"is_ref":true}},"shtulp_fixation":{"synonym":"Крепление штульпа","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"can_rotate":{"synonym":"Можно поворачивать","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"sizeb":{"synonym":"Размер \"B\"","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"clr_group":{"synonym":"Доступность цветов","multiline_mode":false,"tooltip":"Если указано, выбор цветов будет ограничен этой группой","choice_params":[{"name":"color_price_group_destination","path":"ДляОграниченияДоступности"}],"choice_groups_elm":"elm","type":{"types":["cat.color_price_groups"],"is_ref":true}},"is_order_row":{"synonym":"Это строка заказа","multiline_mode":false,"tooltip":"Если заполнено, строка будет добавлена в заказ, а не в спецификацию текущей продукции","choice_groups_elm":"elm","type":{"types":["enm.specification_order_row_types"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"insert_glass_type":{"synonym":"Тип вставки стп","multiline_mode":false,"tooltip":"Тип вставки стеклопакета","choice_groups_elm":"elm","type":{"types":["enm.inserts_glass_types"],"is_ref":true}},"available":{"synonym":"Доступна в интерфейсе","multiline_mode":false,"tooltip":"Показывать эту вставку в списках допвставок в элемент, изделие и контур","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"specification":{"name":"Спецификация","synonym":"Спецификация","tooltip":"","fields":{"elm":{"synonym":"№","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.inserts","cat.nom"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"nom_characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["specification","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":8}},"sz":{"synonym":"Размер","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"coefficient":{"synonym":"Коэфф.","multiline_mode":false,"tooltip":"коэффициент (кол-во комплектующего на 1мм профиля или 1м² заполнения)","type":{"types":["number"],"digits":14,"fraction_figits":8}},"angle_calc_method":{"synonym":"Расчет угла","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.angle_calculating_ways"],"is_ref":true}},"count_calc_method":{"synonym":"Расчет колич.","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.count_calculating_ways"],"is_ref":true}},"formula":{"synonym":"Формула","multiline_mode":false,"tooltip":"","choice_params":[{"name":"parent","path":["3220e24b-ffcd-11e5-8303-e67fda7f6b46","3220e251-ffcd-11e5-8303-e67fda7f6b46"]}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"lmin":{"synonym":"Длина min","multiline_mode":false,"tooltip":"Минимальная длина или ширина","type":{"types":["number"],"digits":6,"fraction_figits":0}},"lmax":{"synonym":"Длина max","multiline_mode":false,"tooltip":"Максимальная длина или ширина","type":{"types":["number"],"digits":6,"fraction_figits":0}},"ahmin":{"synonym":"Угол min","multiline_mode":false,"tooltip":"Минимальный угол к горизонтали","type":{"types":["number"],"digits":3,"fraction_figits":0}},"ahmax":{"synonym":"Угол max","multiline_mode":false,"tooltip":"Максимальный угол к горизонтали","type":{"types":["number"],"digits":3,"fraction_figits":0}},"smin":{"synonym":"S min","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"smax":{"synonym":"S max","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"for_direct_profile_only":{"synonym":"Для прямых","multiline_mode":false,"tooltip":"Использовать только для прямых профилей (1), только для кривых (-1) или всегда(0)","type":{"types":["number"],"digits":1,"fraction_figits":0}},"step":{"synonym":"Шаг","multiline_mode":false,"tooltip":"Шаг (расчет по точкам)","type":{"types":["number"],"digits":10,"fraction_figits":3}},"step_angle":{"synonym":"Угол шага","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"offsets":{"synonym":"Отступы шага","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"do_center":{"synonym":"↔","multiline_mode":false,"tooltip":"Положение от края или от центра","type":{"types":["boolean"]}},"attrs_option":{"synonym":"Направления","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.inset_attrs_options"],"is_ref":true}},"end_mount":{"synonym":"Концевые крепления","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"is_order_row":{"synonym":"Это строка заказа","multiline_mode":false,"tooltip":"Если заполнено, строка будет добавлена в заказ, а не в спецификацию текущей продукции","choice_groups_elm":"elm","type":{"types":["enm.specification_order_row_types"],"is_ref":true}},"is_main_elm":{"synonym":"Это основной элемент","multiline_mode":false,"tooltip":"Для профильных вставок определяет номенклатуру, размеры которой будут использованы при построении эскиза","type":{"types":["boolean"]}}}},"selection_params":{"name":"ПараметрыОтбора","synonym":"Параметры отбора","tooltip":"","fields":{"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"comparison_type":{"synonym":"Вид сравнения","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":["gt","gte","lt","lte","eq","ne","in","nin","inh","ninh"]}],"choice_groups_elm":"elm","type":{"types":["enm.comparison_types"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["comparison_type"],"path":["selection_params","comparison_type"]},{"name":["selection","owner"],"path":["selection_params","param"]},{"name":["txt_row"],"path":["selection_params","txt_row"]}],"choice_type":{"path":["selection_params","param"],"elm":0},"mandatory":true,"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового реквизита либо сериализация списочного значения","type":{"types":["string"],"str_len":0}}}}},"cachable":"ram","form":{"selection":{"fields":[],"cols":[{"id":"id","width":"140","type":"ro","align":"left","sort":"server","caption":"Код"},{"id":"insert_type","width":"200","type":"ro","align":"left","sort":"server","caption":"Тип вставки"},{"id":"presentation","width":"*","type":"ro","align":"left","sort":"server","caption":"Наименование"}]},"obj":{"head":{" ":["id","name","insert_type","sizeb","clr","clr_group","is_order_row","priority"],"Дополнительно":["lmin","lmax","hmin","hmax","smin","smax","ahmin","ahmax","mmin","mmax","for_direct_profile_only","impost_fixation","shtulp_fixation","can_rotate"]},"tabular_sections":{"specification":{"fields":["nom","clr","quantity","sz","coefficient","angle_calc_method","count_calc_method","formula","is_order_row","is_main_elm","lmin","lmax","ahmin","ahmax","smin","smax"],"headers":"Номенклатура,Цвет,Колич.,Размер,Коэфф.,Расч.угла,Расч.колич.,Формула,↑ В заказ,Осн. мат.,Длина min,Длина max,Угол min,Угол max,S min, S max","widths":"*,160,100,100,100,140,140,160,80,80,100,100,100,100,100,100","min_widths":"200,160,100,100,100,140,140,160,140,80,100,100,100,100,100,100","aligns":"","sortings":"na,na,na,na,na,na,na,na,na,na,na,na,na,na,na,na","types":"ref,ref,calck,calck,calck,ref,ref,ref,ref,ch,calck,calck,calck,calck,calck,calck"}},"tabular_sections_order":["specification"]}}},"parameters_keys":{"name":"КлючиПараметров","splitted":true,"synonym":"Ключи параметров","illustration":"Списки пар {Параметр:Значение} для фильтрации в подсистемах формирования спецификаций, планировании и ценообразовании\n","obj_presentation":"Ключ параметров","list_presentation":"Ключи параметров","input_by_string":["name"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"priority":{"synonym":"Приоритет","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cat.parameters_keys"],"is_ref":true}}},"tabular_sections":{"params":{"name":"Параметры","synonym":"Параметры","tooltip":"","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"comparison_type":{"synonym":"Вид сравнения","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":["gt","gte","lt","lte","eq","ne","in","nin","inh","ninh"]}],"choice_groups_elm":"elm","type":{"types":["enm.comparison_types"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["comparison_type"],"path":["params","comparison_type"]},{"name":["selection","owner"],"path":["params","property"]},{"name":["txt_row"],"path":["params","txt_row"]}],"choice_type":{"path":["params","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового реквизита либо сериализация списочного значения","type":{"types":["string"],"str_len":0}}}}},"cachable":"doc_ram"},"production_params":{"name":"пзПараметрыПродукции","splitted":true,"synonym":"Параметры продукции","illustration":"Настройки системы профилей и фурнитуры","obj_presentation":"Система","list_presentation":"Параметры продукции","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"default_clr":{"synonym":"Осн цвет","multiline_mode":false,"tooltip":"Основной цвет изделия","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"clr_group":{"synonym":"Доступность цветов","multiline_mode":false,"tooltip":"","choice_params":[{"name":"color_price_group_destination","path":"ДляОграниченияДоступности"}],"choice_groups_elm":"elm","type":{"types":["cat.color_price_groups"],"is_ref":true}},"tmin":{"synonym":"Толщина заполнения min ","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"tmax":{"synonym":"Толщина заполнения max ","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"allow_open_cnn":{"synonym":"Незамкн. контуры","multiline_mode":false,"tooltip":"Допускаются незамкнутые контуры","type":{"types":["boolean"]}},"flap_pos_by_impost":{"synonym":"Положение ств. по имп.","multiline_mode":false,"tooltip":"Использовать положения Центр, Центр вертикаль и Центр горизонталь для створок","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа","multiline_mode":false,"tooltip":"","type":{"types":["cat.production_params"],"is_ref":true}}},"tabular_sections":{"elmnts":{"name":"Элементы","synonym":"Элементы","tooltip":"Типовые рама, створка, импост и заполнение для данной системы","fields":{"by_default":{"synonym":"По умолчанию","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"elm_type":{"synonym":"Тип элемента","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":["Рама","Створка","Импост","Штульп","Заполнение","Раскладка","Добор","Соединитель","Москитка","Водоотлив","Стекло"]}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.elm_types"],"is_ref":true}},"nom":{"synonym":"Вставка","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.inserts"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"pos":{"synonym":"Положение","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":["Лев","Прав","Верх","Низ","ЦентрВертикаль","ЦентрГоризонталь","Центр","Любое"]}],"choice_groups_elm":"elm","type":{"types":["enm.positions"],"is_ref":true}}}},"production":{"name":"Продукция","synonym":"Продукция","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}},"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["production","param"]}],"choice_groups_elm":"elm","choice_type":{"path":["production","param"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}}}},"product_params":{"name":"ПараметрыИзделия","synonym":"Параметры изделия","tooltip":"Значения параметров изделия по умолчанию","fields":{"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["product_params","param"]}],"choice_groups_elm":"elm","choice_type":{"path":["product_params","param"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"hide":{"synonym":"Скрыть","multiline_mode":false,"tooltip":"Не показывать строку параметра в диалоге свойств изделия","type":{"types":["boolean"]}},"forcibly":{"synonym":"Принудительно","multiline_mode":false,"tooltip":"Замещать установленное ранее значение при перевыборе системы","type":{"types":["boolean"]}}}},"furn_params":{"name":"ПараметрыФурнитуры","synonym":"Параметры фурнитуры","tooltip":"Значения параметров фурнитуры по умолчанию","fields":{"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["furn_params","param"]}],"choice_groups_elm":"elm","choice_type":{"path":["furn_params","param"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"hide":{"synonym":"Скрыть","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"forcibly":{"synonym":"Принудительно","multiline_mode":false,"tooltip":"Замещать установленное ранее значение при перевыборе системы","type":{"types":["boolean"]}}}},"base_blocks":{"name":"ТиповыеБлоки","synonym":"Шаблоны","tooltip":"","fields":{"calc_order":{"synonym":"Расчет","multiline_mode":false,"tooltip":"","choice_params":[{"name":"obj_delivery_state","path":"Шаблон"}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["doc.calc_order"],"is_ref":true}}}}},"cachable":"ram","form":{"obj":{"head":{" ":["id","name","parent","clr_group","tmin","tmax","allow_open_cnn"]},"tabular_sections":{"elmnts":{"fields":["by_default","elm_type","nom","clr","pos"],"headers":"√,Тип,Номенклатура,Цвет,Положение","widths":"70,160,*,160,160","min_widths":"70,160,200,160,160","aligns":"","sortings":"na,na,na,na,na","types":"ch,ref,ref,ref,ref"},"production":{"fields":["nom","param","value"],"headers":"Номенклатура,Параметр,Значение","widths":"*,160,160","min_widths":"200,160,160","aligns":"","sortings":"na,na,na","types":"ref,ro,ro"},"product_params":{"fields":["param","value","hide","forcibly"],"headers":"Параметр,Значение,Скрыть,Принудительно","widths":"*,*,80,80","min_widths":"200,200,80,80","aligns":"","sortings":"na,na,na,na","types":"ro,ro,ch,ch"},"furn_params":{"fields":["param","value","hide","forcibly"],"headers":"Параметр,Значение,Скрыть,Принудительно","widths":"*,*,80,80","min_widths":"200,200,80,80","aligns":"","sortings":"na,na,na,na","types":"ro,ro,ch,ch"},"base_blocks":{"fields":["calc_order"],"headers":"Расчет","widths":"*","min_widths":"200","aligns":"","sortings":"na","types":"ref"}},"tabular_sections_order":["elmnts","production","product_params","furn_params","base_blocks"]}}},"delivery_areas":{"name":"РайоныДоставки","splitted":true,"synonym":"Районы доставки","illustration":"","obj_presentation":"Район доставки","list_presentation":"Районы доставки","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"country":{"synonym":"Страна","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.countries"],"is_ref":true}},"region":{"synonym":"Регион","multiline_mode":false,"tooltip":"Регион, край, область","mandatory":true,"type":{"types":["string"],"str_len":50}},"city":{"synonym":"Город (населенный пункт)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"latitude":{"synonym":"Гео. коорд. Широта","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":12}},"longitude":{"synonym":"Гео. коорд. Долгота","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":12}},"ind":{"synonym":"Индекс","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":6}},"delivery_area":{"synonym":"Район (внутри города)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"specify_area_by_geocoder":{"synonym":"Уточнять район геокодером","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"ram"},"cnns":{"name":"пзСоединения","splitted":true,"synonym":"Соединения элементов","illustration":"Спецификации соединений элементов","obj_presentation":"Соединение","list_presentation":"Соединения","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"priority":{"synonym":"Приоритет","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"amin":{"synonym":"Угол минимальный","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"amax":{"synonym":"Угол максимальный","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"sd1":{"synonym":"Сторона","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.cnn_sides"],"is_ref":true}},"sz":{"synonym":"Размер","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"cnn_type":{"synonym":"Тип соединения","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.cnn_types"],"is_ref":true}},"ahmin":{"synonym":"AH min (угол к горизонтали)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"ahmax":{"synonym":"AH max (угол к горизонтали)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"lmin":{"synonym":"Длина шва min ","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"lmax":{"synonym":"Длина шва max ","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"tmin":{"synonym":"Толщина min ","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"tmax":{"synonym":"Толщина max ","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"var_layers":{"synonym":"Створки в разн. плоск.","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"for_direct_profile_only":{"synonym":"Для прямых","multiline_mode":false,"tooltip":"Использовать только для прямых профилей (1), только для кривых (-1) или всегда(0)","type":{"types":["number"],"digits":1,"fraction_figits":0}},"art1vert":{"synonym":"Арт1 верт.","multiline_mode":false,"tooltip":"Соединение используется только в том случае, если Артикул1 - вертикальный","type":{"types":["boolean"]}},"art1glass":{"synonym":"Арт1 - стеклопакет","multiline_mode":false,"tooltip":"Артикул1 может быть составным стеклопакетом","type":{"types":["boolean"]}},"art2glass":{"synonym":"Арт2 - стеклопакет","multiline_mode":false,"tooltip":"Артикул2 может быть составным стеклопакетом","type":{"types":["boolean"]}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"specification":{"name":"Спецификация","synonym":"Спецификация","tooltip":"","fields":{"elm":{"synonym":"№","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.inserts","cat.nom"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"nom_characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["specification","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"coefficient":{"synonym":"Коэффициент","multiline_mode":false,"tooltip":"коэффициент (кол-во комплектующего на 1мм профиля)","type":{"types":["number"],"digits":14,"fraction_figits":8}},"sz":{"synonym":"Размер","multiline_mode":false,"tooltip":"размер (в мм, на которое компл. заходит на Артикул 2)","type":{"types":["number"],"digits":8,"fraction_figits":1}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":8}},"formula":{"synonym":"Формула","multiline_mode":false,"tooltip":"","choice_params":[{"name":"parent","path":["3220e259-ffcd-11e5-8303-e67fda7f6b46","3220e251-ffcd-11e5-8303-e67fda7f6b46"]}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"sz_min":{"synonym":"Размер min","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"sz_max":{"synonym":"Размер max","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"amin":{"synonym":"Угол min","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"amax":{"synonym":"Угол max","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"set_specification":{"synonym":"Устанавливать","multiline_mode":false,"tooltip":"Устанавливать спецификацию","choice_groups_elm":"elm","type":{"types":["enm.specification_installation_methods"],"is_ref":true}},"for_direct_profile_only":{"synonym":"Для прямых","multiline_mode":false,"tooltip":"Использовать только для прямых профилей (1), только для кривых (-1) или всегда(0)","type":{"types":["number"],"digits":1,"fraction_figits":0}},"by_contour":{"synonym":"По контуру","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"contraction_by_contour":{"synonym":"Укорочение по контуру","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"on_aperture":{"synonym":"На проем","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"angle_calc_method":{"synonym":"Расчет угла","multiline_mode":false,"tooltip":"Способ расчета угла","choice_groups_elm":"elm","type":{"types":["enm.angle_calculating_ways"],"is_ref":true}},"contour_number":{"synonym":"Контур №","multiline_mode":false,"tooltip":"Номер контура (доп)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"is_order_row":{"synonym":"Это строка заказа","multiline_mode":false,"tooltip":"Если \"Истина\", строка будет добавлена в заказ, а не в спецификацию текущей продукции","type":{"types":["boolean"]}}}},"cnn_elmnts":{"name":"СоединяемыеЭлементы","synonym":"Соединяемые элементы","tooltip":"","fields":{"nom1":{"synonym":"Номенклатура1","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"clr1":{"synonym":"Цвет1","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"nom2":{"synonym":"Номенклатура2","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"clr2":{"synonym":"Цвет2","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"varclr":{"synonym":"Разные цвета","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"is_nom_combinations_row":{"synonym":"Это строка сочетания номенклатур","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}}},"selection_params":{"name":"ПараметрыОтбора","synonym":"Параметры отбора","tooltip":"","fields":{"elm":{"synonym":"№","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"comparison_type":{"synonym":"Вид сравнения","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":["gt","gte","lt","lte","eq","ne","in","nin","inh","ninh"]}],"choice_groups_elm":"elm","type":{"types":["enm.comparison_types"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["comparison_type"],"path":["selection_params","comparison_type"]},{"name":["selection","owner"],"path":["selection_params","param"]},{"name":["txt_row"],"path":["selection_params","txt_row"]}],"choice_type":{"path":["selection_params","param"],"elm":0},"mandatory":true,"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового реквизита либо сериализация списочного значения","type":{"types":["string"],"str_len":0}}}}},"cachable":"ram","form":{"selection":{"fields":[],"cols":[{"id":"id","width":"140","type":"ro","align":"left","sort":"server","caption":"Код"},{"id":"cnn_type","width":"200","type":"ro","align":"left","sort":"server","caption":"Тип"},{"id":"presentation","width":"*","type":"ro","align":"left","sort":"server","caption":"Наименование"}]},"obj":{"head":{" ":["id","name","cnn_type","sz","priority"],"Дополнительно":["sd1","amin","amax","ahmin","ahmax","lmin","lmax","tmin","tmax","var_layers","for_direct_profile_only","art1vert","art1glass","art2glass"]},"tabular_sections":{"specification":{"fields":["nom","clr","quantity","sz","coefficient","angle_calc_method","formula","is_order_row","sz_min","sz_max","amin","amax","set_specification","for_direct_profile_only"],"headers":"Номенклатура,Цвет,Колич.,Размер,Коэфф.,Расч.угла,Формула,↑ В заказ,Размер min,Размер max,Угол min,Угол max,Устанавливать,Для прямых","widths":"*,160,100,100,100,140,160,140,100,100,100,100,140,140","min_widths":"200,160,100,100,100,140,160,140,100,100,100,100,140,140","aligns":"","sortings":"na,na,na,na,na,na,na,na,na,na,na,na,na,na","types":"ref,ref,calck,calck,calck,ref,ref,ref,calck,calck,calck,calck,ref,calck"},"cnn_elmnts":{"fields":["nom1","clr1","nom2","clr2","varclr","is_nom_combinations_row"],"headers":"Номенклатура1,Цвет1,Номенклатура2,Цвет2,Разные цвета","widths":"*,*,*,*,100","min_widths":"160,160,160,160,100","aligns":"","sortings":"na,na,na,na,na","types":"ref,ref,ref,ref,ch"}},"tabular_sections_order":["specification","cnn_elmnts"]}}},"furns":{"name":"пзФурнитура","splitted":true,"synonym":"Фурнитура","illustration":"Описывает ограничения и правила формирования спецификаций фурнитуры","obj_presentation":"Фурнитура","list_presentation":"Фурнитура","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"flap_weight_max":{"synonym":"Масса створки макс","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"left_right":{"synonym":"Левая правая","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"is_set":{"synonym":"Это набор","multiline_mode":false,"tooltip":"Определяет, является элемент набором для построения спецификации или комплектом фурнитуры для выбора в построителе","type":{"types":["boolean"]}},"is_sliding":{"synonym":"Это раздвижка","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"furn_set":{"synonym":"Набор фурнитуры","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_set","path":true}],"choice_groups_elm":"elm","type":{"types":["cat.furns"],"is_ref":true}},"side_count":{"synonym":"Количество сторон","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":1,"fraction_figits":0}},"handle_side":{"synonym":"Ручка на стороне","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":1,"fraction_figits":0}},"open_type":{"synonym":"Тип открывания","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.open_types"],"is_ref":true}},"name_short":{"synonym":"Наименование сокращенное","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":3}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа","multiline_mode":false,"tooltip":"","type":{"types":["cat.furns"],"is_ref":true}}},"tabular_sections":{"open_tunes":{"name":"НастройкиОткрывания","synonym":"Настройки открывания","tooltip":"","fields":{"side":{"synonym":"Сторона","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":1,"fraction_figits":0}},"lmin":{"synonym":"X min (длина или ширина)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"lmax":{"synonym":"X max (длина или ширина)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"amin":{"synonym":"Угол мин","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"amax":{"synonym":"Угол макс","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"arc_available":{"synonym":"Выпуклая дуга","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"shtulp_available":{"synonym":"Штульп безимп соед","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"shtulp_fix_here":{"synonym":"Крепится штульп","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"rotation_axis":{"synonym":"Ось поворота","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"partial_opening":{"synonym":"Неполн. откр.","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"outline":{"synonym":"Эскиз","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}}}},"specification":{"name":"Спецификация","synonym":"Спецификация","tooltip":"","fields":{"elm":{"synonym":"№","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"dop":{"synonym":"№ доп","multiline_mode":false,"tooltip":"Элемент дополнительной спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура/Набор","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_set","path":true}],"choice_groups_elm":"elm","type":{"types":["cat.inserts","cat.nom","cat.furns"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"nom_characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["nom"],"path":["specification","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":8}},"handle_height_base":{"synonym":"Выс. ручк.","multiline_mode":false,"tooltip":"Высота ручки по умолчению.\n>0: фиксированная высота\n=0: Высоту задаёт оператор\n-1: Ручка по центру, но можно редактировать\n-2: Ручка по центру, нельзя редактировать","type":{"types":["number"],"digits":6,"fraction_figits":0}},"handle_height_min":{"synonym":"Выс. ручк. min","multiline_mode":false,"tooltip":"Строка будет добавлена только в том случае, если ручка выше этого значеия","type":{"types":["number"],"digits":6,"fraction_figits":0}},"handle_height_max":{"synonym":"Выс. ручк. max","multiline_mode":false,"tooltip":"Строка будет добавлена только в том случае, если ручка ниже этого значеия","type":{"types":["number"],"digits":6,"fraction_figits":0}},"contraction":{"synonym":"Укорочение","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"contraction_option":{"synonym":"Укороч. от","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.contraction_options"],"is_ref":true}},"coefficient":{"synonym":"Коэффициент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":8}},"flap_weight_min":{"synonym":"Масса створки min","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"flap_weight_max":{"synonym":"Масса створки max","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"side":{"synonym":"Сторона","multiline_mode":false,"tooltip":"Сторона фурнитуры, на которую устанавливается элемент или выполняется операция","type":{"types":["number"],"digits":1,"fraction_figits":0}},"cnn_side":{"synonym":"Сторона соед.","multiline_mode":false,"tooltip":"Фильтр: выполнять операцию, если примыкающий элемент примыкает с заданной стороны","choice_groups_elm":"elm","type":{"types":["enm.cnn_sides"],"is_ref":true}},"offset_option":{"synonym":"Смещ. от","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.offset_options"],"is_ref":true}},"formula":{"synonym":"Формула","multiline_mode":false,"tooltip":"","choice_params":[{"name":"parent","path":["3220e25a-ffcd-11e5-8303-e67fda7f6b46","3220e251-ffcd-11e5-8303-e67fda7f6b46"]}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"transfer_option":{"synonym":"Перенос опер.","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.transfer_operations_options"],"is_ref":true}},"overmeasure":{"synonym":"Припуск","multiline_mode":false,"tooltip":"Учитывать припуск длины элемента (например, на сварку)","type":{"types":["boolean"]}},"is_main_specification_row":{"synonym":"Это строка основной спецификации","multiline_mode":false,"tooltip":"Интерфейсное поле (доп=0) для редактирования без кода","type":{"types":["boolean"]}},"is_set_row":{"synonym":"Это строка набора","multiline_mode":false,"tooltip":"Интерфейсное поле (Номенклатура=Фурнитура) для редактирования без кода","type":{"types":["number"],"digits":1,"fraction_figits":0}},"is_procedure_row":{"synonym":"Это строка операции","multiline_mode":false,"tooltip":"Интерфейсное поле (Номенклатура=Номенклатура И ТипНоменклатуры = Техоперация) для редактирования без кода","type":{"types":["number"],"digits":1,"fraction_figits":0}},"is_order_row":{"synonym":"Это строка заказа","multiline_mode":false,"tooltip":"Если \"Истина\", строка будет добавлена в заказ, а не в спецификацию текущей продукции","type":{"types":["boolean"]}}}},"selection_params":{"name":"ПараметрыОтбора","synonym":"Параметры отбора","tooltip":"","fields":{"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"dop":{"synonym":"Доп","multiline_mode":false,"tooltip":"Элемент дополнительной спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"comparison_type":{"synonym":"Вид сравнения","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":["gt","gte","lt","lte","eq","ne","in","nin","inh","ninh"]}],"choice_groups_elm":"elm","type":{"types":["enm.comparison_types"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["comparison_type"],"path":["selection_params","comparison_type"]},{"name":["selection","owner"],"path":["selection_params","param"]},{"name":["txt_row"],"path":["selection_params","txt_row"]}],"choice_type":{"path":["selection_params","param"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового реквизита либо сериализация списочного значения","type":{"types":["string"],"str_len":0}}}},"specification_restrictions":{"name":"ОграниченияСпецификации","synonym":"Ограничения спецификации","tooltip":"","fields":{"elm":{"synonym":"№","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"dop":{"synonym":"Доп","multiline_mode":false,"tooltip":"Элемент дополнительной спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"side":{"synonym":"Сторона","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":1,"fraction_figits":0}},"lmin":{"synonym":"X min (длина или ширина)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"lmax":{"synonym":"X max (длина или ширина)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"amin":{"synonym":"Угол мин","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"amax":{"synonym":"Угол макс","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}}}},"colors":{"name":"Цвета","synonym":"Цвета","tooltip":"Цаета, доступные для данной фурнитуры","fields":{"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","type":{"types":["cat.clrs"],"is_ref":true}}}}},"cachable":"ram","form":{"selection":{"fields":[],"cols":[{"id":"id","width":"140","type":"ro","align":"left","sort":"server","caption":"Код"},{"id":"open_type","width":"150","type":"ro","align":"left","sort":"server","caption":"Тип открывания"},{"id":"presentation","width":"*","type":"ro","align":"left","sort":"server","caption":"Наименование"}]},"obj":{"head":{" ":["id","name","name_short","parent","open_type","is_set","furn_set"],"Дополнительно":["side_count","left_right","handle_side","is_sliding"]},"tabular_sections":{"open_tunes":{"fields":["side","lmin","lmax","amin","amax","rotation_axis","partial_opening","arc_available","shtulp_available","shtulp_fix_here"],"headers":"Сторона,L min,L max,Угол min,Угол max,Ось поворота,Неполн. откр.,Дуга,Разрешен штульп,Крепится штульп","widths":"*,*,*,*,*,100,100,100,100,100","min_widths":"100,100,100,100,100,100,100,100,100,100","aligns":"","sortings":"na,na,na,na,na,na,na,na,na,na","types":"calck,calck,calck,calck,calck,ch,ch,ch,ch,ch"},"specification":{"fields":["elm","dop","nom","clr","quantity","coefficient","side","cnn_side","offset_option","formula","transfer_option"],"headers":"Элемент,Доп,Материал,Цвет,Колич.,Коэфф.,Сторона,Строна соед.,Смещ. от,Формула,Перенос опер.","widths":"80,80,*,140,100,100,100,140,140,140,140","min_widths":"80,80,200,140,100,100,100,140,140,140,140","aligns":"","sortings":"na,na,na,na,na,na,na,na,na,na,na","types":"ron,ron,ref,ref,calck,calck,calck,ref,ref,ref,ref"}},"tabular_sections_order":["open_tunes","specification"]}}},"clrs":{"name":"пзЦвета","splitted":true,"synonym":"Цвета","illustration":"","obj_presentation":"Цвет","list_presentation":"Цвета","input_by_string":["name","id","ral"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"ral":{"synonym":"Цвет RAL","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":20}},"machine_tools_clr":{"synonym":"Код для станка","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":20}},"clr_str":{"synonym":"Цвет в построителе","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":36}},"clr_out":{"synonym":"Цвет снаружи","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"clr_in":{"synonym":"Цвет изнутри","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cat.clrs"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram"},"color_price_groups":{"name":"ЦветоЦеновыеГруппы","splitted":true,"synonym":"Цвето-ценовые группы","illustration":"","obj_presentation":"Цвето-ценовая группа","list_presentation":"Цвето-ценовые группы","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"color_price_group_destination":{"synonym":"Назначение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.color_price_group_destinations"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"price_groups":{"name":"ЦеновыеГруппы","synonym":"Ценовые группы","tooltip":"","fields":{"price_group":{"synonym":"Ценовая гр. или номенклатура","multiline_mode":false,"tooltip":"Ссылка на ценовую группу или номенклатуру или папку (родитель - первый уровень иерархии) номенклатуры, для которой действует соответствие цветов","type":{"types":["cat.price_groups","cat.nom"],"is_ref":true}}}},"clr_conformity":{"name":"СоответствиеЦветов","synonym":"Соответствие цветов","tooltip":"","fields":{"clr1":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","type":{"types":["cat.color_price_groups","cat.clrs"],"is_ref":true}},"clr2":{"synonym":"Соответствие","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}}}}},"cachable":"ram"},"divisions":{"name":"Подразделения","splitted":true,"synonym":"Подразделения","illustration":"Перечень подразделений предприятия","obj_presentation":"Подразделение","list_presentation":"Подразделения","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":false,"main_presentation_name":true,"code_length":9,"fields":{"main_project":{"synonym":"Основной проект","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.projects"],"is_ref":true}},"sorting":{"synonym":"Порядок","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Входит в подразделение","multiline_mode":false,"tooltip":"","type":{"types":["cat.divisions"],"is_ref":true}}},"tabular_sections":{"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"Набор реквизитов, состав которого определяется компанией.","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}}},"cachable":"doc_ram"},"users":{"name":"Пользователи","splitted":true,"synonym":"Пользователи","illustration":"","obj_presentation":"Пользователь","list_presentation":"","input_by_string":["name"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"user_ib_uid":{"synonym":"Идентификатор пользователя ИБ","multiline_mode":false,"tooltip":"Уникальный идентификатор пользователя информационной базы, с которым сопоставлен этот элемент справочника.","choice_groups_elm":"elm","type":{"types":["string"],"str_len":36,"str_fix":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"Подразделение, в котором работает пользователь","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"individual_person":{"synonym":"Физическое лицо","multiline_mode":false,"tooltip":"Физическое лицо, с которым связан пользователь","choice_groups_elm":"elm","type":{"types":["cat.individuals"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":true,"tooltip":"Произвольная строка","type":{"types":["string"],"str_len":0}},"user_fresh_uid":{"synonym":"Идентификатор пользователя сервиса","multiline_mode":false,"tooltip":"Уникальный идентификатор пользователя сервиса, с которым сопоставлен этот элемент справочника.","choice_groups_elm":"elm","type":{"types":["string"],"str_len":36,"str_fix":true}},"invalid":{"synonym":"Недействителен","multiline_mode":false,"tooltip":"Пользователь больше не работает в программе, но сведения о нем сохранены.\nНедействительные пользователи скрываются из всех списков\nпри выборе или подборе в документах и других местах программы.","type":{"types":["boolean"]}},"ancillary":{"synonym":"Служебный","multiline_mode":false,"tooltip":"Неразделенный или разделенный служебный пользователь, права к которому устанавливаются непосредственно и программно.","type":{"types":["boolean"]}},"id":{"synonym":"Логин","multiline_mode":true,"tooltip":"Произвольная строка","type":{"types":["string"],"str_len":50}},"prefix":{"synonym":"Префикс нумерации документов","multiline_mode":false,"tooltip":"Префикс номеров документов текущего пользователя","mandatory":true,"type":{"types":["string"],"str_len":2}},"suffix":{"synonym":"Суффикс CouchDB","multiline_mode":false,"tooltip":"Для разделения данных в CouchDB","type":{"types":["string"],"str_len":6}},"direct":{"synonym":"Direct","multiline_mode":false,"tooltip":"Использовать прямое подключение к CouchDB без кеширования в браузере","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"Дополнительные реквизиты объекта","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}},"contact_information":{"name":"КонтактнаяИнформация","synonym":"Контактная информация","tooltip":"Хранение контактной информации (адреса, веб-страницы, номера телефонов и др.)","fields":{"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"Тип контактной информации (телефон, адрес и т.п.)","choice_groups_elm":"elm","type":{"types":["enm.contact_information_types"],"is_ref":true}},"kind":{"synonym":"Вид","multiline_mode":false,"tooltip":"Вид контактной информации","choice_params":[{"name":"parent","path":"8cbaa30d-faab-45ad-880e-84f8b421f448"}],"choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}},"presentation":{"synonym":"Представление","multiline_mode":false,"tooltip":"Представление контактной информации для отображения в формах","type":{"types":["string"],"str_len":500}},"values_fields":{"synonym":"Значения полей","multiline_mode":false,"tooltip":"Служебное поле, для хранения контактной информации","type":{"types":["string"],"str_len":0}},"country":{"synonym":"Страна","multiline_mode":false,"tooltip":"Страна (заполняется для адреса)","type":{"types":["string"],"str_len":100}},"region":{"synonym":"Регион","multiline_mode":false,"tooltip":"Регион (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"city":{"synonym":"Город","multiline_mode":false,"tooltip":"Город (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"email_address":{"synonym":"Адрес ЭП","multiline_mode":false,"tooltip":"Адрес электронной почты","type":{"types":["string"],"str_len":100}},"server_domain_name":{"synonym":"Доменное имя сервера","multiline_mode":false,"tooltip":"Доменное имя сервера электронной почты или веб-страницы","type":{"types":["string"],"str_len":100}},"phone_number":{"synonym":"Номер телефона","multiline_mode":false,"tooltip":"Полный номер телефона","type":{"types":["string"],"str_len":20}},"phone_without_codes":{"synonym":"Номер телефона без кодов","multiline_mode":false,"tooltip":"Номер телефона без кодов и добавочного номера","type":{"types":["string"],"str_len":20}},"ВидДляСписка":{"synonym":"Вид для списка","multiline_mode":false,"tooltip":"Вид контактной информации для списка","choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}}}},"acl_objs":{"name":"ОбъектыДоступа","synonym":"Объекты доступа","tooltip":"","fields":{"acl_obj":{"synonym":"Объект доступа","multiline_mode":false,"tooltip":"","type":{"types":["cat.individuals","cat.users","cat.nom_prices_types","cat.divisions","cat.partners","cat.organizations","cat.cashboxes","cat.meta_ids","cat.stores"],"is_ref":true}},"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"by_default":{"synonym":"По умолчанию","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}}}},"cachable":"ram","form":{"obj":{"head":{" ":["id","name","individual_person"],"Дополнительно":["ancillary","invalid",{"id":"user_ib_uid","path":"o.user_ib_uid","synonym":"Идентификатор пользователя ИБ","type":"ro"},{"id":"user_fresh_uid","path":"o.user_fresh_uid","synonym":"Идентификатор пользователя сервиса","type":"ro"},"note"]},"tabular_sections":{"contact_information":{"fields":["kind","presentation"],"headers":"Вид,Представление","widths":"200,*","min_widths":"100,200","aligns":"","sortings":"na,na","types":"ref,txt"}},"tabular_sections_order":["contact_information"]}}},"projects":{"name":"Проекты","splitted":true,"synonym":"Проекты","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":11,"fields":{"start":{"synonym":"Старт","multiline_mode":false,"tooltip":"Плановая дата начала работ по проекту.","type":{"types":["date"],"date_part":"date"}},"finish":{"synonym":"Финиш","multiline_mode":false,"tooltip":"Плановая дата окончания работ по проекту.","type":{"types":["date"],"date_part":"date"}},"launch":{"synonym":"Запуск","multiline_mode":false,"tooltip":"Фактическая дата начала работ по проекту.","type":{"types":["date"],"date_part":"date_time"}},"readiness":{"synonym":"Готовность","multiline_mode":false,"tooltip":"Фактическая дата окончания  работ по проекту.","type":{"types":["date"],"date_part":"date_time"}},"finished":{"synonym":"Завершен","multiline_mode":false,"tooltip":"Признак, указывающий на то, что работы по проекту завершены.","type":{"types":["boolean"]}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Ответственный за реализацию проекта.","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"Любые комментарии по проекту","type":{"types":["string"],"str_len":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cat.projects"],"is_ref":true}}},"tabular_sections":{"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"Набор реквизитов, состав которого определяется компанией.","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}}},"cachable":"doc"},"stores":{"name":"Склады","splitted":true,"synonym":"Склады (места хранения)","illustration":"Сведения о местах хранения товаров (складах), их структуре и физических лицах, назначенных материально ответственными (МОЛ) за тот или иной склад","obj_presentation":"Склад","list_presentation":"Склады","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа","multiline_mode":false,"tooltip":"","type":{"types":["cat.stores"],"is_ref":true}}},"tabular_sections":{"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"Набор реквизитов, состав которого определяется компанией.","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}}},"cachable":"doc_ram"},"work_shifts":{"name":"Смены","splitted":true,"synonym":"Смены","illustration":"Перечень рабочих смен предприятия","obj_presentation":"Смена","list_presentation":"Смены","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"work_shift_periodes":{"name":"ПериодыСмены","synonym":"Периоды смены","tooltip":"","fields":{"begin_time":{"synonym":"Время начала","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"time"}},"end_time":{"synonym":"Время окончания","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"time"}}}}},"cachable":"doc"},"cash_flow_articles":{"name":"СтатьиДвиженияДенежныхСредств","splitted":true,"synonym":"Статьи движения денежных средств","illustration":"Перечень статей движения денежных средств (ДДС), используемых в предприятии для проведения анализа поступлений и расходов в разрезе статей движения денежных средств. ","obj_presentation":"Статья движения денежных средств","list_presentation":"Статьи движения денежных средств","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"definition":{"synonym":"Описание","multiline_mode":true,"tooltip":"Рекомендации по выбору статьи движения денежных средств в документах","type":{"types":["string"],"str_len":0}},"sorting_field":{"synonym":"Порядок","multiline_mode":false,"tooltip":"Определяет порядок вывода вариантов анализа в мониторе целевых показателей при группировке по категориям целей.","type":{"types":["number"],"digits":5,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"В группе статей","multiline_mode":false,"tooltip":"Группа статей движения денежных средств","type":{"types":["cat.cash_flow_articles"],"is_ref":true}}},"tabular_sections":{},"cachable":"doc"},"nom_prices_types":{"name":"ТипыЦенНоменклатуры","splitted":true,"synonym":"Типы цен номенклатуры","illustration":"Перечень типов отпускных цен предприятия","obj_presentation":"Тип цен номенклатуры","list_presentation":"Типы цен номенклатуры","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"price_currency":{"synonym":"Валюта цены по умолчанию","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.currencies"],"is_ref":true}},"discount_percent":{"synonym":"Процент скидки или наценки по умолчанию","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"vat_price_included":{"synonym":"Цена включает НДС","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"rounding_order":{"synonym":"Порядок округления","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":10}},"rounding_in_a_big_way":{"synonym":"Округлять в большую сторону","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"doc_ram"},"individuals":{"name":"ФизическиеЛица","splitted":true,"synonym":"Физические лица","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":10,"fields":{"birth_date":{"synonym":"Дата рождения","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"inn":{"synonym":"ИНН","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":12}},"imns_code":{"synonym":"Код ИФНС","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":4}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"pfr_number":{"synonym":"Страховой номер ПФР","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":14}},"sex":{"synonym":"Пол","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.gender"],"is_ref":true}},"birth_place":{"synonym":"Место рождения","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":240}},"ОсновноеИзображение":{"synonym":"Основное изображение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.Файлы"],"is_ref":true}},"Фамилия":{"synonym":"Фамилия","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"Имя":{"synonym":"Имя","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"Отчество":{"synonym":"Отчество","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"ФамилияРП":{"synonym":"Фамилия (родительный падеж)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"ИмяРП":{"synonym":"Имя (родительный падеж)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"ОтчествоРП":{"synonym":"Отчество (родительный падеж)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"ОснованиеРП":{"synonym":"Основание (родительный падеж)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"ДолжностьРП":{"synonym":"Должность (родительный падеж)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"Должность":{"synonym":"Должность","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cat.individuals"],"is_ref":true}}},"tabular_sections":{"contact_information":{"name":"КонтактнаяИнформация","synonym":"Контактная информация","tooltip":"Хранение контактной информации (адреса, веб-страницы, номера телефонов и др.)","fields":{"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"Тип контактной информации (телефон, адрес и т.п.)","choice_groups_elm":"elm","type":{"types":["enm.contact_information_types"],"is_ref":true}},"kind":{"synonym":"Вид","multiline_mode":false,"tooltip":"Вид контактной информации","choice_params":[{"name":"parent","path":"822f19bc-09ab-4913-b283-b5461382a75d"}],"choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}},"presentation":{"synonym":"Представление","multiline_mode":false,"tooltip":"Представление контактной информации для отображения в формах","type":{"types":["string"],"str_len":500}},"values_fields":{"synonym":"Значения полей","multiline_mode":false,"tooltip":"Служебное поле, для хранения контактной информации","type":{"types":["string"],"str_len":0}},"country":{"synonym":"Страна","multiline_mode":false,"tooltip":"Страна (заполняется для адреса)","type":{"types":["string"],"str_len":100}},"region":{"synonym":"Регион","multiline_mode":false,"tooltip":"Регион (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"city":{"synonym":"Город","multiline_mode":false,"tooltip":"Город (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"email_address":{"synonym":"Адрес ЭП","multiline_mode":false,"tooltip":"Адрес электронной почты","type":{"types":["string"],"str_len":100}},"server_domain_name":{"synonym":"Доменное имя сервера","multiline_mode":false,"tooltip":"Доменное имя сервера электронной почты или веб-страницы","type":{"types":["string"],"str_len":100}},"phone_number":{"synonym":"Номер телефона","multiline_mode":false,"tooltip":"Полный номер телефона","type":{"types":["string"],"str_len":20}},"phone_without_codes":{"synonym":"Номер телефона без кодов","multiline_mode":false,"tooltip":"Номер телефона без кодов и добавочного номера","type":{"types":["string"],"str_len":20}},"ВидДляСписка":{"synonym":"Вид для списка","multiline_mode":false,"tooltip":"Вид контактной информации для списка","choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}}}}},"cachable":"ram","form":{"obj":{"head":{" ":[{"id":"id","path":"o.id","synonym":"Код","type":"ro"},"name","sex","birth_date",{"id":"parent","path":"o.parent","synonym":"Группа","type":"ref"}],"Коды":["inn","imns_code","pfr_number"],"Для печатных форм":["Фамилия","Имя","Отчество","ФамилияРП","ИмяРП","ОтчествоРП","Должность","ДолжностьРП","ОснованиеРП"]},"tabular_sections":{"contact_information":{"fields":["kind","presentation"],"headers":"Вид,Представление","widths":"200,*","min_widths":"100,200","aligns":"","sortings":"na,na","types":"ref,txt"}},"tabular_sections_order":["contact_information"]}}},"characteristics":{"name":"ХарактеристикиНоменклатуры","splitted":true,"synonym":"Характеристики номенклатуры","illustration":"Дополнительные характеристики элементов номенклатуры: цвет, размер и т.п.","obj_presentation":"Характеристика номенклатуры","list_presentation":"Характеристики номенклатуры","input_by_string":["name"],"hierarchical":false,"has_owners":true,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"x":{"synonym":"Длина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"y":{"synonym":"Высота, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"z":{"synonym":"Толщина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"s":{"synonym":"Площадь, м²","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"weight":{"synonym":"Масса, кг","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"calc_order":{"synonym":"Расчет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}},"product":{"synonym":"Изделие","multiline_mode":false,"tooltip":"Для продукции - номер строки заказа, для характеристики стеклопакета - номер элемента","type":{"types":["number"],"digits":6,"fraction_figits":0}},"leading_product":{"synonym":"Ведущая продукция","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"leading_elm":{"synonym":"Ведущий элемент","multiline_mode":false,"tooltip":"Для москиток и стеклопакетов - номер элемента ведущей продукции","type":{"types":["number"],"digits":6,"fraction_figits":0}},"origin":{"synonym":"Происхождение","multiline_mode":false,"tooltip":"Используется в связке с ведущей продукцией и ведущим элементом","choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":255}},"partner":{"synonym":"Контрагент","multiline_mode":false,"tooltip":"Для целей RLS","choice_groups_elm":"elm","type":{"types":["cat.partners"],"is_ref":true}},"sys":{"synonym":"Система","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.production_params"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}}},"tabular_sections":{"constructions":{"name":"Конструкции","synonym":"Конструкции","tooltip":"Конструкции изделия. Они же - слои или контуры","fields":{"cnstr":{"synonym":"№ Конструкции","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"parent":{"synonym":"Внешн. констр.","multiline_mode":false,"tooltip":"№ внешней конструкции","type":{"types":["number"],"digits":6,"fraction_figits":0}},"x":{"synonym":"Ширина, м","multiline_mode":false,"tooltip":"Габаритная ширина контура","type":{"types":["number"],"digits":8,"fraction_figits":1}},"y":{"synonym":"Высота, м","multiline_mode":false,"tooltip":"Габаритная высота контура","type":{"types":["number"],"digits":8,"fraction_figits":1}},"z":{"synonym":"Глубина","multiline_mode":false,"tooltip":"Z-координата плоскости (z-index) длч многослойных конструкций","type":{"types":["number"],"digits":8,"fraction_figits":1}},"w":{"synonym":"Ширина фурн","multiline_mode":false,"tooltip":"Ширина фурнитуры (по фальцу)","type":{"types":["number"],"digits":8,"fraction_figits":1}},"h":{"synonym":"Высота фурн","multiline_mode":false,"tooltip":"Высота фурнитуры (по фальцу)","type":{"types":["number"],"digits":8,"fraction_figits":1}},"furn":{"synonym":"Фурнитура","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_folder","path":false},{"name":"is_set","path":false}],"choice_groups_elm":"elm","type":{"types":["cat.furns"],"is_ref":true}},"clr_furn":{"synonym":"Цвет фурнитуры","multiline_mode":false,"tooltip":"Цвет москитной сетки","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"direction":{"synonym":"Направл. откр.","multiline_mode":false,"tooltip":"Направление открывания","choice_params":[{"name":"ref","path":["Левое","Правое"]}],"choice_groups_elm":"elm","type":{"types":["enm.open_directions"],"is_ref":true}},"h_ruch":{"synonym":"Высота ручки","multiline_mode":false,"tooltip":"Высота ручки в координатах контура (от габарита створки)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"fix_ruch":{"synonym":"Высота ручки фиксирована","multiline_mode":false,"tooltip":"Вычисляется по свойствам фурнитуры","type":{"types":["number"],"digits":6,"fraction_figits":0}},"is_rectangular":{"synonym":"Есть кривые","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}}},"coordinates":{"name":"Координаты","synonym":"Координаты","tooltip":"Координаты элементов","fields":{"cnstr":{"synonym":"Конструкция","multiline_mode":false,"tooltip":"Номер конструкции (слоя)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"parent":{"synonym":"Родитель","multiline_mode":false,"tooltip":"Дополнительная иерархия. Например, номер стеклопакета для раскладки или внешняя примыкающая палка для створки или доборного профиля","type":{"types":["number"],"digits":6,"fraction_figits":0}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"Номер элемента","type":{"types":["number"],"digits":6,"fraction_figits":0}},"elm_type":{"synonym":"Тип элемента","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.elm_types"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"inset":{"synonym":"Вставка","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"path_data":{"synonym":"Путь SVG","multiline_mode":false,"tooltip":"Данные пути образующей в терминах svg или json элемента","type":{"types":["string"],"str_len":1000}},"x1":{"synonym":"X1","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"y1":{"synonym":"Y1","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"x2":{"synonym":"X2","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"y2":{"synonym":"Y2","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"r":{"synonym":"Радиус","multiline_mode":false,"tooltip":"Вспомогательное поле - частный случай криволинейного элемента","type":{"types":["number"],"digits":8,"fraction_figits":1}},"arc_ccw":{"synonym":"Против часов.","multiline_mode":false,"tooltip":"Вспомогательное поле - частный случай криволинейного элемента - дуга против часовой стрелки","type":{"types":["boolean"]}},"s":{"synonym":"Площадь","multiline_mode":false,"tooltip":"Вычисляемое","type":{"types":["number"],"digits":14,"fraction_figits":6}},"angle_hor":{"synonym":"Угол к горизонту","multiline_mode":false,"tooltip":"Вычисляется для прямой, проходящей через узлы","type":{"types":["number"],"digits":8,"fraction_figits":1}},"alp1":{"synonym":"Угол 1, °","multiline_mode":false,"tooltip":"Вычисляемое - угол реза в первом узле","type":{"types":["number"],"digits":8,"fraction_figits":1}},"alp2":{"synonym":"Угол 2, °","multiline_mode":false,"tooltip":"Вычисляемое - угол реза во втором узле","type":{"types":["number"],"digits":8,"fraction_figits":1}},"len":{"synonym":"Длина, м","multiline_mode":false,"tooltip":"Вычисляется по координатам и соединениям","type":{"types":["number"],"digits":8,"fraction_figits":1}},"pos":{"synonym":"Положение","multiline_mode":false,"tooltip":"Вычисляется во соседним элементам","choice_groups_elm":"elm","type":{"types":["enm.positions"],"is_ref":true}},"orientation":{"synonym":"Ориентация","multiline_mode":false,"tooltip":"Вычисляется по углу к горизонту","choice_groups_elm":"elm","type":{"types":["enm.orientations"],"is_ref":true}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"Вычисляется по вставке, геометрии и параметрам","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}}}},"inserts":{"name":"Вставки","synonym":"Вставки","tooltip":"Дополнительные вставки в изделие и контуры","fields":{"cnstr":{"synonym":"Конструкция","multiline_mode":false,"tooltip":"Номер конструкции (слоя)\nЕсли 0, вставка относится к изделию.\nЕсли >0 - к контуру\nЕсли <0 - к элементу","type":{"types":["number"],"digits":6,"fraction_figits":0}},"inset":{"synonym":"Вставка","multiline_mode":false,"tooltip":"","choice_params":[{"name":"insert_type","path":["МоскитнаяСетка","Контур","Изделие"]}],"choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}}}},"params":{"name":"Параметры","synonym":"Параметры","tooltip":"Параметры изделий и фурнитуры","fields":{"cnstr":{"synonym":"Конструкция","multiline_mode":false,"tooltip":"Если 0, параметр относится к изделию.\nЕсли >0 - к фурнитуре створки или контуру\nЕсли <0 - к элементу","type":{"types":["number"],"digits":6,"fraction_figits":0}},"inset":{"synonym":"Вставка","multiline_mode":false,"tooltip":"Фильтр для дополнительных вставок","choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["params","param"]}],"choice_groups_elm":"elm","choice_type":{"path":["params","param"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"hide":{"synonym":"Скрыть","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}}},"cnn_elmnts":{"name":"СоединяемыеЭлементы","synonym":"Соединяемые элементы","tooltip":"Соединения элементов","fields":{"elm1":{"synonym":"Элем 1","multiline_mode":false,"tooltip":"Номер первого элемента","type":{"types":["number"],"digits":6,"fraction_figits":0}},"node1":{"synonym":"Узел 1","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":1}},"elm2":{"synonym":"Элем 2","multiline_mode":false,"tooltip":"Номер второго элемента","type":{"types":["number"],"digits":6,"fraction_figits":0}},"node2":{"synonym":"Узел 2","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":1}},"cnn":{"synonym":"Соединение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.cnns"],"is_ref":true}},"aperture_len":{"synonym":"Длина шва/проема","multiline_mode":false,"tooltip":"Для соединений с заполнениями: длина светового проема примыкающего элемента","type":{"types":["number"],"digits":8,"fraction_figits":1}}}},"glass_specification":{"name":"СпецификацияЗаполнений","synonym":"Спецификация заполнений (ORDGLP)","tooltip":"","fields":{"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"gno":{"synonym":"Порядок","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"inset":{"synonym":"Вставка","multiline_mode":false,"tooltip":"","choice_params":[{"name":"insert_type","path":["Заполнение","Элемент"]}],"choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}}}},"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}},"glasses":{"name":"Заполнения","synonym":"Заполнения","tooltip":"Стеклопакеты и сэндвичи - вычисляемая табличная часть (кеш) для упрощения отчетов","fields":{"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"№ элемента","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["string","cat.nom"],"str_len":50,"is_ref":true}},"formula":{"synonym":"Формула","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics","string"],"is_ref":true,"str_len":50}},"width":{"synonym":"Ширина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"height":{"synonym":"Высота, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"s":{"synonym":"Площадь, м ²","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"is_rectangular":{"synonym":"Прямоуг.","multiline_mode":false,"tooltip":"Прямоугольное заполнение","type":{"types":["boolean"]}},"is_sandwich":{"synonym":"Листовые","multiline_mode":false,"tooltip":"Непрозрачное заполнение - сэндвич","type":{"types":["boolean"]}},"thickness":{"synonym":"Толщина","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":2,"fraction_figits":0}},"coffer":{"synonym":"Камеры","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":1,"fraction_figits":0}}}},"specification":{"name":"Спецификация","synonym":"Спецификация","tooltip":"","fields":{"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"Номер элемента, если значение > 0, либо номер конструкции, если значение < 0","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["specification","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"qty":{"synonym":"Количество (шт)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":6}},"len":{"synonym":"Длина/высота, м","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":6}},"width":{"synonym":"Ширина, м","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":6}},"s":{"synonym":"Площадь, м²","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":6}},"alp1":{"synonym":"Угол 1, °","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"alp2":{"synonym":"Угол 2, °","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"totqty":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":4}},"totqty1":{"synonym":"Количество (+%)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":4}},"price":{"synonym":"Себест.план","multiline_mode":false,"tooltip":"Цена плановой себестоимости строки спецификации","type":{"types":["number"],"digits":15,"fraction_figits":4}},"amount":{"synonym":"Сумма себест.","multiline_mode":false,"tooltip":"Сумма плановой себестоимости строки спецификации","type":{"types":["number"],"digits":15,"fraction_figits":4}},"amount_marged":{"synonym":"Сумма с наценкой","multiline_mode":false,"tooltip":"Вклад строки спецификации в стоимость изделия для сценария КМАРЖ_В_СПЕЦИФИКАЦИИ","type":{"types":["number"],"digits":15,"fraction_figits":4}},"origin":{"synonym":"Происхождение","multiline_mode":false,"tooltip":"Ссылка на настройки построителя, из которых возникла строка спецификации","choice_groups_elm":"elm","type":{"types":["cat.inserts","number","cat.cnns","cat.furns"],"is_ref":true,"digits":6,"fraction_figits":0}},"changed":{"synonym":"Запись изменена","multiline_mode":false,"tooltip":"Запись изменена оператором (1) или добавлена корректировкой спецификации (-1)","type":{"types":["number"],"digits":1,"fraction_figits":0}},"dop":{"synonym":"Это акс. или визуализ.","multiline_mode":false,"tooltip":"Содержит (1) для строк аксессуаров и (-1) для строк с визуализацией","type":{"types":["number"],"digits":1,"fraction_figits":0}}}}},"cachable":"doc","form":{"obj":{"head":{" ":["name","owner","calc_order","product","leading_product","leading_elm"],"Дополнительно":["x","y","z","s","clr","weight","condition_products"]},"tabular_sections":{"specification":{"fields":["elm","nom","clr","characteristic","qty","len","width","s","alp1","alp2","totqty1","price","amount","amount_marged"],"headers":"Эл.,Номенклатура,Цвет,Характеристика,Колич.,Длина&nbsp;выс.,Ширина,Площадь,Угол1,Угол2,Колич++,Цена,Сумма,Сумма++","widths":"50,*,70,*,50,70,70,80,70,70,70,70,70,80","min_widths":"50,180,70,180,50,80,70,70,70,70,70,70,70,70","aligns":"","sortings":"na,na,na,na,na,na,na,na,na,na,na,na,na,na","types":"ron,ref,ref,ref,calck,calck,calck,calck,calck,calck,ron,ron,ron,ron"},"constructions":{"fields":["cnstr","parent","x","y","w","h","furn","clr_furn","direction","h_ruch"],"headers":"Констр.,Внешн.,Ширина,Высота,Ширина фурн.,Высота фурн.,Фурнитура,Цвет фурн.,Открывание,Высота ручки","widths":"50,50,70,70,70,70,*,80,80,70","min_widths":"50,50,70,70,70,70,120,80,80,70","aligns":"","sortings":"na,na,na,na,na,na,na,na,na,na","types":"ron,ron,ron,ron,ron,ron,ref,ro,ro,ro"},"coordinates":{"fields":["cnstr","parent","elm","elm_type","clr","inset","path_data","x1","y1","x2","y2","len","alp1","alp2","angle_hor","s","pos","orientation"],"headers":"Констр.,Внешн.,Эл.,Тип,Цвет,Вставка,Путь,x1,y1,x2,y2,Длина,Угол1,Угол2,Горизонт,Площадь,Положение,Ориентация","widths":"50,50,50,70,80,*,70,70,70,70,70,70,70,70,70,70,70,70","min_widths":"50,50,50,70,80,120,70,70,70,70,70,70,70,70,70,70,70,70","aligns":"","sortings":"na,na,na,na,na,na,na,na,na,na,na,na,na,na,na,na,na,na","types":"ron,ron,ron,ref,ref,ref,ro,ron,ron,ron,ron,ron,ron,ron,ron,ron,ro,ro"},"inserts":{"fields":["cnstr","inset","clr"],"headers":"Констр.,Вставка,Цвет","widths":"50,*,*","min_widths":"50,100,100","aligns":"","sortings":"na,na,na","types":"calck,ref,ref"},"cnn_elmnts":{"fields":["elm1","elm2","node1","node2","aperture_len","cnn"],"headers":"Эл1,Эл2,Узел1,Узел2,Длина,Соединение","widths":"50,50,50,50,160,*","min_widths":"50,50,50,50,100,200","aligns":"","sortings":"na,na,na,na,na,na","types":"calck,calck,ed,ed,calck,ref"},"params":{"fields":["cnstr","inset","param","value","hide"],"headers":"Констр.,Вставка,Параметр,Значение,Скрыть","widths":"50,80,*,*,50","min_widths":"50,70,200,200,50","aligns":"","sortings":"na,na,na,na,na","types":"ron,ro,ro,ro,ch"}},"tabular_sections_order":["specification","constructions","coordinates","inserts","cnn_elmnts","params"]}}},"price_groups":{"name":"ЦеновыеГруппы","splitted":true,"synonym":"Ценовые группы","illustration":"","obj_presentation":"Ценовая группа","list_presentation":"Ценовые группы","input_by_string":["name"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"definition":{"synonym":"Описание","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":1024}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"ram"},"nom_groups":{"name":"ГруппыФинансовогоУчетаНоменклатуры","splitted":true,"synonym":"Группы фин. учета номенклатуры","illustration":"Перечень номенклатурных групп для учета затрат и укрупненного планирования продаж, закупок и производства","obj_presentation":"Номенклатурная группа","list_presentation":"Номенклатурные группы","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"vat_rate":{"synonym":"Ставка НДС","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.vat_rates"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Раздел","multiline_mode":false,"tooltip":"","type":{"types":["cat.nom_groups"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram"},"insert_bind":{"name":"ПривязкиВставок","splitted":true,"synonym":"Привязки вставок","illustration":"Замена регистра \"Корректировка спецификации\"","obj_presentation":"Привязка вставки","list_presentation":"Привязки вставок","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"key":{"synonym":"Ключ","multiline_mode":false,"tooltip":"Если указано, привязка распространяется только на продукцию, параметры окружения которой, совпадают с параметрами ключа параметров","choice_groups_elm":"elm","type":{"types":["cat.parameters_keys"],"is_ref":true}},"zone":{"synonym":"Область","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"production":{"name":"Продукция","synonym":"Продукция","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["cat.production_params","cat.nom"],"is_ref":true}}}},"inserts":{"name":"Вставки","synonym":"Вставки","tooltip":"Дополнительные вставки в изделие и контуры","fields":{"inset":{"synonym":"Вставка","multiline_mode":false,"tooltip":"","choice_params":[{"name":"insert_type","path":["МоскитнаяСетка","Контур","Изделие","Водоотлив","Откос","Подоконник"]}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.inserts"],"is_ref":true}},"elm_type":{"synonym":"Контур","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":["Рама","Створка","Продукция"]}],"choice_groups_elm":"elm","type":{"types":["enm.elm_types"],"is_ref":true}}}}},"cachable":"ram"},"nonstandard_attributes":{"name":"ПризнакиНестандартов","splitted":true,"synonym":"Признаки нестандартов","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["name"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"crooked":{"synonym":"Кривой","multiline_mode":false,"tooltip":"Есть гнутые или наклонные элементы","type":{"types":["boolean"]}},"colored":{"synonym":"Цветной","multiline_mode":false,"tooltip":"Есть покраска или ламинация","type":{"types":["boolean"]}},"lay":{"synonym":"Раскладка","multiline_mode":false,"tooltip":"Содержит стеклопакеты с раскладкой","type":{"types":["boolean"]}},"made_to_order":{"synonym":"Заказной","multiline_mode":false,"tooltip":"Специальный материал под заказ","type":{"types":["boolean"]}},"packing":{"synonym":"Упаковка","multiline_mode":false,"tooltip":"Дополнительная услуга","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"doc"},"delivery_directions":{"name":"НаправленияДоставки","splitted":true,"synonym":"Направления доставки","illustration":"Объединяет районы, территории или подразделения продаж","obj_presentation":"Направление доставки","list_presentation":"Направления доставки","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"composition":{"name":"Состав","synonym":"Состав","tooltip":"","fields":{"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.delivery_areas","cat.divisions"],"is_ref":true}}}}},"cachable":"doc"}},"doc":{"registers_correction":{"name":"КорректировкаРегистров","splitted":true,"synonym":"Корректировка регистров","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"original_doc_type":{"synonym":"Тип исходного документа","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":255}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Пользователь, ответственный за  документ.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"Произвольный комментарий. ","type":{"types":["string"],"str_len":0}},"partner":{"synonym":"Контрагент","multiline_mode":false,"tooltip":"Для целей RLS","choice_groups_elm":"elm","type":{"types":["cat.partners"],"is_ref":true}}},"tabular_sections":{"registers_table":{"name":"ТаблицаРегистров","synonym":"Таблица регистров","tooltip":"","fields":{"Имя":{"synonym":"Имя","multiline_mode":false,"tooltip":"Имя регистра, которому скорректированы записи.","mandatory":true,"type":{"types":["string"],"str_len":255}}}}},"cachable":"remote"},"purchase":{"name":"ПоступлениеТоваровУслуг","splitted":true,"synonym":"Поступление товаров и услуг","illustration":"Документы отражают поступление товаров и услуг","obj_presentation":"Поступление товаров и услуг","list_presentation":"Поступление товаров и услуг","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Контрагент","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_supplier","path":true}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.partners"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.divisions"],"is_ref":true}},"warehouse":{"synonym":"Склад","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.stores"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"goods":{"name":"Товары","synonym":"Товары","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_params":[{"name":"Услуга","path":false},{"name":"set","path":false}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":3}},"unit":{"synonym":"Единица измерения","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["goods","nom"]}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom_units"],"is_ref":true}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"vat_rate":{"synonym":"Ставка НДС","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.vat_rates"],"is_ref":true}},"vat_amount":{"synonym":"Сумма НДС","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"trans":{"synonym":"Заказ резерв","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","partner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}}}},"services":{"name":"Услуги","synonym":"Услуги","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_params":[{"name":"Услуга","path":true},{"name":"set","path":false}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}},"content":{"synonym":"Содержание услуги, доп. сведения","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["string"],"str_len":0}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":3}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"vat_rate":{"synonym":"Ставка НДС","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.vat_rates"],"is_ref":true}},"vat_amount":{"synonym":"Сумма НДС","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"nom_group":{"synonym":"Номенклатурная группа","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom_groups"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.divisions"],"is_ref":true}},"cost_item":{"synonym":"Статья затрат","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":10}},"project":{"synonym":"Проект","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.projects"],"is_ref":true}},"buyers_order":{"synonym":"Заказ затрат","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}}}},"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}}},"cachable":"remote"},"work_centers_task":{"name":"НарядРЦ","splitted":true,"synonym":"Задание рабочему центру","illustration":"","obj_presentation":"Наряд","list_presentation":"Задания рабочим центрам","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"key":{"synonym":"Ключ","multiline_mode":false,"tooltip":"Участок или станок в подразделении производства","choice_groups_elm":"elm","type":{"types":["cat.parameters_keys"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"recipient":{"synonym":"Получатель","multiline_mode":false,"tooltip":"СГП или следующий передел","choice_groups_elm":"elm","type":{"types":["cat.parameters_keys"],"is_ref":true}},"ДеловаяОбрезь":{"synonym":"Деловая обрезь","multiline_mode":false,"tooltip":"0 - не учитывать\n1 - учитывать\n2 - только исходящую\n3 - только входящую","type":{"types":["number"],"digits":1,"fraction_figits":0}}},"tabular_sections":{"planning":{"name":"Планирование","synonym":"Планирование","tooltip":"","fields":{"obj":{"synonym":"Объект","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"specimen":{"synonym":"Экземпляр","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"performance":{"synonym":"Мощность","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}}}},"Потребность":{"name":"Потребность","synonym":"Потребность","tooltip":"","fields":{"production":{"synonym":"Продукция","multiline_mode":false,"tooltip":"Ссылка на характеристику продукции или объект планирования. Указывает, к чему относится материал текущей строки","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"specimen":{"synonym":"Экземпляр","multiline_mode":false,"tooltip":"Номер экземпляра","type":{"types":["number"],"digits":6,"fraction_figits":0}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"Номер элемента","type":{"types":["number"],"digits":6,"fraction_figits":0}},"НоменклатураСП":{"synonym":"Номенклатура СП","multiline_mode":false,"tooltip":"Номенклатура из спецификации продукции","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"ХарактеристикаСП":{"synonym":"Характеристика СП","multiline_mode":false,"tooltip":"Характеристика из спецификации продукции","choice_links":[{"name":["selection","owner"],"path":["Потребность","НоменклатураСП"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"Номенклатура потребности. По умолчанию, совпадает с номенклатурой спецификации, но может содержать аналог","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"Характеристика потребности. По умолчанию, совпадает с характеристикой спецификации, но может содержать аналог","choice_links":[{"name":["selection","owner"],"path":["Потребность","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"ОстатокПотребности":{"synonym":"Остаток потребности","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"Закрыть":{"synonym":"Закрыть","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"ИзОбрези":{"synonym":"Из обрези","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":4}}}},"Обрезь":{"name":"Обрезь","synonym":"Обрезь","tooltip":"Приход и расход деловой обрези","fields":{"ВидДвижения":{"synonym":"Вид движения","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.ВидыДвиженийПриходРасход"],"is_ref":true}},"Хлыст":{"synonym":"№ хлыста","multiline_mode":false,"tooltip":"№ листа (хлыста, заготовки)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"НомерПары":{"synonym":"№ пары","multiline_mode":false,"tooltip":"№ парной заготовки","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["Обрезь","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"len":{"synonym":"Длина","multiline_mode":false,"tooltip":"длина в мм","type":{"types":["number"],"digits":8,"fraction_figits":1}},"width":{"synonym":"Ширина","multiline_mode":false,"tooltip":"ширина в мм","type":{"types":["number"],"digits":8,"fraction_figits":1}},"КоординатаX":{"synonym":"Координата X","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"КоординатаY":{"synonym":"Координата Y","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"Количество в единицах хранения","type":{"types":["number"],"digits":8,"fraction_figits":1}},"cell":{"synonym":"Ячейка","multiline_mode":false,"tooltip":"№ ячейки (откуда брать заготовку или куда помещать деловой обрезок)","type":{"types":["string"],"str_len":9}}}},"Раскрой":{"name":"Раскрой","synonym":"Раскрой","tooltip":"","fields":{"production":{"synonym":"Продукция","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"specimen":{"synonym":"Экземпляр","multiline_mode":false,"tooltip":"Номер экземпляра","type":{"types":["number"],"digits":6,"fraction_figits":0}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"Номер элемента","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["Раскрой","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"len":{"synonym":"Длина","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"width":{"synonym":"Ширина","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"Хлыст":{"synonym":"№ хлыста","multiline_mode":false,"tooltip":"№ листа (заготовки), на котором размещать изделие","type":{"types":["number"],"digits":6,"fraction_figits":0}},"НомерПары":{"synonym":"№ пары","multiline_mode":false,"tooltip":"№ парного изделия","type":{"types":["number"],"digits":6,"fraction_figits":0}},"orientation":{"synonym":"Ориентация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.orientations"],"is_ref":true}},"elm_type":{"synonym":"Тип элемента","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.elm_types"],"is_ref":true}},"Угол1":{"synonym":"Угол1","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":2}},"Угол2":{"synonym":"Угол2","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":2}},"cell":{"synonym":"Ячейка","multiline_mode":false,"tooltip":"№ ячейки (куда помещать изделие)","type":{"types":["string"],"str_len":9}},"Партия":{"synonym":"Партия","multiline_mode":false,"tooltip":"Партия (такт, группа раскроя)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"КоординатаX":{"synonym":"Координата X","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"КоординатаY":{"synonym":"Координата Y","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"Поворот":{"synonym":"Поворот","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"ЭтоНестандарт":{"synonym":"Это нестандарт","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}}}},"cachable":"remote"},"calc_order":{"name":"Расчет","splitted":true,"synonym":"Расчет-заказ","illustration":"Аналог заказа покупателя типовых конфигураций.\nСодержит инструменты для формирования спецификаций и подготовки данных производства и диспетчеризации","obj_presentation":"Расчет-заказ","list_presentation":"Расчеты-заказы","input_by_string":["number_doc","number_internal"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"number_internal":{"synonym":"Номер внутр","multiline_mode":false,"tooltip":"Дополнительный (внутренний) номер документа","type":{"types":["string"],"str_len":20}},"project":{"synonym":"Проект","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.projects"],"is_ref":true}},"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_folder","path":false}],"choice_groups_elm":"elm","type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Контрагент","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_buyer","path":true},{"name":"is_folder","path":false}],"choice_groups_elm":"elm","type":{"types":["cat.partners"],"is_ref":true}},"client_of_dealer":{"synonym":"Клиент дилера","multiline_mode":false,"tooltip":"Наименование конечного клиента в дилерских заказах","type":{"types":["string"],"str_len":255}},"contract":{"synonym":"Договор контрагента","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["cat.contracts"],"is_ref":true}},"bank_account":{"synonym":"Банковский счет","multiline_mode":false,"tooltip":"Банковский счет организации, на который планируется поступление денежных средств","choice_links":[{"name":["selection","owner"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["cat.organization_bank_accounts"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"Дополнительная информация","type":{"types":["string"],"str_len":255}},"manager":{"synonym":"Менеджер","multiline_mode":false,"tooltip":"Менеджер, оформивший заказ","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"leading_manager":{"synonym":"Ведущий менеджер","multiline_mode":false,"tooltip":"Куратор, ведущий менеджер","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"department":{"synonym":"Офис продаж","multiline_mode":false,"tooltip":"Подразделение продаж","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.divisions"],"is_ref":true}},"warehouse":{"synonym":"Склад","multiline_mode":false,"tooltip":"Склад отгрузки товаров по заказу","type":{"types":["cat.stores"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount_operation":{"synonym":"Сумма упр","multiline_mode":false,"tooltip":"Сумма в валюте управленческого учета","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount_internal":{"synonym":"Сумма внутр.","multiline_mode":false,"tooltip":"Сумма внутренней реализации","type":{"types":["number"],"digits":15,"fraction_figits":2}},"accessory_characteristic":{"synonym":"Характеристика аксессуаров","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"sys_profile":{"synonym":"Профиль","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":255}},"sys_furn":{"synonym":"Фурнитура","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":255}},"phone":{"synonym":"Телефон","multiline_mode":false,"tooltip":"Телефон по адресу доставки","type":{"types":["string"],"str_len":100}},"delivery_area":{"synonym":"Район","multiline_mode":false,"tooltip":"Район (зона, направление) доставки для группировки при планировании и оптимизации маршрута геокодером","choice_groups_elm":"elm","type":{"types":["cat.delivery_areas"],"is_ref":true}},"shipping_address":{"synonym":"Адрес доставки","multiline_mode":false,"tooltip":"Адрес доставки изделий заказа","type":{"types":["string"],"str_len":255}},"coordinates":{"synonym":"Координаты","multiline_mode":false,"tooltip":"Гео - координаты адреса доставки","type":{"types":["string"],"str_len":50}},"address_fields":{"synonym":"Значения полей адреса","multiline_mode":false,"tooltip":"Служебный реквизит","type":{"types":["string"],"str_len":0}},"difficult":{"synonym":"Сложный","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"vat_consider":{"synonym":"Учитывать НДС","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"vat_included":{"synonym":"Сумма включает НДС","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"settlements_course":{"synonym":"Курс взаиморасчетов","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"settlements_multiplicity":{"synonym":"Кратность взаиморасчетов","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":0}},"extra_charge_external":{"synonym":"Наценка внешн.","multiline_mode":false,"tooltip":"Наценка внешней (дилерской) продажи по отношению к цене производителя, %.","type":{"types":["number"],"digits":5,"fraction_figits":2}},"obj_delivery_state":{"synonym":"Этап согласования","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":["Подтвержден","Отклонен","Архив","Шаблон","Черновик"]}],"choice_groups_elm":"elm","type":{"types":["enm.obj_delivery_states"],"is_ref":true}},"category":{"synonym":"Категория заказа","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.order_categories"],"is_ref":true}}},"tabular_sections":{"production":{"name":"Продукция","synonym":"Продукция","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["production","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":255}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"unit":{"synonym":"Ед.","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["production","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.nom_units"],"is_ref":true}},"qty":{"synonym":"Количество, шт","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":6}},"len":{"synonym":"Длина/высота, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":6}},"width":{"synonym":"Ширина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":6}},"s":{"synonym":"Площадь, м²","multiline_mode":false,"tooltip":"Площадь изделия","type":{"types":["number"],"digits":10,"fraction_figits":6}},"first_cost":{"synonym":"Себест. ед.","multiline_mode":false,"tooltip":"Плановая себестоимость единицы продукции","type":{"types":["number"],"digits":15,"fraction_figits":4}},"marginality":{"synonym":"К. марж","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":3}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"discount_percent":{"synonym":"Скидка %","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"discount_percent_internal":{"synonym":"Скидка внутр. %","multiline_mode":false,"tooltip":"Процент скидки для внутренней перепродажи (холдинг) или внешней (дилеры)","type":{"types":["number"],"digits":5,"fraction_figits":2}},"discount":{"synonym":"Скидка","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"margin":{"synonym":"Маржа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"price_internal":{"synonym":"Цена внутр.","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount_internal":{"synonym":"Сумма внутр.","multiline_mode":false,"tooltip":"Сумма внутренней реализации (холдинг) или внешней (от дилера конечному клиенту)","type":{"types":["number"],"digits":15,"fraction_figits":2}},"vat_rate":{"synonym":"Ставка НДС","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.vat_rates"],"is_ref":true}},"vat_amount":{"synonym":"Сумма НДС","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"ordn":{"synonym":"Ведущая продукция","multiline_mode":false,"tooltip":"ссылка на продукциию, к которой относится материал","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"changed":{"synonym":"Запись изменена","multiline_mode":false,"tooltip":"Запись изменена оператором (1, -2) или добавлена корректировкой спецификации (-1)","type":{"types":["number"],"digits":1,"fraction_figits":0}}}},"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}},"contact_information":{"name":"КонтактнаяИнформация","synonym":"Контактная информация","tooltip":"Хранение контактной информации (адреса, веб-страницы, номера телефонов и др.)","fields":{"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"Тип контактной информации (телефон, адрес и т.п.)","choice_groups_elm":"elm","type":{"types":["enm.contact_information_types"],"is_ref":true}},"kind":{"synonym":"Вид","multiline_mode":false,"tooltip":"Вид контактной информации","choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}},"presentation":{"synonym":"Представление","multiline_mode":false,"tooltip":"Представление контактной информации для отображения в формах","type":{"types":["string"],"str_len":500}},"values_fields":{"synonym":"Значения полей","multiline_mode":false,"tooltip":"Служебное поле, для хранения контактной информации","type":{"types":["string"],"str_len":0}},"country":{"synonym":"Страна","multiline_mode":false,"tooltip":"Страна (заполняется для адреса)","type":{"types":["string"],"str_len":100}},"region":{"synonym":"Регион","multiline_mode":false,"tooltip":"Регион (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"city":{"synonym":"Город","multiline_mode":false,"tooltip":"Город (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"email_address":{"synonym":"Адрес ЭП","multiline_mode":false,"tooltip":"Адрес электронной почты","type":{"types":["string"],"str_len":100}},"server_domain_name":{"synonym":"Доменное имя сервера","multiline_mode":false,"tooltip":"Доменное имя сервера электронной почты или веб-страницы","type":{"types":["string"],"str_len":100}},"phone_number":{"synonym":"Номер телефона","multiline_mode":false,"tooltip":"Полный номер телефона","type":{"types":["string"],"str_len":20}},"phone_without_codes":{"synonym":"Номер телефона без кодов","multiline_mode":false,"tooltip":"Номер телефона без кодов и добавочного номера","type":{"types":["string"],"str_len":20}}}},"planning":{"name":"Планирование","synonym":"Планирование","tooltip":"","fields":{"phase":{"synonym":"Фаза","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.planning_phases"],"is_ref":true}},"date":{"synonym":"Дата","multiline_mode":false,"tooltip":"Плановая дата доставки или готовности","type":{"types":["date"],"date_part":"date"}},"key":{"synonym":"Ключ","multiline_mode":false,"tooltip":"Ключ по графику доставок","choice_groups_elm":"elm","type":{"types":["cat.parameters_keys"],"is_ref":true}},"obj":{"synonym":"Объект","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","calc_order"],"path":["ref"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"specimen":{"synonym":"Экземпляр","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"performance":{"synonym":"Мощность","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}}}}},"cachable":"doc","form":{"selection":{"fields":["posted","date","number_doc","number_internal","partner","client_of_dealer","doc_amount","obj_delivery_state","sys_profile","note"],"cols":[{"id":"date","width":"160","type":"ro","align":"left","sort":"server","caption":"Дата"},{"id":"number_doc","width":"120","type":"ro","align":"left","sort":"na","caption":"№"},{"id":"number_internal","width":"100","type":"ro","align":"left","sort":"na","caption":"№ внутр"},{"id":"partner","width":"170","type":"ro","align":"left","sort":"na","caption":"Контрагент"},{"id":"client_of_dealer","width":"170","type":"ro","align":"left","sort":"na","caption":"Клиент"},{"id":"doc_amount","width":"120","type":"ron","align":"right","sort":"na","caption":"Сумма"},{"id":"obj_delivery_state","width":"120","type":"ro","align":"left","sort":"na","caption":"Статус"},{"id":"note","width":"*","type":"ro","align":"left","sort":"na","caption":"Комментарий"},{"id":"sys_profile","width":"120","type":"ro","align":"left","sort":"na","caption":"Профиль"}]},"obj":{"head":{" ":["name","owner","calc_order","product","leading_product","leading_elm"]},"tabular_sections":{"production":{"fields":["row","nom","characteristic","note","qty","len","width","s","quantity","unit","discount_percent","price","amount","discount_percent_internal","price_internal","amount_internal"],"aligns":"center,left,left,left,right,right,right,right,right,left,right,right,right,right,right,right","sortings":"na,na,na,na,na,na,na,na,na,na,na,na,na,na,na,na","types":""},"planning":{"fields":["obj","elm","specimen","key","date","performance"],"aligns":"left,right,right,left,left,right","sortings":"na,na,na,na,na,na","headers":"Продукция,Элемент,Экземпляр,Ключ,Дата,Мощность","widths":"*,70,70,*,120,90","min_widths":"180,60,60,180,110,80","types":"ref,calck,calck,ref,dhxCalendar,calck"}},"tabular_sections_order":["production","planning"]}}},"credit_card_order":{"name":"ОплатаОтПокупателяПлатежнойКартой","splitted":true,"synonym":"Оплата от покупателя платежной картой","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Контрагент, подотчетник, касса ККМ","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.partners"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.divisions"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Пользователь, ответственный за  документ.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"payment_details":{"name":"РасшифровкаПлатежа","synonym":"Расшифровка платежа","tooltip":"","fields":{"cash_flow_article":{"synonym":"Статья движения денежных средств","multiline_mode":false,"tooltip":"Статья движения денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.cash_flow_articles"],"is_ref":true}},"trans":{"synonym":"Объект расчетов","multiline_mode":false,"tooltip":"Документ расчетов с партнером","choice_links":[{"name":["selection","partner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order","cat.contracts"],"is_ref":true}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"Сумма платежа","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":2}}}},"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}}},"cachable":"remote","form":{"selection":{"fields":["posted","date","number_doc","organization","partner","doc_amount","note"],"cols":[{"id":"date","width":"160","type":"ro","align":"left","sort":"server","caption":"Дата"},{"id":"number_doc","width":"120","type":"ro","align":"left","sort":"na","caption":"№"},{"id":"organization","width":"*","type":"ro","align":"left","sort":"na","caption":"Организация"},{"id":"partner","width":"*","type":"ro","align":"left","sort":"na","caption":"Контрагент"},{"id":"doc_amount","width":"160","type":"ro","align":"left","sort":"na","caption":"Сумма"},{"id":"note","width":"*","type":"ro","align":"left","sort":"na","caption":"Комментарий"}]},"obj":{"head":{" ":[{"id":"number_doc","path":"o.number_doc","type":"ro","synonym":"Номер"},"date","organization","partner","department","responsible","note",{"id":"doc_amount","path":"o.doc_amount","type":"ro","synonym":"Сумма документа"}]},"tabular_sections":{"payment_details":{"fields":["row","cash_flow_article","trans","amount"],"headers":"№,Статья,Заказ,Сумма","aligns":"center,left,left,right","sortings":"na,na,na,na","types":"cntr,ref,ref,calck","widths":"50,*,*,120","min_widths":"40,140,140,80"}}}}},"work_centers_performance":{"name":"МощностиРЦ","splitted":true,"synonym":"Мощности рабочих центров","illustration":"","obj_presentation":"Мощность рабочих центров","list_presentation":"Мощности рабочих центров","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"start_date":{"synonym":"Дата начала","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"expiration_date":{"synonym":"Дата окончания","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"planning":{"name":"Планирование","synonym":"Планирование","tooltip":"","fields":{"date":{"synonym":"Дата","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"key":{"synonym":"Ключ","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.parameters_keys"],"is_ref":true}},"performance":{"synonym":"Мощность","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}}}}},"cachable":"remote"},"debit_bank_order":{"name":"ПлатежноеПоручениеВходящее","splitted":true,"synonym":"Платежное поручение входящее","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Плательщик","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.partners"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.divisions"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Пользователь, ответственный за  документ.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"payment_details":{"name":"РасшифровкаПлатежа","synonym":"Расшифровка платежа","tooltip":"","fields":{"cash_flow_article":{"synonym":"Статья движения денежных средств","multiline_mode":false,"tooltip":"Статья движения денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.cash_flow_articles"],"is_ref":true}},"trans":{"synonym":"Объект расчетов","multiline_mode":false,"tooltip":"Документ расчетов с партнером","choice_links":[{"name":["selection","partner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order","cat.contracts"],"is_ref":true}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"Сумма платежа","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":2}}}},"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}}},"cachable":"remote","form":{"selection":{"fields":["posted","date","number_doc","organization","partner","doc_amount","note"],"cols":[{"id":"date","width":"160","type":"ro","align":"left","sort":"server","caption":"Дата"},{"id":"number_doc","width":"120","type":"ro","align":"left","sort":"na","caption":"№"},{"id":"organization","width":"*","type":"ro","align":"left","sort":"na","caption":"Организация"},{"id":"partner","width":"*","type":"ro","align":"left","sort":"na","caption":"Контрагент"},{"id":"doc_amount","width":"160","type":"ro","align":"left","sort":"na","caption":"Сумма"},{"id":"note","width":"*","type":"ro","align":"left","sort":"na","caption":"Комментарий"}]},"obj":{"head":{" ":[{"id":"number_doc","path":"o.number_doc","type":"ro","synonym":"Номер"},"date","organization","partner","department","responsible","note",{"id":"doc_amount","path":"o.doc_amount","type":"ro","synonym":"Сумма документа"}]},"tabular_sections":{"payment_details":{"fields":["row","cash_flow_article","trans","amount"],"headers":"№,Статья,Заказ,Сумма","aligns":"center,left,left,right","sortings":"na,na,na,na","types":"cntr,ref,ref,calck","widths":"50,*,*,120","min_widths":"40,140,140,80"}}}}},"credit_bank_order":{"name":"ПлатежноеПоручениеИсходящее","splitted":true,"synonym":"Платежное поручение исходящее","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Получатель","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.partners"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.divisions"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Пользователь, ответственный за  документ.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"payment_details":{"name":"РасшифровкаПлатежа","synonym":"Расшифровка платежа","tooltip":"","fields":{"cash_flow_article":{"synonym":"Статья движения денежных средств","multiline_mode":false,"tooltip":"Статья движения денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.cash_flow_articles"],"is_ref":true}},"trans":{"synonym":"Объект расчетов","multiline_mode":false,"tooltip":"Документ расчетов с партнером","choice_links":[{"name":["selection","partner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order","cat.contracts"],"is_ref":true}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"Сумма платежа","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":2}}}},"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}}},"cachable":"remote"},"debit_cash_order":{"name":"ПриходныйКассовыйОрдер","splitted":true,"synonym":"Приходный кассовый ордер","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Контрагент, подотчетник, касса ККМ","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.individuals","cat.partners"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.divisions"],"is_ref":true}},"cashbox":{"synonym":"Касса","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["cat.cashboxes"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Пользователь, ответственный за  документ.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"payment_details":{"name":"РасшифровкаПлатежа","synonym":"Расшифровка платежа","tooltip":"","fields":{"cash_flow_article":{"synonym":"Статья движения денежных средств","multiline_mode":false,"tooltip":"Статья движения денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.cash_flow_articles"],"is_ref":true}},"trans":{"synonym":"Объект расчетов","multiline_mode":false,"tooltip":"Документ расчетов с партнером","choice_links":[{"name":["selection","partner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order","cat.contracts"],"is_ref":true}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"Сумма платежа","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":2}}}},"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}}},"cachable":"remote","form":{"selection":{"fields":["posted","date","number_doc","organization","partner","doc_amount","note"],"cols":[{"id":"date","width":"160","type":"ro","align":"left","sort":"server","caption":"Дата"},{"id":"number_doc","width":"120","type":"ro","align":"left","sort":"na","caption":"№"},{"id":"organization","width":"*","type":"ro","align":"left","sort":"na","caption":"Организация"},{"id":"partner","width":"*","type":"ro","align":"left","sort":"na","caption":"Контрагент"},{"id":"doc_amount","width":"160","type":"ro","align":"left","sort":"na","caption":"Сумма"},{"id":"note","width":"*","type":"ro","align":"left","sort":"na","caption":"Комментарий"}]},"obj":{"head":{" ":[{"id":"number_doc","path":"o.number_doc","type":"ro","synonym":"Номер"},"date","organization","partner","department","cashbox","responsible","note",{"id":"doc_amount","path":"o.doc_amount","type":"ro","synonym":"Сумма документа"}]},"tabular_sections":{"payment_details":{"fields":["row","cash_flow_article","trans","amount"],"headers":"№,Статья,Заказ,Сумма","aligns":"center,left,left,right","sortings":"na,na,na,na","types":"cntr,ref,ref,calck","widths":"50,*,*,120","min_widths":"40,140,140,80"}}}}},"credit_cash_order":{"name":"РасходныйКассовыйОрдер","splitted":true,"synonym":"Расходный кассовый ордер","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Контрагент, подотчетник, Касса ККМ","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.individuals","cat.partners"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.divisions"],"is_ref":true}},"cashbox":{"synonym":"Касса","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["cat.cashboxes"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Пользователь, ответственный за  документ.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"payment_details":{"name":"РасшифровкаПлатежа","synonym":"Расшифровка платежа","tooltip":"","fields":{"cash_flow_article":{"synonym":"Статья движения денежных средств","multiline_mode":false,"tooltip":"Статья движения денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.cash_flow_articles"],"is_ref":true}},"trans":{"synonym":"Объект расчетов","multiline_mode":false,"tooltip":"Документ расчетов с партнером","choice_links":[{"name":["selection","partner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order","cat.contracts"],"is_ref":true}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"Сумма платежа","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":2}}}},"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}}},"cachable":"remote"},"selling":{"name":"РеализацияТоваровУслуг","splitted":true,"synonym":"Реализация товаров и услуг","illustration":"Документы отражают факт реализации (отгрузки) товаров","obj_presentation":"Реализация товаров и услуг","list_presentation":"Реализация товаров и услуг","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Контрагент","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_buyer","path":true}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.partners"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.divisions"],"is_ref":true}},"warehouse":{"synonym":"Склад","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.stores"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Пользователь, ответственный за  документ.","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"goods":{"name":"Товары","synonym":"Товары","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_params":[{"name":"Услуга","path":false},{"name":"set","path":false}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":3}},"unit":{"synonym":"Единица измерения","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["goods","nom"]}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom_units"],"is_ref":true}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"discount_percent":{"synonym":"Процент скидки или наценки","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"vat_rate":{"synonym":"Ставка НДС","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.vat_rates"],"is_ref":true}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"vat_amount":{"synonym":"Сумма НДС","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"trans":{"synonym":"Сделка","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","partner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}}}},"services":{"name":"Услуги","synonym":"Услуги","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_params":[{"name":"Услуга","path":true},{"name":"set","path":false}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}},"content":{"synonym":"Содержание услуги, доп. сведения","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["string"],"str_len":0}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":3}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"discount_percent":{"synonym":"Процент скидки или наценки","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"vat_rate":{"synonym":"Ставка НДС","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.vat_rates"],"is_ref":true}},"vat_amount":{"synonym":"Сумма НДС","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"trans":{"synonym":"Сделка","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}}}},"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}}},"cachable":"remote","form":{"selection":{"fields":["posted","date","number_doc","organization","partner","doc_amount","note"],"cols":[{"id":"date","width":"160","type":"ro","align":"left","sort":"server","caption":"Дата"},{"id":"number_doc","width":"120","type":"ro","align":"left","sort":"na","caption":"№"},{"id":"organization","width":"*","type":"ro","align":"left","sort":"na","caption":"Организация"},{"id":"partner","width":"*","type":"ro","align":"left","sort":"na","caption":"Контрагент"},{"id":"doc_amount","width":"160","type":"ro","align":"left","sort":"na","caption":"Сумма"},{"id":"note","width":"*","type":"ro","align":"left","sort":"na","caption":"Комментарий"}]},"obj":{"head":{" ":[{"id":"number_doc","path":"o.number_doc","type":"ro","synonym":"Номер"},"date","organization","partner","department","warehouse","responsible","note",{"id":"doc_amount","path":"o.doc_amount","type":"ro","synonym":"Сумма документа"}]},"tabular_sections":{"goods":{"fields":["row","nom","quantity","unit","price","discount_percent","vat_rate","amount","vat_amount","trans"],"headers":"№,Номенклатура,Количество,Ед.,Цена,Скидка,Ставка НДС,Сумма,Сумма НДС,Заказ","aligns":"center,left,right,left,right,right,left,right,right,left","sortings":"na,na,na,na,na,na,na,na,na,na","types":"cntr,ref,calck,ref,calck,calck,ref,calck,ron,ref","widths":"50,*,100,100,100,100,100,100,100,*","min_widths":"40,160,80,80,80,80,80,80,80,80,160"}}}}},"nom_prices_setup":{"name":"УстановкаЦенНоменклатуры","splitted":true,"synonym":"Установка цен номенклатуры","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"price_type":{"synonym":"Тип Цен","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom_prices_types"],"is_ref":true}},"currency":{"synonym":"Валюта","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.currencies"],"is_ref":true}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"goods":{"name":"Товары","synonym":"Товары","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}},"nom_characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["goods","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"price_type":{"synonym":"Тип Цен","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom_prices_types"],"is_ref":true}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":4}}}}},"cachable":"doc","form":{"selection":{"fields":["posted","date","number_doc","price_type","currency","note"],"cols":[{"id":"date","width":"160","type":"ro","align":"left","sort":"server","caption":"Дата"},{"id":"number_doc","width":"120","type":"ro","align":"left","sort":"na","caption":"№"},{"id":"price_type","width":"*","type":"ro","align":"left","sort":"na","caption":"Тип цен"},{"id":"currency","width":"120","type":"ro","align":"left","sort":"na","caption":"Валюта"},{"id":"note","width":"*","type":"ro","align":"left","sort":"na","caption":"Комментарий"}]},"obj":{"head":{" ":[{"id":"number_doc","path":"o.number_doc","type":"ro","synonym":"Номер"},"date","responsible","note","price_type","currency"]},"tabular_sections":{"goods":{"fields":["row","nom","nom_characteristic","price_type","price"],"headers":"№,Номенклатура,Характеристика,Тип цен,Цена","aligns":"center,left,left,left,right","sortings":"na,na,na,na,na","types":"cntr,ref,ref,ref,calck","widths":"50,*,*,80,90","min_widths":"40,200,140,0,80"}}}}},"planning_event":{"name":"СобытиеПланирования","splitted":true,"synonym":"Событие планирования","illustration":"","obj_presentation":"Событие планирования","list_presentation":"События планирования","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"phase":{"synonym":"Фаза","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.planning_phases"],"is_ref":true}},"key":{"synonym":"Ключ","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.parameters_keys"],"is_ref":true}},"recipient":{"synonym":"Получатель","multiline_mode":false,"tooltip":"СГП или следующий передел","choice_groups_elm":"elm","type":{"types":["cat.parameters_keys"],"is_ref":true}},"calc_order":{"synonym":"Расчет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}},"partner":{"synonym":"Контрагент","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_folder","path":false}],"choice_groups_elm":"elm","type":{"types":["cat.partners"],"is_ref":true}},"project":{"synonym":"Проект","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.projects"],"is_ref":true}},"Основание":{"synonym":"Основание","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["doc.planning_event"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"executors":{"name":"Исполнители","synonym":"Исполнители","tooltip":"","fields":{"executor":{"synonym":"Исполнитель","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.individuals","cat.partners"],"is_ref":true}},"coefficient":{"synonym":"Коэффициент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}}}},"planning":{"name":"Планирование","synonym":"Планирование","tooltip":"","fields":{"obj":{"synonym":"Объект","multiline_mode":false,"tooltip":"Если указано - изделие, если пусто - Расчет из шапки","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"specimen":{"synonym":"Экземпляр","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"performance":{"synonym":"Мощность","multiline_mode":false,"tooltip":"Трудоемкость или время операции","type":{"types":["number"],"digits":8,"fraction_figits":1}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"Номенклатура работы или услуги события","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"begin_time":{"synonym":"Время начала","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date_time"}},"end_time":{"synonym":"Время окончания","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date_time"}}}}},"cachable":"remote"}},"ireg":{"log":{"name":"log","note":"","synonym":"Журнал событий","dimensions":{"date":{"synonym":"Дата","multiline_mode":false,"tooltip":"Время события","type":{"types":["number"],"digits":15,"fraction_figits":0}},"sequence":{"synonym":"Порядок","multiline_mode":false,"tooltip":"Порядок следования","type":{"types":["number"],"digits":6,"fraction_figits":0}}},"resources":{"class":{"synonym":"Класс","multiline_mode":false,"tooltip":"Класс события","type":{"types":["string"],"str_len":100}},"note":{"synonym":"Комментарий","multiline_mode":true,"tooltip":"Текст события","type":{"types":["string"],"str_len":0}},"obj":{"synonym":"Объект","multiline_mode":true,"tooltip":"Объект, к которому относится событие","type":{"types":["string"],"str_len":0}}}},"buyers_order_states":{"name":"СостоянияЗаказовКлиентов","splitted":true,"note":"","synonym":"Состояния заказов клиентов","dimensions":{"invoice":{"synonym":"Заказ","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["doc.calc_order"],"is_ref":true}}},"resources":{"state":{"synonym":"Состояние","multiline_mode":false,"tooltip":"Текущее состояние заказа","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.buyers_order_states"],"is_ref":true}},"event_date":{"synonym":"Дата события","multiline_mode":false,"tooltip":"Дата, на которую заказ считается просроченным","type":{"types":["date"],"date_part":"date"}}},"attributes":{"СуммаОплаты":{"synonym":"Сумма оплаты","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"ПроцентОплаты":{"synonym":"Процент оплаты","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"СуммаОтгрузки":{"synonym":"Сумма отгрузки заказа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"ПроцентОтгрузки":{"synonym":"Процент отгрузки заказа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"СуммаДолга":{"synonym":"Сумма долга","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"ПроцентДолга":{"synonym":"Процент долга","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"ЕстьРасхожденияОрдерНакладная":{"synonym":"Есть расхождения ордер накладная","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}},"cachable":"doc"},"currency_courses":{"name":"КурсыВалют","splitted":true,"note":"","synonym":"Курсы валют","dimensions":{"currency":{"synonym":"Валюта","multiline_mode":false,"tooltip":"Ссылка на валюты","choice_groups_elm":"elm","type":{"types":["cat.currencies"],"is_ref":true}},"period":{"synonym":"Дата курса","multiline_mode":false,"tooltip":"Дата курса валюты","mandatory":true,"type":{"types":["date"],"date_part":"date"}}},"resources":{"course":{"synonym":"Курс","multiline_mode":false,"tooltip":"Курс валюты","mandatory":true,"type":{"types":["number"],"digits":10,"fraction_figits":4}},"multiplicity":{"synonym":"Кратность","multiline_mode":false,"tooltip":"Кратность валюты","mandatory":true,"type":{"types":["number"],"digits":10,"fraction_figits":0}}},"attributes":{},"cachable":"ram","form":{"selection":{"fields":["cat_currencies.name as currency","period","course"],"cols":[{"id":"currency","width":"*","type":"ro","align":"left","sort":"server","caption":"Валюта"},{"id":"period","width":"*","type":"ro","align":"left","sort":"server","caption":"Дата курса"},{"id":"course","width":"*","type":"ron","align":"right","sort":"server","caption":"Курс"}]}}},"margin_coefficients":{"name":"пзМаржинальныеКоэффициентыИСкидки","splitted":true,"note":"","synonym":"Маржинальные коэффициенты","dimensions":{"price_group":{"synonym":"Ценовая группа","multiline_mode":false,"tooltip":"Если указано, правило распространяется только на продукцию данной ценовой группы","choice_groups_elm":"elm","type":{"types":["cat.price_groups"],"is_ref":true}},"key":{"synonym":"Ключ","multiline_mode":false,"tooltip":"Если указано, правило распространяется только на продукцию, параметры окружения которой, совпадают с параметрами ключа параметров","choice_groups_elm":"elm","type":{"types":["cat.parameters_keys"],"is_ref":true}},"condition_formula":{"synonym":"Формула условия","multiline_mode":false,"tooltip":"В этом поле можно указать дополнительное условие на языке 1С. Например, применять строку только к аркам или непрямоугольным изделиям","choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}}},"resources":{"marginality":{"synonym":"К марж","multiline_mode":false,"tooltip":"На этот коэффициент будет умножена плановая себестоимость для получения отпускной цены. Имеет смысл, если \"тип цен прайс\" не указан и константа КМАРЖ_В_СПЕЦИФИКАЦИИ сброшена","type":{"types":["number"],"digits":10,"fraction_figits":4}},"marginality_min":{"synonym":"К марж мин.","multiline_mode":false,"tooltip":"Не позволяет установить в документе расчет скидку, при которой маржинальность строки опустится ниже указанного значения","type":{"types":["number"],"digits":10,"fraction_figits":4}},"marginality_internal":{"synonym":"К марж внутр.","multiline_mode":false,"tooltip":"Маржинальный коэффициент внутренней продажи","type":{"types":["number"],"digits":10,"fraction_figits":4}},"price_type_first_cost":{"synonym":"Тип цен плановой себестоимости","multiline_mode":false,"tooltip":"Этот тип цен будет использован для расчета плановой себестоимости продукции","choice_groups_elm":"elm","type":{"types":["cat.nom_prices_types"],"is_ref":true}},"price_type_sale":{"synonym":"Тип прайсовых цен","multiline_mode":false,"tooltip":"Этот тип цен будет использован для расчета отпускной цены продукции. Если указано, значения КМарж и КМарж.мин игнорируются","choice_groups_elm":"elm","type":{"types":["cat.nom_prices_types"],"is_ref":true}},"price_type_internal":{"synonym":"Тип цен внутренней продажи","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom_prices_types"],"is_ref":true}},"formula":{"synonym":"Формула","multiline_mode":false,"tooltip":"В этом поле можно указать произвольный код на языке 1С для расчета (корректировки) себестоимости","choice_params":[{"name":"parent","path":["3220e251-ffcd-11e5-8303-e67fda7f6b46","3220e25b-ffcd-11e5-8303-e67fda7f6b46"]}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"sale_formula":{"synonym":"Формула продажа","multiline_mode":false,"tooltip":"В этом поле можно указать произвольный код на языке 1С для расчета (корректировки) цены продажи","choice_params":[{"name":"parent","path":["3220e251-ffcd-11e5-8303-e67fda7f6b46","3220e25b-ffcd-11e5-8303-e67fda7f6b46"]}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"internal_formula":{"synonym":"Формула внутр","multiline_mode":false,"tooltip":"В этом поле можно указать произвольный код на языке 1С для расчета цены внутренней продажи или заказа поставщику","choice_params":[{"name":"parent","path":["3220e251-ffcd-11e5-8303-e67fda7f6b46","3220e25b-ffcd-11e5-8303-e67fda7f6b46"]}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"external_formula":{"synonym":"Формула внешн.","multiline_mode":false,"tooltip":"В этом поле можно указать произвольный код на языке 1С для расчета внешней (дилерской) цены","choice_params":[{"name":"parent","path":["3220e251-ffcd-11e5-8303-e67fda7f6b46","3220e25b-ffcd-11e5-8303-e67fda7f6b46"]}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"extra_charge_external":{"synonym":"Наценка внешн.","multiline_mode":false,"tooltip":"Наценка внешней (дилерской) продажи по отношению к цене производителя, %. Перекрывается, если указан в лёгклм клиенте","type":{"types":["number"],"digits":5,"fraction_figits":2}},"discount_external":{"synonym":"Скидка внешн.","multiline_mode":false,"tooltip":"Скидка по умолчанию для внешней (дилерской) продажи по отношению к дилерской цене, %. Перекрывается, если указан в лёгклм клиенте","type":{"types":["number"],"digits":5,"fraction_figits":2}},"discount":{"synonym":"Скидка","multiline_mode":false,"tooltip":"Скидка по умолчанию, %","type":{"types":["number"],"digits":5,"fraction_figits":2}}},"attributes":{"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":200}}},"cachable":"doc_ram","form":{"selection":{"fields":["cat_price_groups.name as price_group","cat_parameters_keys.name as key","cat_formulas.name as condition_formula"],"cols":[{"id":"price_group","width":"*","type":"ro","align":"left","sort":"server","caption":"Ценовая группа"},{"id":"key","width":"*","type":"ro","align":"left","sort":"server","caption":"Ключ параметров"},{"id":"condition_formula","width":"*","type":"ro","align":"left","sort":"server","caption":"Формула условия"}]}}}},"areg":{},"dp":{"scheme_settings":{"name":"scheme_settings","synonym":"Варианты настроек","fields":{"scheme":{"synonym":"Текущая настройка","tooltip":"Текущий вариант настроек","mandatory":true,"type":{"types":["cat.scheme_settings"],"is_ref":true}}}},"builder_price":{"name":"builder_price","splitted":false,"synonym":"Цены номенклатуры","illustration":"Метаданные карточки цен номенклатуры","obj_presentation":"","list_presentation":"","hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":0,"fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"department":{"synonym":"Офис продаж","multiline_mode":false,"tooltip":"Подразделение продаж","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}}},"tabular_sections":{"goods":{"name":"Товары","synonym":"Цены","tooltip":"","fields":{"price_type":{"synonym":"Тип Цен","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom_prices_types"],"is_ref":true}},"date":{"synonym":"Дата","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"nom_characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"currency":{"synonym":"Валюта","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.currencies"],"is_ref":true}}}}},"cachable":"e1cib"},"buyers_order":{"name":"ЗаказПокупателя","splitted":false,"synonym":"УПзП: Заказ покупателя","illustration":"","obj_presentation":"","list_presentation":"","hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":0,"fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"sys":{"synonym":"Система","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.production_params"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"len":{"synonym":"Длина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"height":{"synonym":"Высота, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"depth":{"synonym":"Глубина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"s":{"synonym":"Площадь, м²","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"quantity":{"synonym":"Колич., шт","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":150}},"first_cost":{"synonym":"Себест. ед.","multiline_mode":false,"tooltip":"Плановая себестоимость единицы продукции","type":{"types":["number"],"digits":15,"fraction_figits":2}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"discount_percent":{"synonym":"Скидка %","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"discount_percent_internal":{"synonym":"Скидка внутр. %","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"discount":{"synonym":"Скидка","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"shipping_date":{"synonym":"Дата доставки","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"client_number":{"synonym":"Номер клиента","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":20}},"inn":{"synonym":"ИНН Клиента","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":20}},"shipping_address":{"synonym":"Адрес доставки","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":255}},"phone":{"synonym":"Телефон","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":100}},"price_internal":{"synonym":"Цена внутр.","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount_internal":{"synonym":"Сумма внутр.","multiline_mode":false,"tooltip":"Сумма внутренней реализации (холдинг) или внешней (от дилера конечному клиенту)","type":{"types":["number"],"digits":15,"fraction_figits":2}},"base_block":{"synonym":"Типовой блок","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}}},"tabular_sections":{"product_params":{"name":"ПараметрыИзделия","synonym":"Параметры продукции","tooltip":"","fields":{"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["product_params","param"]}],"choice_groups_elm":"elm","choice_type":{"path":["product_params","param"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"hide":{"synonym":"Скрыть","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}}},"production":{"name":"Продукция","synonym":"Продукция","tooltip":"","fields":{"inset":{"synonym":"Продукция","multiline_mode":false,"tooltip":"","choice_params":[{"name":"insert_type","path":["Изделие","МоскитнаяСетка","Подоконник","Откос","Заполнение"]},{"name":"available","path":true}],"choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["production","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"len":{"synonym":"Длина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"height":{"synonym":"Высота, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"depth":{"synonym":"Глубина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"s":{"synonym":"Площадь, м²","multiline_mode":false,"tooltip":"Площадь изделия","type":{"types":["number"],"digits":10,"fraction_figits":4}},"quantity":{"synonym":"Количество, шт","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":150}},"first_cost":{"synonym":"Себест. ед.","multiline_mode":false,"tooltip":"Плановая себестоимость единицы продукции","type":{"types":["number"],"digits":15,"fraction_figits":2}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"discount_percent":{"synonym":"Скидка %","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"ordn":{"synonym":"Ведущая продукция","multiline_mode":false,"tooltip":"ссылка на продукциию, к которой относится материал","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"qty":{"synonym":"Количество, шт","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}}}},"glass_specification":{"name":"СпецификацияЗаполнений","synonym":"Спецификация заполнений (ORDGLP)","tooltip":"","fields":{"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"sorting":{"synonym":"Порядок","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"inset":{"synonym":"Вставка","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}}}},"specification":{"name":"Спецификация","synonym":"Спецификация","tooltip":"","fields":{"elm":{"synonym":"№","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"dop":{"synonym":"Доп","multiline_mode":false,"tooltip":"Элемент дополнительной спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура/Набор","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_set","path":true}],"choice_groups_elm":"elm","type":{"types":["cat.inserts","cat.nom","cat.furns"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"handle_height_base":{"synonym":"Выс. ручк.","multiline_mode":false,"tooltip":"Стандартная высота ручки","type":{"types":["number"],"digits":6,"fraction_figits":0}},"handle_height_min":{"synonym":"Выс. ручк. min","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"handle_height_max":{"synonym":"Выс. ручк. max","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"contraction":{"synonym":"Укорочение","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"contraction_option":{"synonym":"Укороч. от","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.contraction_options"],"is_ref":true}},"coefficient":{"synonym":"Коэффициент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"flap_weight_min":{"synonym":"Масса створки min","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"flap_weight_max":{"synonym":"Масса створки max","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"side":{"synonym":"Сторона","multiline_mode":false,"tooltip":"Сторона фурнитуры, на которую устанавливается элемент или на которой выполняется операция","type":{"types":["number"],"digits":1,"fraction_figits":0}},"cnn_side":{"synonym":"Сторона соед.","multiline_mode":false,"tooltip":"Фильтр: выполнять операцию, если примыкающий элемент примыкает с заданной стороны","choice_groups_elm":"elm","type":{"types":["enm.cnn_sides"],"is_ref":true}},"offset_option":{"synonym":"Смещ. от","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.offset_options"],"is_ref":true}},"formula":{"synonym":"Формула","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"transfer_option":{"synonym":"Перенос опер.","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.transfer_operations_options"],"is_ref":true}},"is_main_specification_row":{"synonym":"Это строка основной спецификации","multiline_mode":false,"tooltip":"Интерфейсное поле (доп=0) для редактирования без кода","type":{"types":["boolean"]}},"is_set_row":{"synonym":"Это строка набора","multiline_mode":false,"tooltip":"Интерфейсное поле (Номенклатура=Фурнитура) для редактирования без кода","type":{"types":["number"],"digits":1,"fraction_figits":0}},"is_procedure_row":{"synonym":"Это строка операции","multiline_mode":false,"tooltip":"Интерфейсное поле (Номенклатура=Номенклатура И ТипНоменклатуры = Техоперация) для редактирования без кода","type":{"types":["number"],"digits":1,"fraction_figits":0}},"is_order_row":{"synonym":"Это строка заказа","multiline_mode":false,"tooltip":"Если \"Истина\", строка будет добавлена в заказ, а не в спецификацию текущей продукции","type":{"types":["boolean"]}},"origin":{"synonym":"Происхождение","multiline_mode":false,"tooltip":"Ссылка на настройки построителя, из которых возникла строка спецификации","choice_groups_elm":"elm","type":{"types":["cat.inserts","number","cat.cnns","cat.furns"],"is_ref":true,"digits":6,"fraction_figits":0}}}}},"cachable":"e1cib","form":{"obj":{"head":{" ":["calc_order"]},"tabular_sections":{"production":{"fields":["row","inset","clr","len","height","depth","s","quantity","note"],"headers":"№,Продукция,Цвет,Длина,Высота,Глубина,Площадь,Колич.,Комментарий","widths":"40,*,120,80,75,75,75,75,*","min_widths":"30,200,100,70,70,70,70,70,80","aligns":"center,left,left,right,right,right,right,right,left","sortings":"na,na,na,na,na,na,na,na,na","types":"cntr,ref,ref,calck,calck,calck,calck,calck,txt"},"inserts":{"fields":["inset","clr"],"headers":"Вставка,Цвет","widths":"*,*","min_widths":"90,90","aligns":"","sortings":"na,na","types":"ref,ref"}}}}},"builder_lay_impost":{"name":"builder_lay_impost","splitted":false,"synonym":"Импосты и раскладки","illustration":"","obj_presentation":"","list_presentation":"","hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":0,"fields":{"elm_type":{"synonym":"Тип элемента","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":["Импост","Раскладка","Рама"]}],"choice_groups_elm":"elm","type":{"types":["enm.elm_types"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"split":{"synonym":"Тип деления","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.lay_split_types"],"is_ref":true}},"elm_by_y":{"synonym":"Элементов","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":2,"fraction_figits":0}},"step_by_y":{"synonym":"Шаг","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":4,"fraction_figits":0}},"align_by_y":{"synonym":"Опора","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":["Низ","Верх","Центр"]}],"choice_groups_elm":"elm","type":{"types":["enm.positions"],"is_ref":true}},"inset_by_y":{"synonym":"Вставка","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"elm_by_x":{"synonym":"Элементов","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":2,"fraction_figits":0}},"step_by_x":{"synonym":"Шаг","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":4,"fraction_figits":0}},"align_by_x":{"synonym":"Опора","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":["Лев","Прав","Центр"]}],"choice_groups_elm":"elm","type":{"types":["enm.positions"],"is_ref":true}},"inset_by_x":{"synonym":"Вставка","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"w":{"synonym":"Ширина","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"h":{"synonym":"Высота","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}}},"tabular_sections":{},"cachable":"e1cib","form":{"obj":{"head":{" ":["elm_type","clr","split"],"Деление Y":["inset_by_y","elm_by_y","step_by_y","align_by_y"],"Деление X":["inset_by_x","elm_by_x","step_by_x","align_by_x"],"Габариты":["w","h"]}}}},"builder_pen":{"name":"builder_pen","splitted":false,"synonym":"Рисование","illustration":"Метаданные инструмента pen (рисование профилей) графического построителя","obj_presentation":"","list_presentation":"","hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":0,"fields":{"elm_type":{"synonym":"Тип элемента","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":["Рама","Импост","Раскладка","Добор","Соединитель","Водоотлив"]}],"choice_groups_elm":"elm","type":{"types":["enm.elm_types"],"is_ref":true}},"inset":{"synonym":"Материал профиля","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"bind_generatrix":{"synonym":"Магнит к профилю","multiline_mode":true,"tooltip":"","type":{"types":["boolean"]}},"bind_node":{"synonym":"Магнит к узлам","multiline_mode":true,"tooltip":"","type":{"types":["boolean"]}}},"tabular_sections":{},"cachable":"e1cib"},"builder_text":{"name":"builder_text","splitted":false,"synonym":"Произвольный текст","illustration":"Метаданные инструмента text графического построителя","obj_presentation":"","list_presentation":"","hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":0,"fields":{"text":{"synonym":"Текст","multiline_mode":true,"tooltip":"","type":{"types":["string"],"str_len":0}},"font_family":{"synonym":"Шрифт","multiline_mode":true,"tooltip":"Имя шрифта","type":{"types":["string"],"str_len":50}},"bold":{"synonym":"Жирный","multiline_mode":true,"tooltip":"","type":{"types":["boolean"]}},"font_size":{"synonym":"Размер","multiline_mode":true,"tooltip":"Размер шрифта","type":{"types":["number"],"digits":3,"fraction_figits":0}},"angle":{"synonym":"Поворот","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"align":{"synonym":"Выравнивание","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.text_aligns"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"x":{"synonym":"X коорд.","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"y":{"synonym":"Y коорд.","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}}},"tabular_sections":{},"cachable":"e1cib"}},"rep":{"materials_demand":{"name":"materials_demand","splitted":false,"synonym":"Потребность в материалах","illustration":"","obj_presentation":"","list_presentation":"","hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":0,"fields":{"calc_order":{"synonym":"Расчет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}},"formula":{"synonym":"Формула","multiline_mode":false,"tooltip":"","choice_params":[{"name":"parent","path":["3220e252-ffcd-11e5-8303-e67fda7f6b46","3220e251-ffcd-11e5-8303-e67fda7f6b46"]}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"scheme":{"synonym":"Вариант настроек","multiline_mode":false,"tooltip":"","choice_params":[{"name":"obj","path":"rep.materials_demand.specification"}],"choice_groups_elm":"elm","type":{"types":["cat.scheme_settings"],"is_ref":true}}},"tabular_sections":{"production":{"name":"Продукция","synonym":"Продукция","tooltip":"","fields":{"use":{"synonym":"Использование","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true},"choice_params":[{"name":"calc_order","path":{"not":"00000000-0000-0000-0000-000000000000"}}]},"qty":{"synonym":"Количество, шт","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}}}},"specification":{"name":"Спецификация","synonym":"Спецификация","tooltip":"","fields":{"calc_order":{"synonym":"Расчет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}},"product":{"synonym":"Изделие","multiline_mode":false,"tooltip":"Для продукции - номер строки заказа, для характеристики стеклопакета - номер элемента","type":{"types":["number"],"digits":6,"fraction_figits":0}},"cnstr":{"synonym":"№ Конструкции","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"Номер элемента, если значение > 0, либо номер конструкции, если значение < 0","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"article":{"synonym":"Артикул","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["specification","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"nom_kind":{"synonym":"Вид номенклатуры","multiline_mode":false,"tooltip":"Указывается вид, к которому следует отнести данную позицию номенклатуры.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom_kinds"],"is_ref":true}},"qty":{"synonym":"Количество (шт)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":6}},"len":{"synonym":"Длина, м","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":6}},"width":{"synonym":"Ширина, м","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":6}},"s":{"synonym":"Площадь, м²","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":6}},"material":{"synonym":"Материал","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":255}},"grouping":{"synonym":"Группировка","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"totqty":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":4}},"totqty1":{"synonym":"Количество (+%)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":4}},"alp1":{"synonym":"Угол 1, °","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"alp2":{"synonym":"Угол 2, °","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"sz":{"synonym":"Размер","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"price":{"synonym":"Себест.план","multiline_mode":false,"tooltip":"Цена плановой себестоимости строки спецификации","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount":{"synonym":"Сумма себест.","multiline_mode":false,"tooltip":"Сумма плановой себестоимости строки спецификации","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount_marged":{"synonym":"Сумма с наценкой","multiline_mode":false,"tooltip":"Вклад строки спецификации в стоимость изделия для сценария КМАРЖ_В_СПЕЦИФИКАЦИИ","type":{"types":["number"],"digits":15,"fraction_figits":2}}}}},"cachable":"e1cib"}},"cch":{"predefined_elmnts":{"name":"ПредопределенныеЭлементы","splitted":true,"synonym":"Константы и списки","illustration":"Хранит значения настроек и параметров подсистем","obj_presentation":"Значение настроек","list_presentation":"","input_by_string":["name","synonym"],"hierarchical":true,"has_owners":false,"group_hierarchy":false,"main_presentation_name":true,"code_length":0,"fields":{"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_type":{"path":["ТипЗначения"],"elm":0},"type":{"types":["cat.production_params","cat.currencies","cat.color_price_groups","cat.formulas","boolean","cat.nom_prices_types","cat.divisions","enm.elm_types","cat.parameters_keys","string","cat.nom_kinds","date","number","enm.planning_detailing","doc.calc_order","cat.nom","cat.furns","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date","digits":8,"fraction_figits":1}},"definition":{"synonym":"Описание","multiline_mode":true,"tooltip":"","type":{"types":["string"],"str_len":0}},"synonym":{"synonym":"Синоним","multiline_mode":false,"tooltip":"Синоним предопределенного элемента","mandatory":true,"type":{"types":["string"],"str_len":50}},"list":{"synonym":"Список","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":1,"fraction_figits":0}},"zone":{"synonym":"Область","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cch.predefined_elmnts"],"is_ref":true}},"type":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cat.production_params","cat.currencies","cat.color_price_groups","cat.formulas","boolean","cat.nom_prices_types","cat.divisions","enm.elm_types","cat.parameters_keys","string","cat.nom_kinds","date","number","enm.planning_detailing","doc.calc_order","cat.nom","cat.furns","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date","digits":8,"fraction_figits":1}}},"tabular_sections":{"elmnts":{"name":"Элементы","synonym":"Элементы","tooltip":"","fields":{"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_type":{"path":["ТипЗначения"],"elm":0},"type":{"types":["cat.production_params","cat.currencies","cat.color_price_groups","cat.formulas","boolean","cat.nom_prices_types","cat.divisions","enm.elm_types","cat.parameters_keys","string","cat.nom_kinds","date","number","enm.planning_detailing","doc.calc_order","cat.nom","cat.furns","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date","digits":8,"fraction_figits":1}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["cat.production_params","cat.currencies","cat.color_price_groups","cat.formulas","boolean","cat.nom_prices_types","cat.divisions","enm.elm_types","cat.parameters_keys","string","cat.nom_kinds","date","number","enm.planning_detailing","doc.calc_order","cat.nom","cat.furns","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date","digits":8,"fraction_figits":1}}}}},"cachable":"doc","form":{"obj":{"head":{" ":[{"id":"name","path":"o.name","synonym":"Наименование","type":"ro"},{"id":"synonym","path":"o.synonym","synonym":"Синоним","type":"ro"},"list","zone","value"]},"tabular_sections":{"elmnts":{"fields":["elm","value"],"headers":"Элемент,Значение","widths":"*,*","min_widths":"150,150","aligns":"","sortings":"na,na","types":"ref,ref"}}}}},"properties":{"name":"ДополнительныеРеквизитыИСведения","splitted":true,"synonym":"Дополнительные реквизиты и сведения","illustration":"","obj_presentation":"Дополнительный реквизит / сведение","list_presentation":"","input_by_string":["name"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":true,"code_length":0,"fields":{"extra_values_owner":{"synonym":"Владелец дополнительных значений","multiline_mode":false,"tooltip":"Свойство-образец, с которым у этого свойства одинаковый список дополнительных значений","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"available":{"synonym":"Доступен","multiline_mode":false,"tooltip":"Настройка доступности дополнительного реквизита","type":{"types":["boolean"]}},"shown":{"synonym":"Виден","multiline_mode":false,"tooltip":"Настройка видимости дополнительного реквизита","type":{"types":["boolean"]}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"Поясняет назначение свойства","type":{"types":["string"],"str_len":0}},"destination":{"synonym":"Набор свойств","multiline_mode":false,"tooltip":"Набор свойств, которому принадлежит уникальное свойство. Если не задан, значит свойство общее.","choice_groups_elm":"elm","type":{"types":["cat.destinations"],"is_ref":true}},"tooltip":{"synonym":"Подсказка","multiline_mode":false,"tooltip":"Показывается пользователю при редактировании свойства в форме объекта","type":{"types":["string"],"str_len":0}},"is_extra_property":{"synonym":"Это дополнительное сведение","multiline_mode":false,"tooltip":"Свойство является дополнительным сведением, а не дополнительным реквизитом","type":{"types":["boolean"]}},"caption":{"synonym":"Наименование","multiline_mode":false,"tooltip":"Краткое представление свойства, которое\nвыводится в формах редактирования его значения","mandatory":true,"type":{"types":["string"],"str_len":75}},"mandatory":{"synonym":"Заполнять обязательно","multiline_mode":false,"tooltip":"Настройка проверки заполненности дополнительного реквизита","type":{"types":["boolean"]}},"list":{"synonym":"Список","multiline_mode":false,"tooltip":"Реквизит подсистемы интеграции metadata.js - реализует функциональность списка опций","type":{"types":["number"],"digits":1,"fraction_figits":0}},"sorting_field":{"synonym":"Реквизит доп упорядочивания","multiline_mode":false,"tooltip":"Используется для сортировки в списках свойств (служебный)","type":{"types":["number"],"digits":5,"fraction_figits":0}},"include_to_name":{"synonym":"Включать в наименование","multiline_mode":false,"tooltip":"Добавлять значение параметра в наименование продукции","type":{"types":["boolean"]}},"include_to_description":{"synonym":"Включать в описание","multiline_mode":false,"tooltip":"Добавлять имя и значение параметра в строку описания продукции","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"type":{"synonym":"","multiline_mode":false,"tooltip":"Типы значения, которое можно ввести при заполнении свойства.","mandatory":true,"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","cat.property_values","boolean","cat.divisions","enm.align_types","cat.parameters_keys","cat.partners","cat.nonstandard_attributes","string","enm.sz_line_types","cat.organizations","date","cat.units","number","enm.planning_detailing","cat.work_shifts","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}}},"tabular_sections":{"extra_fields_dependencies":{"name":"ЗависимостиДополнительныхРеквизитов","synonym":"Зависимости дополнительных реквизитов","tooltip":"","fields":{"ЗависимоеСвойство":{"synonym":"Зависимое свойство","multiline_mode":false,"tooltip":"Имя свойства дополнительного реквизита, для которого настроена зависимость.","type":{"types":["string"],"str_len":0}},"field":{"synonym":"Реквизит","multiline_mode":false,"tooltip":"Имя реквизита формы или ссылка на дополнительный реквизит, от которого зависит текущий дополнительный реквизит.","choice_groups_elm":"elm","type":{"types":["string","cch.properties"],"str_len":99,"is_ref":true}},"condition":{"synonym":"Условие","multiline_mode":false,"tooltip":"Вид зависимости. \"Равно\", \"Не равно\", \"Заполнено\" или \"Не заполнено\".","type":{"types":["string"],"str_len":20}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение реквизита в условии.","choice_groups_elm":"elm","type":{"types":["cat.ПапкиЭлектронныхПисем","enm.caching_type","doc.work_centers_performance","enm.contact_information_types","enm.individual_legal","cat.nom_groups","enm.count_calculating_ways","enm.text_aligns","cat.production_params","cat.inserts","cat.price_groups","doc.credit_card_order","cat.nom_units","doc.planning_event","cch.predefined_elmnts","cat.currencies","enm.offset_options","enm.open_directions","doc.nom_prices_setup","enm.lay_split_types","cat.characteristics","cat.projects","cat.individuals","cat.users","cat.insert_bind","enm.cutting_optimization_types","enm.angle_calculating_ways","cat.partner_bank_accounts","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","doc.debit_bank_order","enm.specification_installation_methods","doc.registers_correction","cat.property_values_hierarchy","cat.formulas","cat.delivery_directions","enm.planning_phases","enm.contract_kinds","cat.property_values","boolean","enm.buyers_order_states","cat.banks_qualifier","doc.credit_cash_order","doc.selling","enm.order_categories","cat.nom_prices_types","cat.organization_bank_accounts","cat.divisions","cat.destinations","enm.elm_types","enm.color_price_group_destinations","enm.align_types","cat.parameters_keys","doc.purchase","enm.nom_types","cat.contact_information_kinds","cat.params_links","enm.contraction_options","cat.partners","cat.nonstandard_attributes","enm.transfer_operations_options","doc.debit_cash_order","string","enm.inserts_types","enm.sz_line_types","cat.nom_kinds","enm.orientations","cat.organizations","date","cat.countries","enm.mutual_contract_settlements","enm.inset_attrs_options","cat.units","number","enm.gender","enm.planning_detailing","doc.work_centers_task","cat.work_shifts","enm.impost_mount_options","doc.calc_order","enm.positions","doc.credit_bank_order","cat.cashboxes","enm.open_types","enm.cnn_types","cat.nom","enm.obj_delivery_states","cat.cnns","cat.furns","enm.inserts_glass_types","cat.cash_flow_articles","enm.vat_rates","enm.cnn_sides","enm.specification_order_row_types","cat.meta_ids","cat.contracts","cat.stores","cch.properties","cat.clrs"],"is_ref":true,"str_len":50,"date_part":"date","digits":10,"fraction_figits":0}}}}},"cachable":"ram"}},"cacc":{},"bp":{},"tsk":{},"syns_1с":["arcCCW","CH","RADIUS","Автор","Адрес","АдресБанка","АдресДоставки","АдресЭП","Аксессуар","Активная","Арт1Стеклопакет","Арт1ТолькоВертикальный","Арт2Стеклопакет","Арт2ТолькоВертикальный","Артикул","Атрибуты","БазоваяЕдиницаИзмерения","Банк","БанкДляРасчетов","Банки","БанковскиеСчета","БанковскиеСчетаКонтрагентов","БанковскиеСчетаОрганизаций","БанковскийСчет","БизнесПроцесс","БИКБанка","БИКБанкаДляРасчетов","Булево","Валюта","ВалютаВзаиморасчетов","ВалютаДенежныхСредств","ВалютаДокумента","ВалютаЦены","Валюты","ВариантАтрибутов","ВариантПереноса","ВариантСмещения","ВариантУкорочения","ВариантыАтрибутовВставок","ВариантыКрепленияИмпостов","ВариантыПереносаОпераций","ВариантыСмещений","ВариантыУкорочений","ВариантыУравнивания","ВводПоСтроке","ВедениеВзаиморасчетов","ВедениеВзаиморасчетовПоДоговорам","Ведомый","ВедущаяБаза","ВедущаяПродукция","ВедущаяФормула","Ведущий","ВедущийМенеджер","ВедущийЭлемент","ВерсияДанных","Вес","Вид","ВидДоговора","Виден","ВидЗатрат","ВидНоменклатуры","ВидОперации","ВидРабот","ВидРабочегоЦентра","ВидСкидкиНаценки","ВидСравнения","ВидСчета","ВидыДоговоровКонтрагентов","ВидыЗатрат","ВидыКонтактнойИнформации","ВидыНоменклатуры","ВидыРабочихЦентров","ВидыТранспортныхСредств","Визуализация","ВключатьВНаименование","ВключатьВОписание","Владелец","ВладелецДополнительныхЗначений","Владельцы","ВнутренниеЗаказы","ВремяИзменения","ВремяНачала","ВремяОкончания","ВремяСобытия","Всего","Вставка","Вставки","ВходящееИсходящееСобытие","ВыборГруппИЭлементов","Выполнена","ВыпуклаяДуга","Высота","ВысотаМакс","ВысотаМин","ВысотаРучки","ВысотаРучкиМакс","ВысотаРучкиМин","ВысотаРучкиФиксирована","Глубина","Город","ГородБанка","ГородБанкаДляРасчетов","Готовность","ГрафикРаботы","Группировка","ГруппыФинансовогоУчетаНоменклатуры","ДаНет","Дата","ДатаДоставки","ДатаИзменения","ДатаНачала","ДатаОкончания","ДатаРождения","ДатаСобытия","ДебетКредит","Действие","ДержатьРезервБезОплатыОграниченноеВремя","ДетализацияПланирования","ДеятельностьПрекращена","Длина","ДлинаКода","ДлинаМакс","ДлинаМин","ДлинаНомера","ДлинаПроема","ДнейДоГотовности","ДнейОтГотовности","ДниНедели","ДоговорКонтрагента","ДоговорыКонтрагентов","Документ.Расчет","ДокументУдостоверяющийЛичность","Долгота","ДоменноеИмяСервера","Доп","ДополнительныеРеквизиты","ДополнительныеРеквизитыИСведения","ДополнительныеСведения","ДопускаютсяНезамкнутыеКонтуры","ДопустимаяСуммаЗадолженности","ДопустимоеЧислоДнейЗадолженности","Доступен","ЕдиницаИзмерения","ЕдиницаПоКлассификатору","ЕдиницаХраненияОстатков","ЕдиницыИзмерения","Завершен","Завершение","ЗависимостиДополнительныхРеквизитов","Заголовок","Заказ","Заказной","ЗаказПокупателя","ЗаказПоставщику","Закрыт","Запасы","Заполнения","ЗаполнятьОбязательно","Запуск","Значение","ЗначениеЗаполнения","Значения","ЗначенияПолей","ЗначенияПолейАдреса","ЗначенияСвойствОбъектов","ЗначенияСвойствОбъектовИерархия","Идентификатор","ИдентификаторПользователяИБ","ИдентификаторПользователяСервиса","ИдентификаторыОбъектовМетаданных","Иерархический","ИерархияГруппИЭлементов","Изделие","ИмяПредопределенныхДанных","Инд","Индекс","ИндивидуальныйПредприниматель","ИНН","ИнтеграцияВидыСравнений","ИнтеграцияКешСсылок","ИнтеграцияНастройкиОтчетовИСписков","ИнтеграцияСостоянияТранспорта","ИнтеграцияТипВыгрузки","ИнтеграцияТипКеширования","ИнтеграцияТипСвёртки","Исполнители","Исполнитель","ИтогСебестоимость","Календари","КалендариGoogle","Календарь","Камеры","Касса","Кассы","КатегорииЗаказов","Категория","КлассификаторБанковРФ","КлассификаторЕдиницИзмерения","КлиентДилера","Ключ","КлючиПараметров","КМарж","КМаржВнутр","КМаржМин","Код","КодАльфа2","КодАльфа3","КодИМНС","КодПоОКПО","КодЦветаДляСтанка","Количество","КоличествоСторон","Комментарий","Конструкции","Конструкция","КонтактнаяИнформация","КонтактныеЛица","КонтактныеЛицаКонтрагентов","Контрагент","Контрагенты","КонтролироватьСуммуЗадолженности","КонтролироватьЧислоДнейЗадолженности","КонцевыеКрепления","Координата","Координаты","КоординатыЗаполнений","КорректировкаРегистров","КоррСчет","КоррСчетБанка","КоррСчетБанкаДляРасчетов","Коэффициент","КоэффициентПотерь","КПП","Кратность","КратностьВзаиморасчетов","КрепитсяШтульп","КреплениеИмпостов","КреплениеШтульпа","Кривой","Курс","КурсВзаиморасчетов","КурсыВалют","ЛеваяПравая","Листовые","Маржа","Марка","Масса","МассаМакс","МассаМин","МассаСтворкиМакс","МассаСтворкиМин","Материал","МатериалОперация","Материалы","МеждународноеСокращение","Менеджер","МестоРождения","МногострочныйРежим","МожноПоворачивать","Москитка","Москитки","МощностиРЦ","Мощность","Набор","НаборСвойств","НаборФурнитуры","НаборыДополнительныхРеквизитовИСведений","НазначениеЦветовойГруппы","НазначенияЦветовыхГрупп","Наименование","НаименованиеБанка","НаименованиеПолное","НаименованиеСокращенное","НалогообложениеНДС","Направление","НаправленияДоставки","НаПроем","НарядРЦ","НастройкиОткрывания","Наценка","НаценкаВнешн","Недействителен","НеполноеОткрывание","НеРаботаетВремяНачала","НеРаботаетВремяОкончания","Нестандарт","Номенклатура","Номенклатура1","Номенклатура2","НоменклатурнаяГруппа","Номер","НомерВнутр","НомерКлиента","НомерКонтура","НомерОтдела","НомерСтроки","НомерСчета","НомерТелефона","НомерТелефонаБезКодов","ОбластиДоступаGoogle","Область","Объект","ОбъектДоступа","ОбъектыДоступа","Объем","ОбязательноеЗаполнение","ОграниченияСпецификации","ОкруглятьВБольшуюСторону","ОкруглятьКоличество","Описание","ОплатаОтПокупателяПлатежнойКартой","Организации","Организация","Ориентация","ОриентацияЭлемента","ОсновнаяВалюта","ОсновнаяСтатьяДвиженияДенежныхСредств","ОсновноаяКасса","ОсновноеКонтактноеЛицо","ОсновноеПредставлениеИмя","ОсновнойБанковскийСчет","ОсновнойДоговорКонтрагента","ОсновнойМенеджерПокупателя","ОсновнойПроект","ОснЦвет","ОсьПоворота","Отбор","Ответственный","ОтражатьВБухгалтерскомУчете","ОтражатьВНалоговомУчете","Отступы","Параметр","Параметры","ПараметрыВыбора","ПараметрыИзделия","ПараметрыОтбора","ПараметрыПрописиНаРусском","ПараметрыФурнитуры","ПарныйРаскрой","Период","ПериодыСмены","пзВизуализацияЭлементов","пзВыравниваниеТекста","пзМаржинальныеКоэффициентыИСкидки","пзНаправлениеОткрывания","пзПараметрыПродукции","пзСоединения","пзСторонаСоединения","пзФурнитура","пзЦвета","Планирование","ПлатежноеПоручениеВходящее","ПлатежноеПоручениеИсходящее","ПлатежныйКалендарь","Плотность","Площадь","ПлощадьМакс","ПлощадьМин","ПлощадьППМ","Поворачивать","ПоДоговоруВЦелом","Подразделение","ПодразделениеПроизводства","Подразделения","Подсказка","Подчиненый","ПоЗаказам","ПоКонтуру","Покупатель","Пол","ПолноеИмя","Положение","ПоложениеСтворокПоИмпостам","ПоложениеЭлемента","Получатель","ПолФизическихЛиц","Пользователи","ПометкаУдаления","ПорогОкругления","Порядок","ПорядокОкругления","Поставщик","ПоступлениеТоваровУслуг","ПоСчетам","ПоУмолчанию","Пояснение","Предоплата","ПредопределенныеЭлементы","Предопределенный","Представление","ПредставлениеИдентификатора","ПредставлениеОбъекта","ПредставлениеСписка","Префикс","Привязки","ПривязкиВставок","ПризнакиНестандартов","Принудительно","Приоритет","Припуск","ПриходныйКассовыйОрдер","Проведен","Продукция","Проект","Проекты","Происхождение","Пропорции","Процент","ПроцентАвтоматическихСкидок","ПроцентПредоплаты","ПроцентСкидкиНаценки","ПроцентСкидкиНаценкиВнутр","Прочее","Прямоугольный","ПутьSVG","РаботаетВремяНачала","РаботаетВремяОкончания","Работники","Работы","РабочиеЦентры","Разделитель","Размер","Размер_B","РазмерМакс","РазмерМин","РазмерФальца","РазмерФурнПаза","РазныеЦвета","Район","РайоныДоставки","Раскладка","РасходныйКассовыйОрдер","Расценка","Расчет","РасчетныйСчет","РасчетыСКонтрагентами","РасширенныйРежим","РасшифровкаПлатежа","РеализацияТоваровУслуг","Регион","Реквизит","РеквизитДопУпорядочивания","Реквизиты","Родитель","РучкаНаСтороне","СвидетельствоДатаВыдачи","СвидетельствоКодОргана","СвидетельствоНаименованиеОргана","СвидетельствоСерияНомер","СВИФТБИК","Свойство","Связи","СвязиПараметров","СвязиПараметровВыбора","СвязьПоТипу","Сделка","Себестоимость","Синоним","Система","СистемыПрофилей","СистемыФурнитуры","Скидка","СкидкаВнешн","СкидкиНаценки","Склад","Склады","СКомиссионером","СКомитентом","Скрыть","Сложный","Служебный","Смена","Смены","Смещение","Событие","СобытиеПланирования","Содержание","Соедин","СоединяемыеЭлементы","Соответствие","СоответствиеЦветов","СортировкаВЛистеКомплектации","Состав","Состояние","СостояниеТранспорта","СостоянияЗаданий","СостоянияЗаказовКлиентов","Сотрудник","Сотрудники","Спецификации","Спецификация","СпецификацияЗаполнений","Список","СПокупателем","СпособРасчетаКоличества","СпособРасчетаУгла","СпособУстановкиКурса","СпособыРасчетаКоличества","СпособыРасчетаУгла","СпособыУстановкиКурсаВалюты","СпособыУстановкиСпецификации","СПоставщиком","СрокДействия","Ссылка","СтавкаНДС","СтавкиНДС","СтандартнаяВысотаРучки","Старт","Стартован","СтатусыЗаказов","СтатьиДвиженияДенежныхСредств","СтатьиЗатрат","СтатьяДвиженияДенежныхСредств","СтатьяЗатрат","Створка","СтворкиВРазныхПлоскостях","Стоимость","Сторона","Сторона1","Сторона2","СторонаСоединения","СторонаЭлемента","Страна","СтраныМира","СтраховойНомерПФР","стрНомер","Строка","СтрокаПодключения","СтруктурнаяЕдиница","Сумма","СуммаАвтоматическойСкидки","СуммаВзаиморасчетов","СуммаВключаетНДС","СуммаВнутр","СуммаДокумента","СуммаНДС","СуммаСНаценкой","СуммаУпр","Суффикс","СчетУчета","ТаблицаРегистров","ТабличнаяЧасть","ТабличныеЧасти","ТекстКорреспондента","ТекстНазначения","ТекстоваяСтрока","Телефон","Телефоны","ТелефоныБанка","Тип","ТипВставки","ТипВставкиСтеклопакета","ТипДеления","ТипДенежныхСредств","ТипИсходногоДокумента","ТипНоменклатуры","ТиповойБлок","ТиповыеБлоки","ТипОптимизации","ТипОткрывания","ТипСоединения","ТипСчета","ТипЦен","ТипЦенВнутр","ТипЦенПрайс","ТипЦенСебестоимость","ТипыВставок","ТипыВставокСтеклопакета","ТипыДеленияРаскладки","ТипыДенежныхСредств","ТипыКонтактнойИнформации","ТипыНалогообложенияНДС","ТипыНоменклатуры","ТипыОптимизацийРаскроя","ТипыОткрывания","ТипыРазмерныхЛиний","ТипыСобытий","ТипыСоединений","ТипыСтрокВЗаказ","ТипыСтруктурныхЕдиниц","ТипыСчетов","ТипыЦенНоменклатуры","ТипыЭлементов","ТипЭлемента","Товары","Толщина","ТолщинаМакс","ТолщинаМин","ТолькоДляПрямыхПрофилей","ТолькоДляЦенообразования","ТочкаМаршрута","ТранспортныеСредства","УголКГоризонту","УголКГоризонтуМакс","УголКГоризонтуМин","УголМакс","УголМин","УголРеза1","УголРеза2","УголШага","УдлинениеАрки","Узел1","Узел2","Укорочение","УкорочениеПоКонтуру","Упаковка","Управленческий","Условие","УсловныхИзделий","Услуги","УстанавливатьСпецификацию","УстановкаЦенНоменклатуры","УточнятьРайонГеокодером","УчитыватьНДС","Фаза","ФазыПланирования","ФизическиеЛица","ФизическоеЛицо","Финиш","Формула","ФормулаВнешн","ФормулаВнутр","ФормулаПродажа","ФормулаРасчетаКурса","ФормулаУсловия","Формулы","Фурнитура","ФурнитураЦвет","Характеристика","ХарактеристикаАксессуаров","ХарактеристикаНоменклатуры","ХарактеристикаПродукции","ХарактеристикиНоменклатуры","Цвет","Цвет1","Цвет2","ЦветRAL","Цвета","ЦветВРисовалке","ЦветИзнутри","Цветной","ЦветоваяГруппа","ЦветоЦеновыеГруппы","ЦветСнаружи","Цена","ЦенаВключаетНДС","ЦенаВнутр","ЦеноваяГруппа","ЦеновыеГруппы","Центрировать","ЦеныНоменклатуры","Число","ЧислоДнейРезерваБезОплаты","Шаблон","Шаг","Ширина","ШиринаПилы","Широта","Шкала","Штуки","ШтульпБезимпСоед","Экземпляр","Элемент","Элемент1","Элемент2","Элементы","Эскиз","ЭтоАксессуар","ЭтоГруппа","ЭтоДополнительноеСведение","ЭтоНабор","ЭтоОсновнойЭлемент","ЭтоРаздвижка","ЭтоСоединение","ЭтоСтрокаЗаказа","ЭтоСтрокаНабора","ЭтоСтрокаОперации","ЭтоСтрокаОсновнойСпецификации","ЭтоСтрокаСочетанияНоменклатур","ЭтоТехоперация","ЭтоУслуга","ЮрЛицо","ЮрФизЛицо","Ячейка","Ячейки"],"syns_js":["arc_ccw","changed","arc_r","author","address","bank_address","shipping_address","email_address","accessory","active","art1glass","art1vert","art2glass","art2vert","article","attributes","base_unit","bank","settlements_bank","banks","bank_accounts","partner_bank_accounts","organization_bank_accounts","bank_account","buisness_process","bank_bic","settlements_bank_bic","boolean","currency","settlements_currency","funds_currency","doc_currency","price_currency","currencies","attrs_option","transfer_option","offset_option","contraction_option","inset_attrs_options","impost_mount_options","transfer_operations_options","offset_options","contraction_options","align_types","input_by_string","mutual_settlements","mutual_contract_settlements","slave","leading_base","leading_product","leading_formula","master","leading_manager","leading_elm","data_version","heft","kind","contract_kind","shown","cost_kind","nom_kind","transactions_kind","work_kind","work_center_kind","charges_discounts_kind","comparison_type","account_kind","contract_kinds","costs_kinds","contact_information_kinds","nom_kinds","work_center_kinds","motor_vehicle_kinds","visualization","include_to_name","include_to_description","owner","extra_values_owner","owners","internal_orders","change_time","begin_time","end_time","event_time","altogether","inset","inserts","inbound_outbound","choice_groups_elm","completed","arc_available","height","hmax","hmin","h_ruch","handle_height_max","handle_height_min","fix_ruch","depth","city","bank_city","settlements_bank_city","readiness","worker_schedule","grouping","nom_groups","yes_no","date","shipping_date","change_date","start_date","expiration_date","birth_date","event_date","debit_credit","action","check_days_without_pay","planning_detailing","activity_ceased","len","code_length","lmax","lmin","number_doc_len","aperture_len","days_to_execution","days_from_execution","week_days","contract","contracts","Документ.итРасчет","identification_document","longitude","server_domain_name","dop","extra_fields","properties","extra_properties","allow_open_cnn","allowable_debts_amount","allowable_debts_days","available","unit","qualifier_unit","storage_unit","nom_units","finished","completion","extra_fields_dependencies","caption","invoice","made_to_order","buyers_order","purchase_order","closed","inventories","glasses","mandatory","launch","value","fill_value","values","values_fields","address_fields","property_values","property_values_hierarchy","identifier","user_ib_uid","user_fresh_uid","meta_ids","hierarchical","group_hierarchy","product","predefined_name","icounter","ind","individual_entrepreneur","inn","comparison_types","integration_links_cache","scheme_settings","obj_delivery_states","unload_type","caching_type","reduce_type","executors","executor","first_cost_total","calendars","calendars_google","calendar","coffer","cashbox","cashboxes","order_categories","category","banks_qualifier","units","client_of_dealer","key","parameters_keys","marginality","marginality_internal","marginality_min","id","alpha2","alpha3","imns_code","okpo","machine_tools_clr","quantity","side_count","note","constructions","cnstr","contact_information","contact_persons","contact_persons_partners","partner","partners","check_debts_amount","check_debts_days","end_mount","coordinate","coordinates","glass_coordinates","registers_correction","correspondent_account","bank_correspondent_account","settlements_bank_correspondent_account","coefficient","loss_factor","kpp","multiplicity","settlements_multiplicity","shtulp_fix_here","impost_fixation","shtulp_fixation","crooked","course","settlements_course","currency_courses","left_right","is_sandwich","margin","brand","weight","mmax","mmin","flap_weight_max","flap_weight_min","material","material_operation","materials","international_short","manager","birth_place","multiline_mode","can_rotate","mskt","mosquito","work_centers_performance","performance","set","destination","furn_set","destinations","color_price_group_destination","color_price_group_destinations","name","bank_name","name_full","name_short","vat","direction","delivery_directions","on_aperture","work_centers_task","open_tunes","extra_charge","extra_charge_external","invalid","partial_opening","not_work_begin_time","not_work_end_time","nonstandard","nom","nom1","nom2","nom_group","number_doc","number_internal","client_number","contour_number","number_division","row","account_number","phone_number","phone_without_codes","google_access_areas","area","obj","acl_obj","acl_objs","volume","mandatory_fields","specification_restrictions","rounding_in_a_big_way","rounding_quantity","definition","credit_card_order","organizations","organization","orientation","orientations","main_currency","main_cash_flow_article","main_cashbox","primary_contact","main_presentation_name","main_bank_account","main_contract","buyer_main_manager","main_project","default_clr","rotation_axis","selection","responsible","accounting_reflect","tax_accounting_reflect","offsets","param","params","choice_params","product_params","selection_params","parameters_russian_recipe","furn_params","double_cut","period","work_shift_periodes","elm_visualization","text_aligns","margin_coefficients","open_directions","production_params","cnns","cnn_sides","furns","clrs","planning","debit_bank_order","credit_bank_order","calendar_payments","density","s","smax","smin","coloration_area","rotate","by_entire_contract","department","department_manufactory","divisions","tooltip","has_owners","by_orders","by_contour","is_buyer","sex","full_moniker","pos","flap_pos_by_impost","positions","recipient","gender","users","_deleted","rounding_threshold","sorting","rounding_order","is_supplier","purchase","by_invoices","by_default","illustration","prepayment","predefined_elmnts","predefined","presentation","identifier_presentation","obj_presentation","list_presentation","prefix","bindings","insert_bind","nonstandard_attributes","forcibly","priority","overmeasure","debit_cash_order","posted","production","project","projects","origin","proportions","rate","discount_percent_automatic","prepayment_percent","discount_percent","discount_percent_internal","others","is_rectangular","svg_path","work_begin_time","work_end_time","workers","jobs","work_centers","delimiter","sz","sizeb","sz_max","sz_min","sizefaltz","sizefurn","varclr","delivery_area","delivery_areas","lay","credit_cash_order","pricing","calc_order","current_account","invoice_payments","extended_mode","payment_details","selling","region","field","sorting_field","fields","parent","handle_side","certificate_date_issue","certificate_authority_code","certificate_authority_name","certificate_series_number","swift","property","links","params_links","choice_links","choice_type","trans","first_cost","synonym","sys","sys_profile","sys_furn","discount","discount_external","charges_discounts","warehouse","stores","with_commission_agent","with_committent","hide","difficult","ancillary","work_shift","work_shifts","offset","event","planning_event","content","cnn","cnn_elmnts","conformity","clr_conformity","complete_list_sorting","composition","state","obj_delivery_state","task_states","buyers_order_states","employee","staff","specifications","specification","glass_specification","list","with_buyer","count_calc_method","angle_calc_method","course_installation_method","count_calculating_ways","angle_calculating_ways","course_installation_methods","specification_installation_methods","with_supplier","validity","ref","vat_rate","vat_rates","handle_height_base","start","started","invoice_conditions","cash_flow_articles","cost_items","cash_flow_article","cost_item","flap","var_layers","cost","side","sd1","sd2","cnn_side","elm_side","country","countries","pfr_number","number_str","string","connection_str","organizational_unit","amount","discount_amount_automatic","amount_mutual","vat_included","amount_internal","doc_amount","vat_amount","amount_marged","amount_operation","suffix","account_accounting","registers_table","tabular_section","tabular_sections","correspondent_text","appointments_text","txt_row","phone","phone_numbers","bank_phone_numbers","type","insert_type","insert_glass_type","split_type","cash_flow_type","original_doc_type","nom_type","base_block","base_blocks","cutting_optimization_type","open_type","cnn_type","account_type","price_type","price_type_internal","price_type_sale","price_type_first_cost","inserts_types","inserts_glass_types","lay_split_types","cash_flow_types","contact_information_types","vat_types","nom_types","cutting_optimization_types","open_types","sz_line_types","event_types","cnn_types","specification_order_row_types","structural_unit_types","account_types","nom_prices_types","elm_types","elm_type","goods","thickness","tmax","tmin","for_direct_profile_only","for_pricing_only","buisness_process_point","transport_means","angle_hor","ahmax","ahmin","amax","amin","alp1","alp2","step_angle","arc_elongation","node1","node2","contraction","contraction_by_contour","packing","managerial","condition","condition_products","services","set_specification","nom_prices_setup","specify_area_by_geocoder","vat_consider","phase","planning_phases","individuals","individual_person","finish","formula","external_formula","internal_formula","sale_formula","course_calc_formula","condition_formula","formulas","furn","clr_furn","characteristic","accessory_characteristic","nom_characteristic","product_characteristic","characteristics","clr","clr1","clr2","ral","colors","clr_str","clr_in","colored","clr_group","color_price_groups","clr_out","price","vat_price_included","price_internal","price_group","price_groups","do_center","nom_prices","number","days_without_pay","template","step","width","saw_width","latitude","scale","is_pieces","shtulp_available","specimen","elm","elm1","elm2","elmnts","outline","is_accessory","is_folder","is_extra_property","is_set","is_main_elm","is_sliding","is_cnn","is_order_row","is_set_row","is_procedure_row","is_main_specification_row","is_nom_combinations_row","is_procedure","is_service","legal_person","individual_legal","cell","cells"]});

/**
 * Установка параметров по умолчанию из package.json
 */
